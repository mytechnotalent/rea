{"docstore/metadata": {"a0e08835-711d-4e28-922f-fb2f7f064c48": {"doc_hash": "5cabacfbf2d0efe6b2f07b6aaa65bb870e3408cc65b2512f63dfb12b18af15c8"}, "05dfabb5-3112-4b47-af4a-646e0c95be46": {"doc_hash": "97217069ea8db8ba70f1cd31a9638e0fd5acce6e783ef74260a9ad26ba739fdc"}, "d9e6e873-3fbe-4314-ada2-b68012438a80": {"doc_hash": "aaa11745824d3e5e4ada44f3f644b4342eface9d2545912912b3c08a410402f3"}, "b56b7d02-0233-4e75-bda4-16d20021e50f": {"doc_hash": "5aaca2d6c718a8c9ba3adc1bcbfc6c00f3e963c838246441eb427912b53e1e7f"}, "d5a760ff-6b1b-4c7f-b3df-c99eb876023b": {"doc_hash": "57ec0ecd7dce5220793a8f89ba1adb7bf190388ce13709c542781b46aacba9cd"}, "f43b82e4-1424-4d61-8690-7e518485ae6d": {"doc_hash": "aaa8a06f7bf863f39cefecf84ac6f8140e444f5fbe8bf89ceaaec123e545ca81"}, "2776cc63-94eb-44bc-afb1-dc3edb5c7058": {"doc_hash": "98efef3eefb150801a1f55ba25501e44e55a20a12fae4cc054a77b54555daa74"}, "17d92989-e6b1-4ff6-b817-b030decf673b": {"doc_hash": "1889dae261c07e8868cc010850a4b41c91a66c663333500b282468e12a7fb8f6"}, "453e8ff1-2c38-47b7-9737-1b14d5db58d8": {"doc_hash": "85944515d48051b19c3a01796ba48ab9737d0ae2451ab70b378c5bb5beee62ba"}, "001678e3-b82a-4ec7-b18d-03ca81bec483": {"doc_hash": "117d62292d83efc2fb5531f8edc1704ca6be51724fb7f39b736d7bc14ef611ae"}, "92a35a12-a98c-470e-9113-1ea60b56548c": {"doc_hash": "019fe34e10ac04c897e00ebf61a9df208111c1f957fa19c9729b51b7b2eb7f7b"}, "9b1e9e4f-7616-4404-8825-3341066102d8": {"doc_hash": "31635578c7208366c69ecbd83653dcff709aa4986aad5113b811ace5fe0d2fad"}, "dff8ab15-4d9e-4211-b477-c81282473175": {"doc_hash": "42c05058cc886623623b8db97efe5d3d0bbadc2826af5f7a681b7c708ba473bb"}, "6ee0e2a5-4ac9-4b73-aeb4-0abb2bc90848": {"doc_hash": "3a644c24c22174e51c7628b95bf4b2d269bd20e06a6c3e8a8d6d25ce503b5ab0"}, "9f73fc41-9cd8-43fd-9563-bb2a4c9ba85b": {"doc_hash": "160e61cc5274f6582f61bdbc18c1166d19c1361e784619cce76763f02e33d81f"}, "aa998532-d86d-4132-b45c-c59c082f9446": {"doc_hash": "8e28785ecceb64753fadd718052b91a1c18122ea2d99c60d2f7e3039e1725299"}, "d8aeac3b-80d6-434e-a88b-c769632035e3": {"doc_hash": "c03f84fb2e93e066166256ecbe9480b755584495db693b93e9eb4d514292c6bc"}, "04972e5d-a642-48ad-9870-1b8f5a3ec119": {"doc_hash": "f58b982240ae9a43d386763ddac4315e544a9c7daafe615a444ae4a048f3177d"}, "e567217f-3bf1-4575-9074-be87278fa136": {"doc_hash": "886cc771ad2d0a503d8c4343a32b187525b5b73454024fdcc242f920ec5ed82f"}, "59d6e898-b3aa-489d-b098-7c48b54e7b65": {"doc_hash": "1c1ee565271142a43fd2db2a28e9bd9cf143d818507605d819bec3a9b03aa7c6"}, "b8820a50-6eb9-44b8-96ca-17b6d4e0a424": {"doc_hash": "36b1d418e9212c35edde1cbdd2b89a4f9daac2fc5060c8379ed31368eb834aae"}, "ce926670-e282-4cda-8ed8-d165b9ddc037": {"doc_hash": "4ba56df0ec96a04fe7d3e79ab210e52cf36a45af38f19f0e3d9831c810a3244c"}, "97935c74-f21d-4f82-80de-c9a8d3631c0c": {"doc_hash": "3202406e0c0f25a4807a4f3c065af615cfaef5985639af251f6376e2fcd0c015"}, "80bb29a5-496e-4b07-8a53-f3593a56e1ae": {"doc_hash": "9d3d7fc4337edfde166ff6785f84e390930927e5be5e76435cc853e0d11bf66f"}, "936d2e6a-7107-4b7b-82c4-ab0d661309e3": {"doc_hash": "a3a127139dfb7fbe8aa84f0497944a817271e57c0c136d9c8fcd345a63b96df7"}, "c43193b4-f754-4791-afbe-de7881ba530f": {"doc_hash": "8c4a30c39754061be056eacc506a43058840f7ccf1e36e6814a82e2f964e9ebd"}, "afcac854-32ec-4ce8-9df6-7d1af887fa05": {"doc_hash": "6be91072496cc6b426adf6e928bdf53685615716fc880afb8cc0e38765f47cab"}, "74b13dd1-6d0a-488a-a112-3a6213296efc": {"doc_hash": "b3fecdb10aa5f8c47c4806de007c8fe30a9c9f2cef9334f7979d698f7d2c3143"}, "875a3fbf-9f56-4eed-96ef-506664e2f5d4": {"doc_hash": "b01ab6230af1031365576433c0e0d2c75a1546d734bcf02bbdd3a0da7dda2940"}, "09e14734-1b90-4bab-a011-e88b3c97d117": {"doc_hash": "da8007ba44e804042bb401786f19e96fd56f566f0c57a6d962ceacdc0beab5b7"}, "984f2bbb-568b-4f6f-9411-b670e4ee6a04": {"doc_hash": "3d85a86aa8b892f50fd30f5b8ecdb24a62e5852b63590881d4f715bb4d503944"}, "db650133-06a9-4cf3-87cf-c5e28ff28731": {"doc_hash": "de9e762eb4c902d535f143f3a05fa92a08aa6673e9c5addd69411956efdde4b3"}, "a171f1a3-18c1-49dd-b34d-208919f28b4d": {"doc_hash": "3284280b20a8b398670ad19fd213ca00cb16be44bfcf0a1814df23da01add4cd"}, "7bfc252e-c1bb-4d0c-b6a8-c5ab7f2fb6c5": {"doc_hash": "240140b449309b5a529ecb84d5a467359b524e9cae7fa49cd271f6219be5fb7c"}, "b2659654-65cc-4611-8aeb-f1a6533a5646": {"doc_hash": "09e3fbc1b46c0a6b89c2e5a7438418ebc3b56a6ef509b0b8ffb9dc2769fe2578"}, "a2a22528-4dbc-4f43-9858-c09203080aa5": {"doc_hash": "266642cc961d5619e7fa71f7a4c9cce969fbf086c932051693aa49e4cbff7eb1"}, "bfa13395-a00a-42af-a3a9-4a6ac4ad29fb": {"doc_hash": "4779c6d384be37940ca529fbf3efa68b68435e69dfcdde98258278bd69a80782"}, "64d838a8-b7cf-4a1f-8f0f-e82c15232721": {"doc_hash": "6fd51c873bc9df008a319ebc317e6f5f553723504105e5237b3ab617d4510553"}, "c994e818-ca4f-47f4-98ad-2a54038464ad": {"doc_hash": "0c8d21d004daed2af5d2c48eb19c044fa0c55e43e468bc8a67d50b44c4a3e323"}, "de0b5dfb-228e-4e63-a50d-e8376e7ebe80": {"doc_hash": "30b165b3530479b3a8cb18474a04a3e7b97c62aa600135011755972ebd00fd34"}, "a4b188db-7135-4fb1-a1ef-014ea6ce0e9d": {"doc_hash": "fc9186649c1ece90990254766642de055b722059f3223ff1ed74297165d2bb7f"}, "f9fa1a91-2aa1-4e61-844c-d539917435f0": {"doc_hash": "e83a09548fb980691e658ff7f2cac517f13e205672d5f73d70084cfc9724b2c4"}, "fcef21a1-dcaa-4722-90e3-a4ddee8bbb1b": {"doc_hash": "0f7b67b48f66118198da01ba6a88fade8a6e7029360a56dc3da240d10879355d"}, "12550949-ac4c-42ce-bb79-7f8f05bc1b52": {"doc_hash": "79ed10d5e6cb67f58cb10be716920521b2dbc98a80dbec56306260ccbdd873d1"}, "a02f4137-5276-4d59-a18e-0df1501011c1": {"doc_hash": "aa373b7213b9aec54dd07c8098dd20ef5b0c2d723c37bf3743287ba41fdcfe9a"}, "80a9a333-b89a-4465-8dfc-9be0ef02a7a1": {"doc_hash": "03b2333fea28faa8d69344aada436f16f191f5625bb18e2ad89d137f693247c3"}, "85035baf-8b1b-4672-8800-8c10264402d2": {"doc_hash": "c1476d500adfa120273cda31e890ea518b76849bcf215f0a08fe745332886c70"}, "d5821e24-e683-46de-bbed-0d62b83a96c4": {"doc_hash": "5481358153970e2ffd57bacf61c443bd3170e54481998b0c7221f0bb86cf24df"}, "3d92b984-6ce9-442e-8103-29d07961e070": {"doc_hash": "25ec167d5ec7a35e006d596dea24d107855cc5662e3475e13d2856f199aa5fe2"}, "fe211cd5-efb3-4da2-9f7d-0f6fb2bddbb3": {"doc_hash": "52cc3a2e7aed3eeb9e7b12d1f2b387cfefccc7e950ee1a41feb75a3bfd77f2c3"}, "15e07a6f-76ce-4a82-a786-391cdcd35aca": {"doc_hash": "0fa46d1f336b061ccd9d527ca523163f19b6406eed9db260c920dd485c4feea4"}, "d24a6ab2-d4d3-4d4f-9f7e-3815a774efe7": {"doc_hash": "a06c1b11e7d0b87e84f4967d1daacb6d73f3e76caca35f1ac3a573450f0f6be8"}, "76791d80-104e-4b3e-b88e-43f72c9a3d4f": {"doc_hash": "2388948238f9dbf8bb548f181693b60f9ab4d6cb9b982eaaead70c4cd85e8b6c"}, "475c5733-9751-4f43-92a0-91a7ae894dc6": {"doc_hash": "e6f033dfb84e6936540fa714afe2343d64a4cd95b312d6cb91083e660a64d66d"}, "d3e7b6a9-d0d2-4dd7-832e-c85eb9e7fb15": {"doc_hash": "e47ba89168e31389e6cc737625ca4358ade37aef22f14426243fca4a612b1412"}, "f3f2f7f5-a985-42d4-9da9-74e9927a22e9": {"doc_hash": "ab8e0c0e0da217f06b29263403786c1dcbc4e526cfce1234a638b2a2c56d4a26"}, "9630eb62-79c6-48b9-8bb5-15be162219bd": {"doc_hash": "4f764df35963b8ad5100091c427b9238573f9a109b0ed23d719f004522e39b79"}, "e2d027f1-fd33-4c82-85cb-83c6879815aa": {"doc_hash": "579642e80a9c872a05642077447b7dec7802ea5759345451da241d81f5a350a9"}, "a3b6dc73-ec0d-40b8-a9e1-9e1d1273c484": {"doc_hash": "e66274eeb7151915b6472fee3b2ff1473ef46259317c9797329cf2d593e5ba51"}, "7e24d7b4-32f7-4197-86c9-ba086166570f": {"doc_hash": "601def9b26f9a4682894ce542d0ceb0ec67a6a0954735c752ea8dabf7d113b40"}, "0724a354-5728-48bb-a759-169f878009e4": {"doc_hash": "80e8aa1b403c86e603795cfc63e7330055392135a7784f5a23890b25b792f147"}, "c30adaba-c97d-4148-a9e8-b1101b9bce4a": {"doc_hash": "4503e7b991f05ae82062ef3ec25c320d53002861dd6c51d4b1619c4a0217b7bc"}, "3726601a-20a3-4c24-8c47-c3aaf89126a2": {"doc_hash": "76f6e3ce5f11fb116e5ff962cdca36d6f5ded58dd4706a9eff12e2a4dd5682fa"}, "101c693a-69b1-4fba-b21c-547b7dd76bb7": {"doc_hash": "03ac371c3bdb23e410e8a4d586a734bf458a84d64eb969f356329edffca5fec2"}, "4269736c-1840-4f18-8b53-310760cee6b1": {"doc_hash": "92c82b5c90bf03c1dd2d7b3bd8866095e2bdbc87d4c159b5cbe4ac3f699e94c9"}, "a775120d-6d5c-4840-93c8-233dd4c200d3": {"doc_hash": "7aa13f5d71a6e6b277411ea73b4cabd39dfee291c4a56a2480f1cd13f7f3d4b9"}, "f09eb3ae-9c33-4334-b5c3-bdbe13d1e39e": {"doc_hash": "0c3d2921ebd943b346c19ec5aa10a82658dc0537cab56cc56e9c98f38cd7193f"}, "2e49e39e-938b-4644-ba88-fb61fd7124d1": {"doc_hash": "c9cd4419553e5ef5ac4d19bc1a44ef1902bdfdf1093dbc7ee558bd340cd331a1"}, "2fb68b04-51f1-46f4-bee8-938751b073b8": {"doc_hash": "3057f7ac15fa762924f25ef12854bbd9451e36177d36d0ed89ae3c7cf31240fa"}, "a952f3fc-9807-487c-9929-80b4fec76371": {"doc_hash": "2414315d4f406c74b7bca927506518f8f8e31cbd160a4a5ce2a4c5bf59eb74f4"}, "12067c2a-41b2-4052-a23c-2887c79868a2": {"doc_hash": "6418a616cc05f4a44adfad07c744606bf9e70e3bf81b6f232a76f4a46a53299e"}, "f8ba6383-80a8-41d5-944c-9eeda070e320": {"doc_hash": "175d9dabc8a8154369e9a26f03339f4ff401ac20df3c84911cd46a355e8396d2"}, "1d0a9154-b34a-4fe7-8748-1e96d2204075": {"doc_hash": "bb1b5b93b9080613c7bd9bf8de63fdf35dfc5980356ae15291a668e787bc04d2"}, "052af2aa-5395-46e7-9b94-59803c54bd76": {"doc_hash": "b3e285729b78cf8f7f8d34baf4818be3b0d031bd4c2e2c2a2f0e4f91af352122"}, "905ce469-92bb-40f1-a955-1621093976db": {"doc_hash": "613f80c645f3979f5a0554819eca147481b77ac69df6db01d0bf60108d0953ad"}, "2e50f84f-9a91-4439-b7e4-8dbff5542353": {"doc_hash": "6df5fdf90f22f3e4b7405c0e39519bdde77df7e913c58369a60e09cb2e2a2eee"}, "63962a8b-f476-4d81-a7c4-cf0f30360a9f": {"doc_hash": "7c25dd84340d5ef10c30818fc5dd06097c564faf0f922610dd20b3a23e60728e"}, "5055891b-2c72-4103-92fe-f22e6eca43fa": {"doc_hash": "370adba2e71080ebcb36e44a10b82fd457652a70f53794fbb477ec41a0cfbb66"}, "ae1ca833-5b2a-48f1-9c96-df305ce0761f": {"doc_hash": "9c9fba3abf765f9124e975f5b23517ab6c2d0a454b9bea56aa7129b12fd2f0bd"}, "60df65ee-b19d-4bde-97bb-5892b26d068c": {"doc_hash": "070c2bbfc83de9f8cb529569012e554a184b8b76d9271d9bc3be14ba8e78be7e"}, "0264f651-656a-4615-917d-00444ec82669": {"doc_hash": "7a5a9798379667655a55bda6860c0b97ab6cdb06af00e0325b733c9a4b041347"}, "2c5eaf2b-bbb8-4e5c-80a6-1a574f31e2c5": {"doc_hash": "b8cd72e2e620189ce08a1d02d740d49278b908b9d7410972cc2d3f3f96a84439"}, "79460471-77a9-4bd8-a444-fa825801d025": {"doc_hash": "fa40bca7c3689f065cdc520cb4b96fa33d8b71b5109da0ca581c0e9411ee5f1c"}, "0a35a476-e537-43e0-adad-4a5edb2b8093": {"doc_hash": "6f3467ca19a29ce68e346b0ed95f14224bd4f853bb24362c48e3ecb46c50002b"}, "2a424303-79fc-4a97-9e41-bdd23e7db883": {"doc_hash": "2eb533ba0522aeb6c52ce9b4791ebf6398d010d1b1f0d5254b8979dcb66e249b"}, "7aa4d61c-3e09-428e-9d70-7a71a89c2b04": {"doc_hash": "4e90554e3cfc7cda5da10114c6cf7d2858bde0f76a4f970befa05a0ebcb741e6"}, "a69bc4e2-453f-4bdb-aef2-e302fb17d294": {"doc_hash": "eb84bca264698e9c264cd2aaa313730cccbff0b743bc4005620dd23fd72ac8e8"}, "e4b4c74e-6e0a-4034-8901-68d17332a2eb": {"doc_hash": "59505292f0b1c85910e540e6fed16df80139293f33a2a03bc85b72923b4ff607"}, "4c668fdf-c5ed-4b1b-8ed8-52b2eaaee6ac": {"doc_hash": "c00eb17abe4c5e4cc16df7eaf0e164e6c92f7baba9f4f6ff3e97d057655d40e0"}, "4e9ca625-b668-4e94-b187-ca93a18447c6": {"doc_hash": "2a299eef7b07b3fb0ea23fdd37802847a8ec8eb70b6794deef01aa1a65bc61fe"}, "d285d5ad-40ed-49ab-9864-b40819b1981c": {"doc_hash": "9f8d9fc2b7b0dd752d9cefdba7a90c96a8cf878b9f38620db4ecc6f5096be9c3"}, "073a22ae-60a0-451c-98dd-9bdd8b7a8156": {"doc_hash": "8271a36fbb7ccc22aa3aafc876a51993278bd166831e5caaffef150df15d7ab5"}, "0a0a635d-6b7d-4fb1-a4ed-3843b408b404": {"doc_hash": "cb6cdedd00ed23e91af5bd01800478d7a93db1077c5eb0473dfa56135bcfa8e4"}, "1b1e1586-f125-4f61-afc7-0379a5d28367": {"doc_hash": "7e8c8438b2c3185eda53dd857b8c434b570ceaf32e36a91cf6544e2ad85960eb"}, "d6dd18ff-b84e-4916-b1e8-6c83141cfce9": {"doc_hash": "3cef99e46b7a8716af042bfa7bc0154db530d25a582849fd9a22f20555875dc7"}, "581cee82-3c46-4d37-9aee-b6cd159b2b96": {"doc_hash": "7a97040a59b8c589fbdc02eda0e1f33473023ce272fc055fc68e1957d9fc1b97"}, "07aabb45-12d1-409d-aa5d-b7b421f3b923": {"doc_hash": "6dac01a056f36981779929d0368db56b6e62e6422111c85385ac4c50680d1ff8"}, "565f6fa4-651a-432f-9286-7fca2aa004cf": {"doc_hash": "5bf47169fc68c367038274e08dbb0cebc50237823dbefc89e30afc077e311884"}, "5dee41c3-6577-475c-afb2-d00ac21a4a48": {"doc_hash": "6488303c8a3be84f862da201a60ac8f5f85fabd7ace89de7b60adab175f2c5f3"}, "a3c315d2-479e-4d2b-a283-ca0083603216": {"doc_hash": "046331986976e631d5752107d0b0fb0f8e2b4f60b040507d2b5068ee7f076b0d"}, "ed469d87-4b9b-4f1f-acee-765d8bf3fd27": {"doc_hash": "3ca9e2055082a3ca53881ddda62e8acc2b75832774fa0b5989689b7be9f53b8d"}, "d6f38b78-c44c-40cc-9afd-614e65e7d41d": {"doc_hash": "e0110d54ff02c7402155eb87f2962faef13fdfc6742692489baa8efc92223674"}, "c145279b-ba03-4dc1-8689-d6070f770dc4": {"doc_hash": "533e8c2c2f308f88f63ad5d0813dcfd71d98dbbb41a8f57866d9da67ff6a1353"}, "41a28cd0-4fdd-4bc2-9210-2cafe372eca6": {"doc_hash": "da10e8675dd92917c89e3edb26d08443849baa4f54ddfdc1721b685892c8ce9e"}, "e6136cd3-b392-4153-ad6e-fac2ca5c2fb3": {"doc_hash": "230916b77c9c119be1b84621074006686703fb61ccdd08ae950850d9d7e376a3"}, "67a5d3cf-1105-4eb8-b5f4-a5563efed932": {"doc_hash": "3323025b13a9b0cdde3ddc8ef543528602a504e3f9e1a9462929e6f60614750d"}, "c5b2bd6e-865f-477c-8766-6542c8690d62": {"doc_hash": "91987e2ff67264441e46eb0d8b7fef0f915e0ac6b0a876fca7ed5c05d45bb742"}, "8ac636a0-affd-42ec-8b08-ceab0b4c14c0": {"doc_hash": "6b0e8256aabef118194a43d929b53756a461d651fa4ac1215d9c3af135310c5c"}, "35c2644a-ffaf-4ece-bd6b-ecf77b7ccf81": {"doc_hash": "564328aa405a9b36e653a34adade468ba925888458a733b1627460c83b86b80e"}, "b26f278e-2eff-4f8a-98d6-307d16173817": {"doc_hash": "d9419e7b14f3acc37fe47b7175cb82f1fb2054b611180fe9db69b6397fea7a28"}, "64dda5d6-cadf-4a5a-b610-c1d8658f89f8": {"doc_hash": "b96d7cb6eefc1bf6056d99b8bc1cb92f3babde3f0b7f33fc4c2f8a23840d9330"}, "b5990a93-045d-47ae-9076-c97c67735600": {"doc_hash": "6e117e292df1415332efecd0de7579f65bab0444280a23fe3503ddf558c1a9c0"}, "5203220a-1e78-4a62-8384-185b8b76059e": {"doc_hash": "d8bc78b8105997a2cf9ed259bdb2b633ebf25dfef791ef2c7deab347c30339fc"}, "ba284af0-c255-44d2-a21a-48414107a053": {"doc_hash": "dd9efc07533096fba1ee6639e8ac0510a950f20be064a6c7c0dd6de580a1c37a"}, "bb26a3ad-6012-4a46-b393-7670ad36c17c": {"doc_hash": "dc8db9086c0847cb25c9b24320dc257d53fd647870b560eeef9f7f5947843e43"}, "79555bcc-170e-4cd8-8680-c41f09ffc384": {"doc_hash": "6cd139c2537d053149ee2eff585f721cf5590839d95d3aa12eea850addcff33c"}, "ff2ba6e2-967c-4349-9acf-37170def2760": {"doc_hash": "68ea203dad9896b9f40dc81a09abdc9f87c9e457a63094feca05f278e348b250"}, "dce72285-1a6d-405f-9363-61c1481642cf": {"doc_hash": "dad5275a2cc96b73322cb0d291e3065578a3f67bac1855e6400cc01f2e5f1c6a"}, "46c52590-eda5-4ad9-9c63-02ae02ca0e5c": {"doc_hash": "966bb4683ec6068ac09d96099e107562c3377f2a08426dad5684040c0552e530"}, "03866b3c-fed3-4951-a3a6-b453b2292ca7": {"doc_hash": "3cc82af5d9d446de2145b39dfac2483514aae7b9e17fe484abd64fdc5c9dfe9b"}, "018f8ec3-ecec-463c-8bcc-099043b1e3da": {"doc_hash": "2858442711f3528dad4e7c4c8d1d4ecbbcf5c4cc7d6d2722e84d7147176bdebd"}, "dece59b0-ef86-4aba-b0ee-806df11b6c4a": {"doc_hash": "0473e23c1b40ea195be49a25520e5717b9b94de65c430f534dbcc664384053f1"}, "110d7cd3-ec3d-478a-81a2-5d9bbad657c6": {"doc_hash": "7d091defc0582dba50a554e8c36b4f59cddcfbd3f7bb7b0bb80f58ff3b059286"}, "b875b66b-ebe6-4834-b41b-776f4cde11cc": {"doc_hash": "e8523f9f7ca708a4303a64215979dd7ac21ff308b7f7d98219b35067aa25bd10"}, "323d820c-5487-4191-a857-5e3cabf683a6": {"doc_hash": "bf34e56021b6eaf1ffc0816826585e53be1933d7366fb133cb481f5a33ceb30c"}, "f3d04ad5-a570-4c82-8d40-a511f5e14da4": {"doc_hash": "f499f01b7a6bd3c5a0082301b9f3971520d496a4c1fb2ba97eca4f147dee2358"}, "51daf15e-87c3-41c1-a870-bf2e5b91b3a6": {"doc_hash": "f61d62f734e2834b86ec97559a0cbe104424f6cd2c51c6ffc3294a62505da3c6"}, "237049c5-1043-4833-9b44-01e79a7752fc": {"doc_hash": "c8bef97ecf9f9e68da24819b892e05a5ee4a0040cf9c2f9c2842fee0147bcbe2"}, "cda1597b-c79b-43ae-970e-c1b1a29d4d36": {"doc_hash": "9e0d6615ae507d290f011c4f432932343420939a761c81698d39314b53dc3e70"}, "f622e8db-10fb-4d4d-98c1-6557d43577af": {"doc_hash": "adaf29b881fe7c151f51fc23610be6dc1c7937e0b6769572aca94007a54f28d5"}, "58045d84-1527-4bac-8fe3-711e25798563": {"doc_hash": "d674b51958d30d53abf0912f614b9cc60a165d8c7b00d452267144d745050a98"}, "33a0e446-dda9-47a5-9b47-89cf3d2c94f4": {"doc_hash": "733280be25b866d792f858d7cf56570135cda18e3f5273d2165128024f08b81f"}, "83e8486f-8d4c-430d-8c6f-ff6da7b8563d": {"doc_hash": "a257f9181327571cca02de86aaf0cc1f9fe80708ec5eb12fc86f8ccbef90b462"}, "3653e14c-b5ee-426a-9f04-39002a70e11c": {"doc_hash": "95becca5b2b97cf64513fee58203795cc09a18b3f1c8b616b4fad133f464254d"}, "10d526fc-5f8a-4604-adb5-aa1e81c104ca": {"doc_hash": "1291412bac72ed6edccf3bfb0e842428c6ced5c519cdec7d16a2ace5590f3c9d"}, "ea979bfb-9e89-44df-b6e1-53f937d842c2": {"doc_hash": "6ec8c8a425c2d232071e370a410357449b02ba51ec9bd3a9eddd5683e292ef1f"}, "da092379-d32d-47c8-b4bc-2ba3ab63e82d": {"doc_hash": "99cfdc91355e4e2ed9cbcf7c033e7af79bf643e4ce6362188a6027275fdbf340"}, "91d5cfa1-adac-4387-8445-903880b3051c": {"doc_hash": "c26d5b111e302c6aeca846f2ef8f4737b9749c77da4db3ed5bfd46ea8901a399"}, "e13bed65-5f39-4857-89f8-247ba90dd928": {"doc_hash": "910e6501b32b5de1543e288dcaf64b211f49695055e5acb3be421fde517e7bb0"}, "5c4722a8-c476-43f5-8c3b-ddb80c2cfc2d": {"doc_hash": "d644dd3b67112d309230fa24bf5687e923d887209d999916bccedd460e5421b1"}, "d48ff166-d02f-415b-ac6e-559fa0ed419d": {"doc_hash": "a880731422ed991b745a1c759452ba7d942f78c0659b7feecf4fa59c50d5db56"}, "63421a10-847b-40a2-b6cd-31092977dde9": {"doc_hash": "19337fdc35308792ccfea4d57ba267c48411aaee4a5773ca674ca6606501f6b7"}, "f6d248d3-26f5-4ed4-a746-544bb604011f": {"doc_hash": "bda9d6a1e119c5ba4a2e2d58dbf5660bb562204dbafd9593245841e5bcadb818"}, "7e36d3a8-b2ae-4181-9853-88acd5ee33f1": {"doc_hash": "761a2af7029c4954a93ba3dc675acc4fe5e21b5b5a336b705e2f3e45f091db6f"}, "108accec-6f16-4c53-91fb-0cfd0617a5ad": {"doc_hash": "96cdfc42c7c8100e3bfb560adb82775ce2163a4699c6290557009be1ff5d23f6"}, "4115e9de-9d3f-41b8-b0c7-9772417a7937": {"doc_hash": "61cd04735587fb7e4050aae7f7f4217fc428f66d3b63cb6b092db2980a98f49d"}, "4013eb99-2f6c-482c-94cc-201b0d3f0f36": {"doc_hash": "a689208f77f251311425a466da5cbffb5d09cc087fac22ad64cf87588fd146c4"}, "d72fa25a-6b1e-42a1-8f95-59609a3bd4c4": {"doc_hash": "51b52d3bbc2ed600eabe825e6e541c4ac23dddf9dcbd510a8728beb3d83f4916"}, "1ecfec48-b677-4174-9163-ccf41958f4ad": {"doc_hash": "f6070d27606a2aaea2d855c9375d530397e50124a95edb3c7831522d294118d0"}, "8bc4c6df-e26a-45e0-b716-f5840bdb0026": {"doc_hash": "e35a17d5b266aaa2bba06bd033a67388ccd61a4f6cbc0f3ac0f5f68fd4653d25"}, "4815ddd5-9b2b-4567-b51f-1eb5b2b3b08e": {"doc_hash": "fee6a39c2fec5a3a3a8e365f24586c92e93c3dc1b185323ea31dcd5b7d9e74ae"}, "517aeb81-f7b2-4d55-9db9-72a0e1392b20": {"doc_hash": "36ddef62ec5eb43437fd6105f8e653faafb7b16d35eca33e09b77845f0d929e9"}, "e8281121-c11f-4117-9015-f3d61ed4c34a": {"doc_hash": "212056db41051c12eb87f87f9c3dfaf38c4e079d67a7873aedad460c84bf8b2a"}, "3333d5a7-a7e4-44b1-ba80-7bdeb8211b7c": {"doc_hash": "1a6e7d743c6660596bc1ccbf7c23f4f8fe0df3fc0a53bd12abde3f0f4bae896e"}, "bc591490-7b7b-46cf-969d-1b3055c8bfb4": {"doc_hash": "b1b5c42aef3b057d91ddbfa82a70e5e3e477bfe823ad87e90f747a2408dc1b0f"}, "01860972-165f-489b-a5c5-061120985f6a": {"doc_hash": "21163f802b6165c6320acb0c68c49a80d599b642925b35042216a24d402ce22f"}, "d1932d26-3812-448b-b37b-df2e8a170b45": {"doc_hash": "272aad2a96bab451120ecf6e562cce6ed080a482972d6aaee19cc4cd840c2b75"}, "d8f9d5e6-4351-4398-8adf-6d900e3fd7fa": {"doc_hash": "05a4b70e08e629271ab2532bd33655af9d25066b9b6aff790c304f7b60389ca9"}, "bc32748e-2f0d-4cf3-b872-75e69914d3e8": {"doc_hash": "3e1eb947dc2f560315bfce413fea56eed857a8cdded5eeddda096c2014723b37"}, "5301b215-b001-4462-b1fe-183af2f4de3a": {"doc_hash": "bd8824d019bedc7dc1000baaf2fb8b51a4ae791f87ed35c8765b94f7c140618a"}, "2041ffc7-aac5-4e33-aa45-7753982a9d51": {"doc_hash": "1a9587031304a76b2ea5c279f31f6a87f3269e6aa651131d494feeb1b1779262"}, "9afcf528-384f-4b17-b5d1-6cffe6ea6bd3": {"doc_hash": "70d4d217d9bf724ef1493f55a592f7531e43757ce5878a03afccec040fb48114"}, "b3fc1138-a7de-41d7-944c-9479ed2a766e": {"doc_hash": "04bcd3f7d0adf1e1907b21a1c46a9ffd2d5b8305d3ead8c5f12b8cc3589a5f20"}, "19a3cddd-b69d-4224-8dc3-77d5419f97cb": {"doc_hash": "68270a23e495ea92ceba029901e6241ada54a9ac5ccf4b52ecfb845ea831ab99"}, "5af4028c-2f07-4ddc-ad0e-429067d7c9b9": {"doc_hash": "cb8dfd90aef5d4cf0c6f9617c3a4b579f65dc4d353d676cd35b5ad6533d975f5"}, "eef4b660-1bcd-415b-86ff-197d2ae1142f": {"doc_hash": "5eca735862a777670c34d669f4494147e484947cfda6e74e6d7656431d0043ac"}, "65cada6b-6362-4e3b-83b1-861a4eefe461": {"doc_hash": "8af89425bbb7f367a25b351c9adfd351195800cc95b1c320a3a54daa26a30ab1"}, "c559472b-2e87-428d-bc3e-7597c4454608": {"doc_hash": "94dde1f8a67319bd57ce7bac0a5590f245a8be4bf6acddf62f7b8fc312c6df8d"}, "6497b4f4-e01b-4ae6-9da0-134b510b77a5": {"doc_hash": "e55413246f2c0b46c750fed9d299a7821f8e9b39a713c44fcb0cff45a6b69f62"}, "9813f3e9-cb06-4934-947d-d87edda5122f": {"doc_hash": "0690e11b97a158dc783d899bec5005349cf4783e97904b707af42da3fb1d6f70"}, "3ddf4d6c-e3fb-4fba-8c30-3fe894a68d2b": {"doc_hash": "ae9d9f3f33e11a6fdf65df6f16980f0b776c50205ec83514343fcc72913180c0"}, "dcf177a1-50e4-4102-add4-50c616ac2c99": {"doc_hash": "82c7709b9460afaad61094b20f78da76331cef76fb0d8d2a577005ab9376ac3e"}, "b8e96488-bb9f-4877-90b2-1acae4c81228": {"doc_hash": "86eb009a89e9a75de6f2f5316699424705c0289b61f78f845ba12b77af3085b6"}, "10729b2b-a139-430e-998a-80635752c27e": {"doc_hash": "65dde86f81b0693c83f0639838b34735e2b313a94c357131e97c6fa48fa31b6e"}, "0d3f265c-0c64-4d8d-8400-4795d86fca9b": {"doc_hash": "4b778382e717d6d978db344a6dd49ede27dba88924932dcae29663e1fd4bb4dc"}, "ae7d2d18-26f7-4185-99d1-09a2ef51a338": {"doc_hash": "2d4e63b4234dfae4e2dcf31dec7ce0ddee60edfd8e6d2cbc114d4c796b062be5"}, "19cc4910-a4a8-440a-a755-239d81760fd1": {"doc_hash": "641c5e7ff796c325c1d6670c1511671a3c78b462fa69ade02c5375e82f345444"}, "d2345f86-05c0-400f-82d9-fa39af657042": {"doc_hash": "fe1fc3b480f80ea1152f1aaebd45dfe55c4eeb29595ceeaebf643aabbad0980d"}, "a9ed3e69-0b6e-4e6e-88d7-299f022888e1": {"doc_hash": "1d2b8123bbad275f9596935f2c1d3cbbe76f5da06852e6945b956d1c288b1abe"}, "c1d54729-4153-4549-b2b9-8eb18b3f02b9": {"doc_hash": "767b37d654af6dca1888e0dc3dd43f2ba97cbc59e30658ef4ad82d68cb0e0564"}, "9458737c-0f0e-469d-bcea-2798109337eb": {"doc_hash": "139627fa6950878d7e67a4582a38ce47f805cd605b32ae735d8fdb031f041915"}, "9e1b1421-1975-4f26-b926-23ade368dda2": {"doc_hash": "f0df0885d220b805f31d65df152c27e0b3e76327da5c96945e0bec97568bb7cb"}, "4b56867f-bf3b-4c7d-8bbe-20a19fe43243": {"doc_hash": "0f4f72f11f346614c314e0c4b5c3540a773a63f840da1b64d42d5a2b05da1f32"}, "da9d5d86-48b0-49a2-88fd-70a53be8d565": {"doc_hash": "484fae226b9944d929f3be90dedb1a36770b42f2605a5fa88bb9d72818005896"}, "26910b55-aa06-4da6-b829-a77fd035d517": {"doc_hash": "e8b2b77503c1ed207701dc12e4b17cbd6085a4116bdf257f903f6877e6d18111"}, "a142d709-6fdc-444e-94c0-f2213e0f59f6": {"doc_hash": "65fc97bf47e735790ac03702ac19dd793313b2807555fe9b807ce57b37467fac"}, "16646532-c8ef-4726-a9d6-4f9155c08986": {"doc_hash": "9a986586506eb325056049795f4ba2b02bb4be969b71687fa6c8ddeb7090bc24"}, "c48001d3-1653-405f-a21f-3b93fc025d96": {"doc_hash": "f48bdfd8044504b02c8fd088300cf6ec8b7dd60b639c66d24f3ceb111b382b59"}, "159e1f98-9ea7-49da-801b-4ae5028ce89f": {"doc_hash": "67de700bbc321651eff347d9511dba2f94edd09a7c7370a80c51784682e75634"}, "6881ea90-7077-4357-a901-df4361968cc2": {"doc_hash": "3305964f8acd2955d97dfbf1ec94a88a330a03e22247d0bcdb38991bb4b2455b"}, "2435f0f8-f5f0-442b-b1c2-8da18b5b33dd": {"doc_hash": "0d59f80318384afaad2ca358287e57a2bd25e0973b7fd14ef4543d31a178bee1"}, "d37d7220-a050-48e2-816f-5fa7aa46f342": {"doc_hash": "b2d0c276cd284fbc47a6bd3c4d9a646beb7f6c2a7b01aba83278d66d41dfcb6b"}, "15782b06-5ff9-4a48-952e-0addcbd1b912": {"doc_hash": "ba0ac1b9d82d57e614b13b62c971bbcf2abe077e2d7b48311548aa2b16f37699"}, "8168d032-fdd7-4b99-a39b-ffa2afe2a5bb": {"doc_hash": "ae08008e352c8b38322c5d16849b61b23254685dac204d1d96acbafcc26cdb57"}, "43597e43-cfe8-4e5e-b2ea-5baa95b2a0f7": {"doc_hash": "1aedf84a411464b062edf3c30927ca03978ec9fb99c04f99a34351e2ccda6713"}, "93b9c1c5-b1d9-480d-bddf-4831a93cd2a7": {"doc_hash": "2e3f2d56636e4aa60f8eab8ca9ca27588d4b79623160d7dedbbffa8bdaf79c1d"}, "3986fde8-d903-4a14-8056-cfe33e452cba": {"doc_hash": "82b16726e8d1e4962d436c01efb9563cc9124faf714dae191b95adde6efdfd88"}, "abb25073-cd6b-4285-b4c6-669c9a2ee06b": {"doc_hash": "4ddaad4e72aaabdc401dfc3c50fb08becc6a1341771cb7b488467c69c88458dc"}, "f91eed8a-fdf9-4df0-a1b4-8ca4f602780a": {"doc_hash": "b8df395c4d0ea3a1123746c8a576d69b5f5ed723fd31c1e259c7642525dcbe12"}, "ad3ceefa-1a91-40f6-9834-cebc42547b76": {"doc_hash": "d8b4ce2adcfcc2d59d5bbd92cff3065900823b2925ce7b7db77a988eedbcac5c"}, "9369680e-5f35-488a-9d0f-8346c054c7aa": {"doc_hash": "4cd2bed1faa5e48623e17a2bd5cfe4ccd6b49805b3e06d9b79a6eff4985e1161"}, "3f9ca530-b9c6-41b8-b347-0a9394467fbc": {"doc_hash": "173e241df946b3c9688987e779d43ed6aa33015e2cd0ee953d94ab74758db2c8"}, "758e5edd-187c-415d-9408-078cb2349960": {"doc_hash": "477df9c65fb954b7ed1828c9213e58726692254cb57f0c46af3e88c37c96278e"}, "8b8092dd-b6c3-4ac2-a878-fba5b499fd1d": {"doc_hash": "dc2971639e2285065d809dabd2e0aa515246419192238c91652f0803d92b8079"}, "c7a11c9c-9f8c-421c-a080-55ce33d33d25": {"doc_hash": "f9f140483fef55f1e96c09640dcd55df70c2b25a3cf77d9f24c71a09b5f4f3b2"}, "889cd5dc-9090-4e65-b17d-9c5ac8c95733": {"doc_hash": "af510a0a4fef9cbf78f93da9b126c95e183c5c64bf25a0e64af8d68a6799874a"}, "370785f7-98b7-4135-8c1c-c0a7b6b08831": {"doc_hash": "113c0c5be05161c985e28971eab8e3053cd0a415d07db486e1bd9a14d4b12764"}, "2f76dde9-f6f2-4fc9-a1fb-d7eda5976711": {"doc_hash": "75a1d6b0cb417452f0a0a0daac6b3439ac55e3355046b5c194546354e86d6825"}, "f2a293eb-782a-4c23-adb8-bdaa1fc239e2": {"doc_hash": "b00786326f28b58246bbcfda6f2d38e098d9480f49e721731c1908e4e07d6c8d"}, "55d7d7a5-df40-4b07-82f1-bea72fde5715": {"doc_hash": "84186a36a5532ca0ef6cc4ad766b23cf0421313852f307697fdab9c7daeb1f7e"}, "ed8a4230-ea99-4466-a53f-cc58706ccf72": {"doc_hash": "367ac9130078f372bdc7e2c478f9e0827deac667b781363208ad50591295b422"}, "1d341cfd-fcf9-406e-af1f-fc04de798b59": {"doc_hash": "f4b0f12254c6ca80f12b0664d961526293a3561c0a05774a557818a6bac15175"}, "2b42418c-01ff-4b46-aef9-166ea7e7d5c3": {"doc_hash": "287f88850eb926df619d8b7a799f28ecc3fbac3d657fa62b92c1163fa030ffaa"}, "a7a94fea-ef59-4a13-95e4-c04e7c6e2076": {"doc_hash": "46f28268364321b5d110ea0575de3b7beede6f2dffb418037de715e134f6212e"}, "04daa350-43f6-4096-b2b8-84737a0322e7": {"doc_hash": "39008704db81ac39b03292c697c6b4081be819e6ee5940685a437baeae4abba8"}, "025b35af-060b-4805-ae71-7307b2f611ac": {"doc_hash": "c786b62ff72201e620380572b2bb4d9a85969f0814bbbc1959eecde293d88cb4"}, "6b26081e-3f1c-4b0d-b17c-5bcfc05ea427": {"doc_hash": "70ee8c58bfcee3eda79a7012834917a63af2ddb5a10ea193c5a5d2679c46ab1d"}, "34e16a2e-e2b0-4af1-ab79-ffcf138a3011": {"doc_hash": "069d86f576bb59e1998522f9463f7481971c5689787035e2eb9d3687fc74ffc2"}, "7b9337fc-3ebc-4659-9456-630f5e050f8d": {"doc_hash": "0eaa52c9f160d6f5f2ed7125bdaaec648fc7bbaf131ce6d2dbf458f2ef78f545"}, "bb45a8c0-1ae8-4ffb-8b03-52c6d539e5a8": {"doc_hash": "41536114c7d3e3462bd23d9a38f67de027c151d7cb1be8401af056f778ce6fe6"}, "dadc8972-4a78-4eab-a29c-dcfe03395c79": {"doc_hash": "7829f05ee48d12099e72e34454ee10e9efa630fbf3ab71cd3ba4012f6db0ad0e"}, "d5db09f8-3b98-4834-982f-e6e8b65acfbb": {"doc_hash": "2fd26ee8579c1ffd3e543141f2783d21651c0194152a024ca86229d7bdaa380c"}, "84d77eb5-683c-4857-b34b-c184f2f8c4c3": {"doc_hash": "01d6d3b152689aa3c0aa81b719909d3bb21ba6b6f254f6dd53ddfbcae4a5fb2e"}, "56a6db1e-9c32-4d6b-af81-310b55a26aae": {"doc_hash": "f194b6819bfe82955aaed96a706db9c87084bc49270432bb5cdca33b31a71ed3"}, "c4d55d9b-0b56-4766-ac1f-959856f3e1ae": {"doc_hash": "15d8b8290097b8b11dded2ce2a88442f7ddbddbcbf71acfa8d4f30a738374e1f"}, "ef4b1ce3-8b25-47bd-973f-ec0145ff078f": {"doc_hash": "39fb8e05844bf06da0b59eb3fae84d5d872092aa244cf9d116c55153c62c1a61"}, "5e02453c-5bdd-49ef-b999-783ee23e976f": {"doc_hash": "154c682ebafbb61c1427c8ce31b1ecb7d7546c828a0cd86d745e9422771c9d91"}, "81f74d8c-edce-4444-b5fa-17ef4bacc9e7": {"doc_hash": "67d6eb1a50a7d055beef3bd32f3a5affb6007caa3f26e5e8e25ee9ea4c430bfb"}, "7f8732ba-f0d8-44b3-b267-2ebf834b5173": {"doc_hash": "1b603ea3684eadcb05bf1424265dbd0191b07a09d04b7b69133a0977ed6c443f"}, "f0d1a831-b5c0-4790-bbf5-0af750aff8f9": {"doc_hash": "8a817aa8952c90e558312f8641931e5877d3ee8a1c747c42e0fec027d967e62f"}, "8b9fea36-38fe-4b72-908c-43ecfd8e5939": {"doc_hash": "d823c29b77e75bf53075d3b0f37ff5163a20d0cca4629bea6140eaeffda1a5ac"}, "bb262049-039a-4759-a52c-85ad39e9bf45": {"doc_hash": "76e28ef4cc0d11e5f8cc84cdf1479a727d67ff99c8a1c7aa1d21a9cfcc4220e2"}, "eeeba120-aa3a-4c63-806a-33a2f08d6794": {"doc_hash": "e4b774a0fd4754ede19f0be3b66cf587a2bd7429c713a43009f9ed72d00d3418"}, "170995b1-f029-4565-8de0-05e5b9c6ac00": {"doc_hash": "c28fa3b038f978965e442e491745c00ca890f5a532c269a293c8b82ba603ca1a"}, "a79977bc-b150-4958-be80-78950ced4b59": {"doc_hash": "64e19e1af57d1b07fe2d31f9da96891f20cdef475574ac0f89aed8cc67ecaeba"}, "ccb32679-d893-4cc9-b5ec-033554de4b70": {"doc_hash": "8c6a986a991cb7e3b45aa64951dc3d938d79e69da8c4e15ede59e1779650257b"}, "867a46cd-14e1-4363-91fc-d70614f8eb2a": {"doc_hash": "44060e99af97ee78f8ee664ffb833ef76401ecfe0e36d9aea60d2a569128514e"}, "87169bae-a25d-4717-a9be-dbe35e25c8a3": {"doc_hash": "3dd5d6860a5b589458f37e72a335177ce4ff4d45bdedd85c4790a8d4fe317bd6"}, "d6f21654-3c29-4f42-8415-1d16289fd63d": {"doc_hash": "c0c9110577a6ef6aa0220dd4b41fbc8cf7a6e9184c258659051189d71f68b122"}, "1fce4eea-82bd-4a92-9934-0a77b61133a5": {"doc_hash": "8e68bc703f0bafc9ec792fef112ba62966890b60a0fd8735377795b4b82524d9"}, "454ad110-dcb4-4211-9fc3-a8557ceaed01": {"doc_hash": "f51f2a448a31207952f5ad6631667e06f55da4d1db27667c693862b865681948"}, "351aa71f-bdd1-4452-b692-f1c7e0b67a00": {"doc_hash": "005f22cb0b452fb91c30a90087b0deb064fcfdf9d14b15168ce40eaf4baa8fa8"}, "10a55ca1-b5c7-4b19-b96a-c70e29826cf4": {"doc_hash": "c3368767d874005f3ebd45594c8e822a39b6a156ef4603f559ff3167661a7ba4"}, "90784f8a-b074-4135-9ac9-29da240c9f3b": {"doc_hash": "e87d6a1ffbad10c073b887dbff9060a19b7c7410b195110b9e071a7eb8006ac8"}, "b355de7d-aefd-467a-9aea-7109ee1624d3": {"doc_hash": "d0ff70068e70e62e079dde95f7a4b40066be2c329c027987ba612e9e5d89dd8c"}, "270c9221-8ba3-409b-b4c0-5fbcd1abd59c": {"doc_hash": "f5e88e87fd040db5f8ae5d69eb276a1de8af071dc00dd01e952a5859f23dbd92"}, "642cd54d-9ac8-4260-8e6a-e4e67a5a45c1": {"doc_hash": "5a7f179042b08f1e2f87df6cb1b04161b88ae93094b12faeee44de9aa749b83d"}, "fee739f0-25b2-41a9-bb08-c3e0d61d92a6": {"doc_hash": "ed4ff7d0a3320ef6d5bed7d3137538a2365d49c8f6b99241eee48377fb8218bc"}, "5a55874c-63ee-4b63-a0cb-ada5a1ac4428": {"doc_hash": "851287ce577378f33768b4c6dda122a4b0320e88984fef50e5fc480ff6692cf6"}, "9e05084a-48f5-4b8f-86c6-7a611894a8e8": {"doc_hash": "afeb851cd7cbbc24147f619b5f83b6de89fbd307e188d8e10669ae5fb3c95457"}, "2308e06f-0282-43a0-86ea-72c45cc04c45": {"doc_hash": "6f2f0fa3ba8ddf90ec3316e271d1e6329db73d3bc169baa48e161d9dd6206820"}, "294f5bab-f416-4e7d-b314-be0ff1e042e6": {"doc_hash": "70695682bdb8ec95c8d8442eee825a84adbc4ee22535c6da02c9da13604177fe"}, "5efe42d4-9337-4c4e-a794-20c759bf8204": {"doc_hash": "df8ae7a8771de620ae9c95c0fcef1a8c545c043aa313a2660083494bd20e2cd0"}, "2eb7fd83-07ad-4e7e-98c6-6d9cc2930630": {"doc_hash": "0ba55c962c4838d9979ee8e5e03aca9976beea54c85b3c5ad1e0a8f1149b3c34"}, "540a7c8c-3359-45a3-ba93-d62ab6670116": {"doc_hash": "c2260a1e888d08f7846a675c548b446cc25836c8bf215e4d139ec319d98a0687"}, "6f8ed505-4a7c-47a3-b447-5e3848b8e830": {"doc_hash": "c0f2ae9291dc785cf86f86427412c7b68fc630601b251e3d6e3f7ae46b160cc8"}, "d04a66d6-b7e9-470b-bfe3-a0004e269f4b": {"doc_hash": "9cd1bb58ca493282b795b27a8c4e3f46b8a55e4e33e3fb2be4b90cfa71963f83"}, "a26a072a-e716-4be4-ada9-161492540f98": {"doc_hash": "4cf3007d6d3c933cd85a58b0f139b9ee134cc491baadc51c689b1c4326fe5a98"}, "40764a95-80c7-4e80-b313-df2ae0f1f01d": {"doc_hash": "5d3c7f22718f2d24d96a6e3d4d3be0dd754351fdf26ad02c27a582c4fe260363"}, "2ad09026-2543-4b73-abb0-6f0345c5a3f0": {"doc_hash": "50b9c4d0851a54d0acb162227ea32cc6f8d9955b063c31102b18329d27d9f8b4"}, "843855e2-700a-4c20-9eba-c68410037e6c": {"doc_hash": "792c35afecf747732493efc7a91f54346cb3c908a35dbb03481722ce7f32497f"}, "993aeedb-94e7-4792-8b1f-ca64fe71b5af": {"doc_hash": "adc6613122c59c8b71f378439854d2806e6410b06099b01f945b14b18cb755e8"}, "e600a8c5-57f8-4c3b-833d-a3f7164c8bf5": {"doc_hash": "8bc6456e83288b32cb9a479f155462dcce436bb2dec3cbb860c6a1210021461d"}, "6aefcbde-b3d0-44c2-a3c2-02c8b4d8d91c": {"doc_hash": "64d4370969a6fd0bc7ec7b7e02a2e7ae3a1eda697dfcc371103d669a215eaaa1"}, "951b1218-579c-4be5-981e-272b7bad7db7": {"doc_hash": "6db7c608b0ab799e2557b5d5c9e9d4dd984ea60a66d72ad704ca28dc80df60a2"}, "59c3732a-95df-4169-acaf-c59fad353b37": {"doc_hash": "85303c0490e0477f70b7da67da9d17bddcca7a124973517121c0de767d2c7ed7"}, "343cd142-4f29-4a92-b05a-91f5913820ce": {"doc_hash": "db977f7fb34c0c3358a3f919c8f616aecea8b6b94f06a5c5310995138ea0ff77"}, "0d04d272-9099-4ffd-a076-30ca8ddd3cda": {"doc_hash": "c8da26887f907293f5c39879f5878f4a65df0096e4e319be70104bcaddd6c755"}, "c3d1d5f6-03c0-473c-928e-58d74ec0d193": {"doc_hash": "ec74bf645cb49ad07c9b92301a22b5c77ef815a54ae917ce15e194fbe0bd465a"}, "7d6b4382-e6b3-423e-b614-058f39db9754": {"doc_hash": "6016ff5d6b11eb21ee0cce29fd031239d1c43add08df3a197e965c920791fe5d"}, "0813ba98-e715-43a1-87d3-12dc99996a6a": {"doc_hash": "6b6a83b5559ef71d090ee47beb00f3ade930106a314bd22c8b573c93571f171d"}, "c17cba82-fdcf-42cc-bd32-28973fec44ab": {"doc_hash": "90f497488caef0de0c19a263c1f2a4dbab36f17dca7fc125f82cdb9029ce456a"}, "a4e80fbf-a641-4394-b76c-5baaa3567f9e": {"doc_hash": "378bf015e6bbf5ee0cda04aac8e4b2524355f4c881576a9f9a1d5f92a8a1e4b4"}, "4afcd299-6eea-48de-b3db-0747e4248ee4": {"doc_hash": "c294dc7ff0018b32a6a303e8a9c1e05a1213e9e77c26e7d7dc0002b58ffcd34d"}, "df0dc31f-34a3-44ed-a28d-dd1308b86de7": {"doc_hash": "901cde2a526a187e3e5e40f0ffb5bfdb85e3476b77f04c798f37995935259c1c"}, "3c916744-f3c3-470a-870f-29129777ced4": {"doc_hash": "d30dc9d7ef0cd8412f995354abc8a504f4269f1b435a8bb9d9438e053a2a220a"}, "9d16f2b0-8037-4ada-8b47-38900155cd86": {"doc_hash": "d0321cbcf421a1e963408c3136b6669c79e2ca03fdc03c110155b3ebebd5d708"}, "16207582-c809-4102-9dea-820fb6055a2f": {"doc_hash": "7602a7ecaf88c7331ef42bd7d4b7087fe22130c4a696396cb8a870c968a88836"}, "16d3cd0c-56d0-4784-96fc-5312d8e81934": {"doc_hash": "fe02f1d4d6877c1a19a810ed825c6230c62206cd60b5d414fb6a77422f4289d9"}, "0ae92e79-39c0-458e-b53b-0853a70456ec": {"doc_hash": "92b4e6172cbab8892cd029cf5628ab4dae0c583b001f0d4ceffe97a292c82fff"}, "f41310d6-7946-4155-a0bf-976309109cf0": {"doc_hash": "2e6144c6569d5163826e6614fc1e4f0b38603a8539086caa376355a3ce473ec5"}, "33446fa5-defd-4156-9121-b09e5250fc3d": {"doc_hash": "2ff24269b1546523b115ab4bde653e4e9e615887e596ff1244f0e195bae92651"}, "a00087eb-6758-4019-b62e-5f306a4ac6bd": {"doc_hash": "a94b95c1588231d6cb06607f3c4d8095978a24318a01daa9fe24052eea7c8e2f"}, "c560e609-4c8b-4ff9-9b91-c0c7fdc003fe": {"doc_hash": "f2568311467384e78f68f023589c541c258139a2c1c6d3a4e520a7efbb3143ea"}, "89e35911-5734-4e84-a756-47c137f0e6c6": {"doc_hash": "7aefa65a9e82ed483616df898e2c76470051416483f7837af1cab84eefb1b497"}, "44f49278-3598-40d6-ba46-8a68a34ffbd7": {"doc_hash": "1c109497e75daa6c4b3919e4094ebb6d125913b1c99d4168e44de3cd27696ef0"}, "4d4c0c77-bf81-44f4-bf3e-5cbb656360a9": {"doc_hash": "84dde9febcc5453053f0f24500251de50714906e41134f395a2ba67ddfd30d48"}, "10ccc054-1a10-427a-8018-5e762ce0abaa": {"doc_hash": "e407e765452df6bfc22030fbfcfcbd1012fffe1f1bc585e6208a0fe434e72b9c"}, "34bb6a88-b7be-43aa-88ec-0a2d59832487": {"doc_hash": "1e6f579c87b2d8522cea34ddebc22be60dc067dce7fc87681314cebd0837dcad"}, "1512e8d2-7b8f-4d72-8cb6-4de1b6471276": {"doc_hash": "d13302889d91a25139346ff060b15a176ddc2b0f061e3a876caf62003bf83cf7"}, "4cc44e54-30e5-4414-be87-dc3dad1e7f04": {"doc_hash": "5833b434f98de4336bc56ddb1c4c14f39fb6cd5527fb9697d30b69f2a03e3fc5"}, "94fa673c-c35a-4c4b-8f0c-d438fc2a2ba0": {"doc_hash": "9c3c47e4b88c82c309a20900eaf8ae352778191eacdb55b66cd280a256d66361"}, "8baa1f8b-715a-4b8f-94a8-05c9587abe44": {"doc_hash": "b84ecfe78ab8d519921f990a08d4af43712fce78c431665ff9e03e87456e8605"}, "1d75198f-372c-4b0e-8cc6-2cf9088c675a": {"doc_hash": "f5f36d56684fdd3e43a7d9f5e1817882deaf8e6eea37aee77fc3661583e400d4"}, "b6712f88-c3d8-45d7-ab1e-d836c23ac4c4": {"doc_hash": "e678198c3f7edf17859faf3c8e2eedf0c60890a70f1eb9a0a72d6bfcfa871eb0"}, "1394664c-11d0-46b1-9a5a-a2edf0d93051": {"doc_hash": "9a8cfccfdc6faf6995d12305f3d4c1168eba8a07a76cc9b2addde5e1b4a38ba7"}, "11b8c5d0-58c7-4100-99f8-600acfb8e955": {"doc_hash": "aca3766fab5ac765c8c19b8ceed8ffd2a8dd5ab84c37066b4577dcd7fc301378"}, "26071537-5165-4d2b-bc60-b09088365ecc": {"doc_hash": "05e452a73a4292c14de5dcb38773cff4d954742ad0971d16cc697b17101043e7"}, "24de856e-631a-428b-9398-e7a5cc725bc1": {"doc_hash": "d0f18b1cf15b077afbdb328ef8dc2444f250748d786b4035362b9d047d1bfcdd"}, "82c78b69-9b2e-45ba-9d0e-da5e42592138": {"doc_hash": "90c0270186721c9bf6d305e0981fe8fc836703723d5c5ea99377a5ff9ae92d14"}, "c0e6c853-a4f2-4fbb-8fea-7c38ac6788ba": {"doc_hash": "6af2346003028e83a23e34d7738cec1dfc8139962383230ba670abbd55b5e4e3"}, "0159e441-da03-44a3-a510-08985a659182": {"doc_hash": "4b04bf6ebfbc2afe1174c1a9e483e6cd6da3a74e384fc3d2ef0ee999f4de9cb4"}, "717e5f72-53a7-408d-a3ae-fc5b674b3c5a": {"doc_hash": "8e685c6123b1cad7a3f183755688682ad05e8243b38ba4cfa4444092cdb17a87"}, "30307e36-2c2c-4ea4-9cd1-6184fbb00acf": {"doc_hash": "6323f97b1cc828f06104a458805620e0b1bbc7d4d45bc5d181dccc9781d0d4c2"}, "775e96f5-0592-46c7-a0c3-795e928ecfcc": {"doc_hash": "00b2d21c8cd1d38cc9caa8a236d9d050e1852d4496d59d4e40e2ebb2841716c8"}, "6d4097c7-b1fc-43c7-af49-89d817af2bc7": {"doc_hash": "8d54453e99f320f169f14ea8ec238bb165332014c11c49f9b5aa6b14f7d5f461"}, "3c0d953e-7217-4326-9c0c-d2fab55efbda": {"doc_hash": "3fe4b6a64fdd0e660a43cf244c0ec18bf66108d28a09e797bbf90e628cf0b7c4"}, "0eb644d8-d73b-4d17-8822-d28b151ed9b0": {"doc_hash": "6a1ceee1bff1f45ba9603ffd3469cb10d87b6d0721bcaa71b78a4d3ff32a97a1"}, "be019133-cb45-4b6e-8da0-fa5b37d79dcb": {"doc_hash": "edec33dc3cd312412bbc9e1d002869d2d3a2dba1b798856c25950f35a617d7da"}, "4eade037-4592-4204-9191-cd2996007fdb": {"doc_hash": "b489f4cc2d1d675f850637d87643dcf1d7346f4a8a23aca8b8174a9997506cf3"}, "9958a76d-45b9-44c5-a5df-8c17aee15ffe": {"doc_hash": "886596f70776a636f5712daa35e64df229bda2ccda878ce6075a02ee28550261"}, "9c44ee0b-903f-414e-afed-b996eafdb5ad": {"doc_hash": "df6a4acb0db6233c439d87bd95359d0830e31d53a28d50073a3534dfa655995d"}, "5dfcdcf2-40e9-4d6f-8c2a-c07f8c3c72c4": {"doc_hash": "3a25f22ac2b2d692c6ea91907070a9f18199759bb60b3205e8fea8451a0e0c2e"}, "e3a68f3c-8dfc-4868-b72c-5f66d7695afd": {"doc_hash": "f3745661c9360eea1a79f31098c048477cb7076c8ff1cf9aeeb64bee94fc9d50"}, "ed176568-a807-4b1f-a151-d3c73299a01a": {"doc_hash": "407d1211277ad57f6827f58a75a8c22f0d6e2a6b9f3b0a1b4816b5012cef4730"}, "9218787c-fb29-47e4-bec9-45e305275191": {"doc_hash": "403c7cd9da53e19334a1753edabc829474f7a7e5a32c1fa5edd1bfe58b640ca7"}, "15bd502c-ab68-45ec-ad6f-65ab5106d56c": {"doc_hash": "652af53e3ab2b2cefb0595dfc023e7b7403ad44a6ce2fd4743f6cac226f64240"}, "2630c9e4-f8e4-4a93-9b7a-03f4e04b73c2": {"doc_hash": "3b03d410b8359d8bc92fa12953b1ea5142c3df14e3308ecfe21f71d4b190f71e"}, "e7736e3f-cb0b-44f9-b775-8f59f9173e5c": {"doc_hash": "b5abf602647e0e28080379a0621345839bd64476716f07192336abe079160095"}, "e88052ab-082e-4d00-9c2c-1cd130aeeaf7": {"doc_hash": "eeb19e21622570711b8df13613d78b50b99b3d96cf430f397d0ba0fbdeaf125e"}, "393c1ba6-92d2-46d1-86d2-1bd3178fcf85": {"doc_hash": "2b78a4c10247a6f3af27e0af46e2c03ea9dec31e3e23ac975028226eb834a5e8"}, "292715b5-8b0d-4b77-9470-65776f1104e3": {"doc_hash": "69ca62fac42f5224ff55a94f39b4b057609e1fcb10de8156c065e50935d502f1"}, "bacd6d88-3582-4e1f-9093-d142274fbe41": {"doc_hash": "67a15b4133cb91b4bd4cf797dab72e38adb83c382b800bbc8ef7aa2089c45437"}, "9240973c-ad34-4e57-91a9-49db4196d176": {"doc_hash": "169e087c7892f3c1a94571ee5c49cd646998316990e1bd63c46f001f50b9abcc"}, "8e9f712b-059a-4146-a231-29bbf41a4f00": {"doc_hash": "94237b6a8083b18e0987a1e1e5eab202cf604e962cd3112a8028468034426e55"}, "68899b06-97fe-4c22-9f44-482b8eea1e51": {"doc_hash": "3af8514b0025398a69726e10fbc2a61fe860f9a60d5e4d13ebb18a8d55862b72"}, "dba355d1-c99f-4f48-a736-eef544e03545": {"doc_hash": "b7edcd33153ba9f7f47b9da141b964c339f390a2e455a8fee5d91dd1b999702c"}, "f9a90a67-302e-4f6a-bd7f-ab320dedb9f5": {"doc_hash": "12f261d8cdec6d434258274ffc027b199bbb313f050c937b1182f9a4752d1d70"}, "b90dd89d-678a-4d3f-970a-2aa19f1b092c": {"doc_hash": "a8b1c95afb36881d5ca1e4f4062a0118479aa337d93451faadf2614dd422ff6a"}, "bc175609-d4a4-41aa-9484-06e8641a3da3": {"doc_hash": "d31ad0be122ae72a2e5aa3921cb11d23debea7d47927e22ad8bb6ad4fd0b0175"}, "d829e738-f39d-4553-b87f-df0413bbffb1": {"doc_hash": "e7d93d733b7fbbea4bc0542746b33a046e2dc2868764929fd88938ca846cc6c2"}, "7fa4371f-2b40-403e-b039-85dde34a5837": {"doc_hash": "a717271b171fb4b22176e72e7a5020c2ad6f46ca4717a7be93408be7be082b03"}, "e5de85e4-b1fd-4309-b277-1f0d2a7b5adb": {"doc_hash": "19499e4ee1e902bb4e1f135398630dd192ca897ef02c256943fd01e615e1396f"}, "0d492ade-6404-4674-afc0-4160e6fc7e0c": {"doc_hash": "abab507bf58fa913866a10474ac7dbe1cab8dd3c4af66ac179d32bc24fc68adc"}, "ad516506-5eee-40f7-abf1-96c02c264181": {"doc_hash": "9c1591ded44c22d5db9101b71a80c981711f007227487918c422c6de59a6d4d3"}, "60bc2e17-b710-420e-b7a5-3fd3ed68b966": {"doc_hash": "5c62863f958e9cf306677155fc5831cda7b11bdda4c7b662c1ee9c2f64eabec6"}, "726445d1-879e-4677-a365-f20187a11ea9": {"doc_hash": "22b96e2f60fc0da5c54833cf0fe9bbd6e5d01d9b3140f909f093e004e6141955"}, "89f2efdd-e8d2-408a-b9e3-c372094b90c1": {"doc_hash": "66584f7332f72b57fa9ebcf764c8954c19c40b60b632c07aeddf268d8f8a175e"}, "1eb8faa1-39cb-4078-9e78-116e63b6abac": {"doc_hash": "bb7012b30da1da1fb527814c1eefec9cad70f6b3a346d41194086fa0c4ae6170"}, "7a9c110e-30c5-46ca-a75d-9ce90e923bea": {"doc_hash": "13f64bce1e037b303987c3b892fda567703d4715f15b15fa0f2bf69ed7dfa6ab"}, "61abcff5-00b3-47bd-b611-d19531c351af": {"doc_hash": "1834d7b34a668546fece8a84b4b83393799bbe291a3c0317f4253a63cfad84ae"}, "ef7d1853-bf95-4bd5-b443-c41ad5ac2531": {"doc_hash": "b24480691faa7bcb3471135f8a24379183cb0a0055f6b5be2c5a2101848126fb"}, "0f72a4d2-a252-4cb9-b7d7-32153b3554cd": {"doc_hash": "23d763720c42c45467ca1ea0e312df791b9d66a1331ecc351f710704d10207f9"}, "91c6c0b4-c0d9-48f9-a727-b66345b78cc2": {"doc_hash": "cb85ef396eac2b78b81031d17ffebe0d229c0247e6c7c7cc49fb60baa9a72f98"}, "fa37bda2-f6a5-4996-a99f-6a3a2109009d": {"doc_hash": "eb5b631d6c06c6d2d0b7f56286bf4890938b3c22aab936240056654a1f3ca18d"}, "1b7dbc2b-26cd-4cbf-bc1c-5ace4d71e6d3": {"doc_hash": "270b725854dd88ff89d385500112c146dd75f4dbd530b25be51c5341458c55d7"}, "dbb3076a-1d3d-4627-9d2b-84d9a78ef5dd": {"doc_hash": "103559e6490fe94155bd65c95b5ee20b8e0197fddd1efd57f9061545025f1585"}, "57f1a7b8-d174-470e-ac9c-d966627835f2": {"doc_hash": "f2cae5c47e390927432a1027e8763b9522ae14085ab0db6fed5b8621cbf37baf"}, "f8aea7c8-cf21-4609-b220-0fa58b4ded2d": {"doc_hash": "d1ecd1d612a1f0d3377c05701ad5a7299da1e9cf7458310b147d4a8a68317408"}, "72971b7d-cf58-4874-bf99-c709bc6365b0": {"doc_hash": "6946a17e85b52b3b126d04a661327c2e51db40181006f9eb292e0894875cf8b3"}, "03a016bb-2874-494e-b961-cedccdb46160": {"doc_hash": "9f7efa8ce4615b70319dcd9ef725cc30b0201dfeb61f04d5b1517b0ec0c091ef"}, "efb04f9a-f016-45e6-a329-4a53d332a417": {"doc_hash": "a37934312abc7d5e9747be7152b109408e9ab0830a9b393bb9b4980a69acfe78"}, "27229a91-2e58-4518-ba8e-96ec5296bb60": {"doc_hash": "6ad917c2cc1333abdfe42af2247eed6071fc1198b0c028a0274bd180f4d85baa"}, "c2016448-1964-4221-a16a-7164170c50e0": {"doc_hash": "07e2f5716518b8ec62dbad094b8320724fb32d81a0a68e24f030dc58e96e42d6"}, "4fb73506-e504-4ef6-9ebb-209d6d6e4e67": {"doc_hash": "f22b854311d7f829166dd9f2f89c57131c0939e005afa271c715284d768e4800"}, "20ab5adb-fbb9-4c3f-a3e9-8bc3b146a444": {"doc_hash": "8feac1be3db96b61e1bfd455104e006a0a98026fa021f3e8cc083982489a5e87"}, "b11a67a6-22fe-4810-83c8-e7055b044f8b": {"doc_hash": "4b87d0387ea31f23c3f00ef9d6dee3eb9bee9d4f9990c4c80d902ec1a85bfccd"}, "5b83efbb-b597-47c3-9e73-dea1b9c140ea": {"doc_hash": "3f018afd8f01895a3723c2a8360793204f2b1ba69ac67e67a36000d8df700424"}, "312a0ba3-2636-49cd-8f74-147c0b737526": {"doc_hash": "905094d4f64810672cebe3fc73ef1565b7f5a2b0521989aa8264807d047a95ef"}, "7ce190cf-fbec-4c1f-bd87-7598b9135d4e": {"doc_hash": "a2a13ccb9f795e1beccb7a7aba7e984b9c5867227ef5e828f8ddcebfd4e12d91"}, "27de5341-77b5-4507-a0b0-7d55aad02307": {"doc_hash": "62f4bcd91e87bd26984619005e07f8d1f8ee5742add82473653762c5386e8d7e"}, "16aa8a06-916c-44ae-a82a-ca93ecaad650": {"doc_hash": "38509855b36cfea0e9b4edeabbdcf3fb655ba8542ed6b2eb3a26643507f95327"}, "381ccfae-363f-44d6-bcd1-bfd2c18c58ef": {"doc_hash": "4a171d37b21d36b05b43067a192dd09d7793a32fb00ba484a6b537f3443c1408"}, "10e414d4-5721-4363-8589-5cebe57d41aa": {"doc_hash": "55d7ff2738bc24479f5dd0f5e41cc1baec66e7ec5eb7f736fac468674b5a1846"}, "71ed852d-8c02-4e42-aa6d-62ddfc0759b0": {"doc_hash": "b6ad06bb85285feceb5359ae014e309dcc654f68caa6bc35604890915f9306d2"}, "15b9b00a-e699-47e2-a05c-bc5cdb7382f4": {"doc_hash": "07ee87c36a7e58a6a56cf62fa59bd08c3830157c0dd9ca79e9fc86ea643c7e30"}, "b5c06862-7ceb-47b0-896b-fb287a4b9aeb": {"doc_hash": "541a23de423544683d6cf3069a52c8d4bf2bee459b35f70fbac19d19af20f584"}, "f4731075-6b5c-401f-81e6-b221ca4e5582": {"doc_hash": "05f91314e051f0ec38c66e2204db37c90c148fc56892faebf0e671c3c5d769e0"}, "338f2b27-782f-44ba-a55c-b486572fe93f": {"doc_hash": "d3271b22bf25eec320c049f02534e0e411b28119517582389e8f760473f53dca"}, "ddbcb631-dc2d-483a-abae-bff3d5d6a4cf": {"doc_hash": "22742cffbbcb5d16b5b65784e3d52cf12815d157fc8c18ecf085dd9f1a013dac"}, "cc5b5ce0-c3ea-4d42-89b2-0b31bb859903": {"doc_hash": "5af32dab5ea631d2a4ebe918bb893621e39d3697a45e3530a616ece561206621"}, "820a4896-88f4-49f2-abce-3b9433c39365": {"doc_hash": "0ec941cf4ba2186a3ff9245afa02a35851a24fbf495be357829d36534b3035ea"}, "6a18345d-a554-40e4-9fc7-526e9354b2a8": {"doc_hash": "f8255780e8c0627097f2de7d09b36955dab6b2f88a60346a5d165f7de050d5ad"}, "8d6afc77-a292-418f-af4e-358d9d8ed358": {"doc_hash": "14c5518c31c2d8156dbdfb27dd3f1ba09e20535ebc8a3c6cbc83d4add50ba098"}, "e5c520a0-6806-477c-bbae-37598c6df915": {"doc_hash": "1777ec24d84b7ddb6bee04a58abdb28825970386650d278d922ed656d0eeebc2"}, "fb1ed94e-bce4-44af-a6db-f8fd5ca28eb7": {"doc_hash": "feed7b441877fb6146605126229269c09d6b337aeb654b3507d5ed7de1150396"}, "72a9260c-df08-4e16-bf0a-0774b8fe1a71": {"doc_hash": "731c3810d6dcb80a186544e2a3aa2d2ad685f2affb8dc4587f95967d090e7c83"}, "f73ea96e-60eb-4892-a798-f980f0bff6e3": {"doc_hash": "011c91a1131e960564b3d28812c56001a754da39e296f369112dc47b59a775fe"}, "32e77581-79ec-4b01-8f43-00a6c2c3fdf5": {"doc_hash": "3bc804291d96be2cea1232b1d00b4eee90ec0d069049bf58bb3e754b050c7a8d"}, "9c95c66f-e9d9-4abe-a60f-746bc1dd4935": {"doc_hash": "1b782b506f3354c33b228fdc483bc0d755b790bc77628a241b3449d29b6b6421"}, "26519c46-edb3-43e4-8d90-422165aca48b": {"doc_hash": "c0402a0d092efedc36e9e4474ef6fefa3fb2af4e7cf579cbe1a35d1dd22d0c14"}, "1f2ce779-93a8-4fef-bda8-a19d94d54243": {"doc_hash": "05ad246e69b333b2b0c9f1d51cc6398d6f56c6f92bad9858e3ac9ed74965262d"}, "0043885e-1378-413e-a548-74b9c628ab46": {"doc_hash": "c31dad0f50e8b878f92de294e8e86b432bd7e969886c901de353b22eab101726"}, "30b6e3dd-42d5-4dd6-b589-a9bd6cf3f22d": {"doc_hash": "6d14976f73dd247ac27b12b29b640cd860b8bdb842932edf60adc4d167621e5c"}, "dcd5f10b-f226-478a-999d-995891868203": {"doc_hash": "b04760300da6cc001376bd91385ab6e884e7a577e70f069ea61b5284e98a9508"}, "c9af7c98-eb43-4db1-a38a-54ec4eee41be": {"doc_hash": "1eb0e6037bb436ebdcfa7f4055cb1d2617d796e8df8e4b1e41e98b2ee721da5c"}, "892d3aef-c9d1-48a5-b57a-6cd4fa5d9863": {"doc_hash": "feb128ce8e358d5c8e1bfcdcb2515bf9c077f8e34951a388827b49dcc75721e9"}, "22614239-561d-4fc5-87f1-eaf86076eaa0": {"doc_hash": "939cfa48769c600fabd2799b0d41bbbda5ddaeaaf1eb7b5adae5e5250340fb77"}, "e2c03cea-a62a-42cb-8d60-71e789622c3b": {"doc_hash": "4ad5f986b2e1f7233817022cea8204d99d0ee50cd314fd467abb417478b8e212"}, "ae234c2e-fdaa-4e9b-8038-94ac4f4fda69": {"doc_hash": "40d6455b34babe3cdbc18b4d383bd1d3a5a81c1558e6e120f879155bfe090219"}, "08c73780-3134-4bd9-8c40-9eb443ab6e3a": {"doc_hash": "f40964887645ac53bf6ac77a428a867c264e33b9127fc01ce65ade0343b94715"}, "488eaf08-9f55-4810-936a-97a96649a9b2": {"doc_hash": "6c5a8116ac9959dba202a6b50004d7072d4a64fcbd27f68ab7b4c0ec417a0318"}, "cfe6b720-02c2-4214-9f7c-9d2cf7f4385d": {"doc_hash": "dad6f336fa7465f3af4ba5d260b1b903189144df87f6d0f384511277443007d8"}, "26e2b798-f0e9-4d1a-ba92-98746ab879bf": {"doc_hash": "45c9fc39bc6d3d0efdd07f69571df269163813a16ef3abf9bf5c8ce37b4346f1"}, "02f8a7ae-d6aa-4d97-a9a2-857a233b311c": {"doc_hash": "144941c113edbd1d1efb04bdd853d5d1ca4f2b5dec6c141afb913de283d1770f"}, "987c6423-77f3-4b64-816f-83f743c91633": {"doc_hash": "14208d237675e4af993aefaa7bacc20a22ce8438d9e9e172edf47d45842e0498"}, "aafdec8f-fddc-4cca-ae80-543e93b3bec5": {"doc_hash": "409395868bb32e3b79320ed36f58e6e375640198d6d8371c831b204cce9664f5"}, "dd791c9e-657a-4ef0-93ee-cf37d8dc5332": {"doc_hash": "d6a80dfc524b7e6529efe778a3a03e3938dd0bdcebc5a3c6c3e3fe5cd0de89a2"}, "931bdb33-06f1-40a7-8dd9-4b917a6314bf": {"doc_hash": "9c2393bfea8dbf45c37d14eede2cdaecf87b065ce75b8f6df6ae99e36c22a78d"}, "e6e44a4e-9d3f-43e8-ba25-535594dd4aa0": {"doc_hash": "4381d4017b4e1070a592fe04ee4f7fe9f3a27352b0e4b02c897d8a9bc6ae7a05"}, "f25dd720-f220-46bf-a1c4-ae068389e06d": {"doc_hash": "22f57cfd0569b7c38e744c2302140afb3cdfb48e07bb9b0a7ef89119582f3892"}, "e1abab88-31cf-4b5c-b5bb-362d5d9e4781": {"doc_hash": "417bc740dc9d8ebf1d5dbcb7aa64b29db5b6a670e5f761c0f180c291cdb505c5"}, "c1abd69b-a996-4547-bcb9-339850e2c578": {"doc_hash": "fe4c8dd1fd5a52f9f11e9976e3bd1bc9554463bc4a2098e4ba329e3d73a603e6"}, "c33d8504-783b-4537-888a-f234e269cae4": {"doc_hash": "57ff83e46de6354f8667db1f5ec8b7b1adaa59f26d219f32e6323acc2658ce89"}, "a6b81d63-4c32-493d-8316-234b60f12875": {"doc_hash": "fae0876c68576d07c8da33c1f388c4fb2ea8e3da608471aaa813cc6c36f1cc20"}, "0de56f77-8aa8-4ec8-a802-6b6ad83a501e": {"doc_hash": "ccd1689be1a296abc86c510f91421a6d2f1f62ac71cbe0c1fa8c5534730ccce3"}, "9c0f3155-8c2c-48bf-b5bf-e15a3da8bdf2": {"doc_hash": "bd55cc46d24983aa7b411f0ac77a5e2123535fdec863c91225b1fbb34eb21d5b"}, "c411f31e-f296-4c85-bfc3-0f68548c4f69": {"doc_hash": "4d4d5af61b7accaf7003c2c2b9944847188c90b690bd2c49e66fcd8c54516774"}, "6d1ce695-b5af-4526-a3ec-fecb8f85e3b5": {"doc_hash": "cc4e3f78c222c41431086daf9913fbb79f8de01292a4848358c31dc0d5aedfce"}, "dd6cdf54-ffb8-4c73-9efc-eb3d4f946350": {"doc_hash": "8018cf5409c5af714cdf6868c6dcd2748af247a742ba478177ab75361f229288"}, "546fe59b-fdfe-4bfd-a820-5ea7d5794393": {"doc_hash": "debaff3a93d07742e25b75e1be83e713dadfb0e0c9213303c9344d00269ef59d"}, "e7d938f0-7ef2-4eab-9e6a-95bf5e2be284": {"doc_hash": "a0e0c714225862bb519562179db692ed52f115ee8328792cbb5c89b639e69fec"}, "37c3ed5b-5261-4f6d-8466-058a5f1f4fb6": {"doc_hash": "f5d1489f38e008253b7b5ad07db5880977539cd7c2f9f4ea35faa0d9f76706d1"}, "33cafa41-ffcd-4e91-bb7c-4ca9df73e40f": {"doc_hash": "df21500f08f7fefb0e5341b60510df85588f5b47a24bd75bd9841497ddbdb567"}, "8006b6a6-f025-427c-a9ee-64a2f7d74b4c": {"doc_hash": "ed61e35d4c64d6a444f0fc3aa203d69f1c5f7532b54f69970e8a7017104fe01c"}, "1b9de640-2e82-49c9-8283-6f356fdc20dc": {"doc_hash": "b876a52725385303079e20444b8b4c1cf342eaeb55b695cc47cd8254935aac18"}, "536c6f6d-d678-4823-9df6-887f3c47ea25": {"doc_hash": "f9c7b3f7dca84beda80e824381dd07f4f570824324dec191e8eaad7ef5f23d82"}, "b708cdae-27ac-4c9c-8252-8df30880b6a8": {"doc_hash": "b5e4ed2e1c3f59aa53624d325367ea2e332456bb5b0c83792585ed9f21b7e84b"}, "1d43cdc9-5010-4304-a79d-2f24f2cb55f7": {"doc_hash": "3ea53d7ad16033c888ec5eebe4892a564d4f83bdb4ea7dc11c16c31c076c67ea"}, "e81c45a2-a91c-4b69-9654-6f1da0af7b5e": {"doc_hash": "e26532e3ba6daf37e09b86ef8c9f47cfab042f2e199a98af30bc7186fdfa7329"}, "f7b148de-ae43-4768-938a-ef3766e5e9a4": {"doc_hash": "7738a0aa9f435d8af72d561210fba64fbb75800d89f11ba71494bcfddb76e841"}, "47d17c0f-09a1-4258-aa58-44959dc97871": {"doc_hash": "3b7ccbfcc037a29a58fdad13ab8db51a5d9ec6206e772633f60d8e6732da9ee8"}, "ffe717a0-768a-476a-9174-7211a73454b2": {"doc_hash": "89cec5baea3f7aceae1754d05175f07828b50aed3e578e0e9755953fadba6b9b"}, "399997b9-1df2-4c52-84e3-41cc1050c6b9": {"doc_hash": "4e2e767994db32fb42eb6bd918126bf4720cf4fd9d3daacc7fdd0cc1d78a939b"}, "d2bbed9b-4123-4f0c-a92b-065160dfb8bf": {"doc_hash": "b07c32101c06cbabb8a27b90dc594d02981a1894271f56e2d82b8fd9cd213020"}, "dae7bf9d-b45d-4b39-a0ab-5ae486f4693b": {"doc_hash": "cfc51a3ccf99fa529cc013fb4d61437ca59ba2419db8d399c5f352b8a9c74e72"}, "a5ea1280-ff56-4911-bbe8-5025bed9be20": {"doc_hash": "d262a49b6464b0d683b272cbdd0235b339850768f833eae921649a6fae9513b4"}, "7cc854e3-937d-4bfb-aa1b-3ae33b8a8f99": {"doc_hash": "905b59728c662781c23c51c5261e1567280176f93ef330f15d1aa6f94656b3fa"}, "66769a97-e4d4-43d1-8c23-d7018b141c41": {"doc_hash": "27980f7bd96cc13266177aee95a72fb41eb77762d40bb6a9000a033cc6543fd9"}, "0c3d1ed3-e7f3-40b9-98cb-53f523098891": {"doc_hash": "30397f7ebb9ed3c7d8807a79935a7952eff2fd26404d49ee1681ed0a53d8ea57"}, "38392cfb-c005-4336-bed9-5c0a61c487e9": {"doc_hash": "5cabacfbf2d0efe6b2f07b6aaa65bb870e3408cc65b2512f63dfb12b18af15c8", "ref_doc_id": "a0e08835-711d-4e28-922f-fb2f7f064c48"}, "15bbaf21-7e87-43bf-9b8c-b40d795c5b44": {"doc_hash": "97217069ea8db8ba70f1cd31a9638e0fd5acce6e783ef74260a9ad26ba739fdc", "ref_doc_id": "05dfabb5-3112-4b47-af4a-646e0c95be46"}, "d6a44019-0f7f-478b-b84f-6753c18a1822": {"doc_hash": "aaa11745824d3e5e4ada44f3f644b4342eface9d2545912912b3c08a410402f3", "ref_doc_id": "d9e6e873-3fbe-4314-ada2-b68012438a80"}, "41d12a6f-464b-4b19-9fe5-559ec46f9727": {"doc_hash": "5aaca2d6c718a8c9ba3adc1bcbfc6c00f3e963c838246441eb427912b53e1e7f", "ref_doc_id": "b56b7d02-0233-4e75-bda4-16d20021e50f"}, "ad9daf5f-92cb-4bad-899f-2d7a497803f3": {"doc_hash": "57ec0ecd7dce5220793a8f89ba1adb7bf190388ce13709c542781b46aacba9cd", "ref_doc_id": "d5a760ff-6b1b-4c7f-b3df-c99eb876023b"}, "d73ed1e5-6994-4e21-8eb0-921ab96a206a": {"doc_hash": "aaa8a06f7bf863f39cefecf84ac6f8140e444f5fbe8bf89ceaaec123e545ca81", "ref_doc_id": "f43b82e4-1424-4d61-8690-7e518485ae6d"}, "57d91f76-5cba-4353-8f2a-2893abd5427d": {"doc_hash": "98efef3eefb150801a1f55ba25501e44e55a20a12fae4cc054a77b54555daa74", "ref_doc_id": "2776cc63-94eb-44bc-afb1-dc3edb5c7058"}, "0b19a9f0-3937-4512-bd97-e98fdf184378": {"doc_hash": "1889dae261c07e8868cc010850a4b41c91a66c663333500b282468e12a7fb8f6", "ref_doc_id": "17d92989-e6b1-4ff6-b817-b030decf673b"}, "ff3f45e9-fcc0-46ce-a947-5c16d2a35154": {"doc_hash": "85944515d48051b19c3a01796ba48ab9737d0ae2451ab70b378c5bb5beee62ba", "ref_doc_id": "453e8ff1-2c38-47b7-9737-1b14d5db58d8"}, "448743ab-434e-41d6-ba01-a607e04c1bfa": {"doc_hash": "117d62292d83efc2fb5531f8edc1704ca6be51724fb7f39b736d7bc14ef611ae", "ref_doc_id": "001678e3-b82a-4ec7-b18d-03ca81bec483"}, "9d965b5f-7f5e-4f31-b422-3329fca32fa7": {"doc_hash": "019fe34e10ac04c897e00ebf61a9df208111c1f957fa19c9729b51b7b2eb7f7b", "ref_doc_id": "92a35a12-a98c-470e-9113-1ea60b56548c"}, "dfb59914-451e-426a-a186-5707e694368e": {"doc_hash": "31635578c7208366c69ecbd83653dcff709aa4986aad5113b811ace5fe0d2fad", "ref_doc_id": "9b1e9e4f-7616-4404-8825-3341066102d8"}, "6c617c77-7034-4713-bba0-66aa9ef4abdb": {"doc_hash": "42c05058cc886623623b8db97efe5d3d0bbadc2826af5f7a681b7c708ba473bb", "ref_doc_id": "dff8ab15-4d9e-4211-b477-c81282473175"}, "ee905d4e-3602-411b-93a8-597841d30b48": {"doc_hash": "3a644c24c22174e51c7628b95bf4b2d269bd20e06a6c3e8a8d6d25ce503b5ab0", "ref_doc_id": "6ee0e2a5-4ac9-4b73-aeb4-0abb2bc90848"}, "5c18f63c-6f20-401c-8329-f53f5eae1258": {"doc_hash": "160e61cc5274f6582f61bdbc18c1166d19c1361e784619cce76763f02e33d81f", "ref_doc_id": "9f73fc41-9cd8-43fd-9563-bb2a4c9ba85b"}, "dc0cb11b-f410-415f-9047-7779209b9cad": {"doc_hash": "8e28785ecceb64753fadd718052b91a1c18122ea2d99c60d2f7e3039e1725299", "ref_doc_id": "aa998532-d86d-4132-b45c-c59c082f9446"}, "0b471e3e-ef2f-49e2-9913-d2bb3c442eda": {"doc_hash": "c03f84fb2e93e066166256ecbe9480b755584495db693b93e9eb4d514292c6bc", "ref_doc_id": "d8aeac3b-80d6-434e-a88b-c769632035e3"}, "c35a60ec-01a9-4bac-add3-819d9849859c": {"doc_hash": "f58b982240ae9a43d386763ddac4315e544a9c7daafe615a444ae4a048f3177d", "ref_doc_id": "04972e5d-a642-48ad-9870-1b8f5a3ec119"}, "8059b26e-a5d7-4422-a87f-4506edb2dfb0": {"doc_hash": "886cc771ad2d0a503d8c4343a32b187525b5b73454024fdcc242f920ec5ed82f", "ref_doc_id": "e567217f-3bf1-4575-9074-be87278fa136"}, "f7b5d6d8-3372-4ff3-93be-32c2d4abf7b2": {"doc_hash": "1c1ee565271142a43fd2db2a28e9bd9cf143d818507605d819bec3a9b03aa7c6", "ref_doc_id": "59d6e898-b3aa-489d-b098-7c48b54e7b65"}, "27e5663d-33d5-4c6f-bff2-2ebbd3afbd1e": {"doc_hash": "36b1d418e9212c35edde1cbdd2b89a4f9daac2fc5060c8379ed31368eb834aae", "ref_doc_id": "b8820a50-6eb9-44b8-96ca-17b6d4e0a424"}, "c59f4818-1c78-4e5c-bfa7-2348d3e233f8": {"doc_hash": "4ba56df0ec96a04fe7d3e79ab210e52cf36a45af38f19f0e3d9831c810a3244c", "ref_doc_id": "ce926670-e282-4cda-8ed8-d165b9ddc037"}, "c403b6f0-cc03-4cf0-a43d-2e6085eb1d47": {"doc_hash": "3202406e0c0f25a4807a4f3c065af615cfaef5985639af251f6376e2fcd0c015", "ref_doc_id": "97935c74-f21d-4f82-80de-c9a8d3631c0c"}, "5522fd06-bb3d-4c1e-a75f-2bf8cb3dc9df": {"doc_hash": "9d3d7fc4337edfde166ff6785f84e390930927e5be5e76435cc853e0d11bf66f", "ref_doc_id": "80bb29a5-496e-4b07-8a53-f3593a56e1ae"}, "de7b6b87-7c70-417d-829e-d0d75f1c9720": {"doc_hash": "a3a127139dfb7fbe8aa84f0497944a817271e57c0c136d9c8fcd345a63b96df7", "ref_doc_id": "936d2e6a-7107-4b7b-82c4-ab0d661309e3"}, "e9d1e950-c3b1-4a43-8c91-e9768d352418": {"doc_hash": "8c4a30c39754061be056eacc506a43058840f7ccf1e36e6814a82e2f964e9ebd", "ref_doc_id": "c43193b4-f754-4791-afbe-de7881ba530f"}, "cac621fe-f830-4179-9aa9-a5848dba4b31": {"doc_hash": "6be91072496cc6b426adf6e928bdf53685615716fc880afb8cc0e38765f47cab", "ref_doc_id": "afcac854-32ec-4ce8-9df6-7d1af887fa05"}, "064976af-9668-444b-aeab-342784ff12ac": {"doc_hash": "b3fecdb10aa5f8c47c4806de007c8fe30a9c9f2cef9334f7979d698f7d2c3143", "ref_doc_id": "74b13dd1-6d0a-488a-a112-3a6213296efc"}, "5028cadd-0347-4849-be98-7de8bb1f7521": {"doc_hash": "b01ab6230af1031365576433c0e0d2c75a1546d734bcf02bbdd3a0da7dda2940", "ref_doc_id": "875a3fbf-9f56-4eed-96ef-506664e2f5d4"}, "741bbd43-94a6-4917-9514-ad0269447170": {"doc_hash": "da8007ba44e804042bb401786f19e96fd56f566f0c57a6d962ceacdc0beab5b7", "ref_doc_id": "09e14734-1b90-4bab-a011-e88b3c97d117"}, "8e3cf609-809a-4cf0-9b51-aa099341b320": {"doc_hash": "3d85a86aa8b892f50fd30f5b8ecdb24a62e5852b63590881d4f715bb4d503944", "ref_doc_id": "984f2bbb-568b-4f6f-9411-b670e4ee6a04"}, "64cb17e9-b200-4d32-a7d7-88f15ee9d73d": {"doc_hash": "de9e762eb4c902d535f143f3a05fa92a08aa6673e9c5addd69411956efdde4b3", "ref_doc_id": "db650133-06a9-4cf3-87cf-c5e28ff28731"}, "bd83b56e-76a4-4d6f-8290-5ebb7784f63b": {"doc_hash": "3284280b20a8b398670ad19fd213ca00cb16be44bfcf0a1814df23da01add4cd", "ref_doc_id": "a171f1a3-18c1-49dd-b34d-208919f28b4d"}, "a76b0f8e-c40d-412c-a07c-fe5b0c2d2acf": {"doc_hash": "240140b449309b5a529ecb84d5a467359b524e9cae7fa49cd271f6219be5fb7c", "ref_doc_id": "7bfc252e-c1bb-4d0c-b6a8-c5ab7f2fb6c5"}, "44397883-1c2f-41c7-bf67-2f611be57471": {"doc_hash": "09e3fbc1b46c0a6b89c2e5a7438418ebc3b56a6ef509b0b8ffb9dc2769fe2578", "ref_doc_id": "b2659654-65cc-4611-8aeb-f1a6533a5646"}, "8a97bc1d-9fdc-4db5-b01d-90fa72591203": {"doc_hash": "266642cc961d5619e7fa71f7a4c9cce969fbf086c932051693aa49e4cbff7eb1", "ref_doc_id": "a2a22528-4dbc-4f43-9858-c09203080aa5"}, "c1fe164e-73fb-45d8-af12-c02646505cb4": {"doc_hash": "4779c6d384be37940ca529fbf3efa68b68435e69dfcdde98258278bd69a80782", "ref_doc_id": "bfa13395-a00a-42af-a3a9-4a6ac4ad29fb"}, "ab3099d4-6055-4997-962e-30a5f5e04973": {"doc_hash": "6fd51c873bc9df008a319ebc317e6f5f553723504105e5237b3ab617d4510553", "ref_doc_id": "64d838a8-b7cf-4a1f-8f0f-e82c15232721"}, "f4c2e3dd-30a9-4422-8800-56d33ae724b6": {"doc_hash": "0c8d21d004daed2af5d2c48eb19c044fa0c55e43e468bc8a67d50b44c4a3e323", "ref_doc_id": "c994e818-ca4f-47f4-98ad-2a54038464ad"}, "118240c4-f227-4624-9b48-ee2337453646": {"doc_hash": "30b165b3530479b3a8cb18474a04a3e7b97c62aa600135011755972ebd00fd34", "ref_doc_id": "de0b5dfb-228e-4e63-a50d-e8376e7ebe80"}, "96d70b8f-ffdd-4de2-9bf6-60d091228da0": {"doc_hash": "fc9186649c1ece90990254766642de055b722059f3223ff1ed74297165d2bb7f", "ref_doc_id": "a4b188db-7135-4fb1-a1ef-014ea6ce0e9d"}, "0cc913a0-a351-4b5c-840c-f33a0ff93e7e": {"doc_hash": "e83a09548fb980691e658ff7f2cac517f13e205672d5f73d70084cfc9724b2c4", "ref_doc_id": "f9fa1a91-2aa1-4e61-844c-d539917435f0"}, "79ccab93-907e-41b1-8c07-e75eb4c99c13": {"doc_hash": "0f7b67b48f66118198da01ba6a88fade8a6e7029360a56dc3da240d10879355d", "ref_doc_id": "fcef21a1-dcaa-4722-90e3-a4ddee8bbb1b"}, "ba628844-ba39-406c-be8e-7fd9061f7d47": {"doc_hash": "79ed10d5e6cb67f58cb10be716920521b2dbc98a80dbec56306260ccbdd873d1", "ref_doc_id": "12550949-ac4c-42ce-bb79-7f8f05bc1b52"}, "1b8b2395-ecc7-46e4-9aa3-dbdef359b0dd": {"doc_hash": "aa373b7213b9aec54dd07c8098dd20ef5b0c2d723c37bf3743287ba41fdcfe9a", "ref_doc_id": "a02f4137-5276-4d59-a18e-0df1501011c1"}, "48e1d7d7-fa5a-40be-a99c-1b5d52a8aeb9": {"doc_hash": "03b2333fea28faa8d69344aada436f16f191f5625bb18e2ad89d137f693247c3", "ref_doc_id": "80a9a333-b89a-4465-8dfc-9be0ef02a7a1"}, "8e705404-b2eb-48b4-975f-b19264c2ecce": {"doc_hash": "c1476d500adfa120273cda31e890ea518b76849bcf215f0a08fe745332886c70", "ref_doc_id": "85035baf-8b1b-4672-8800-8c10264402d2"}, "7a0c7dae-788d-4014-9b30-1b49bae73f49": {"doc_hash": "5481358153970e2ffd57bacf61c443bd3170e54481998b0c7221f0bb86cf24df", "ref_doc_id": "d5821e24-e683-46de-bbed-0d62b83a96c4"}, "607d9d80-6a10-49c8-88ec-a5c9301dcc05": {"doc_hash": "25ec167d5ec7a35e006d596dea24d107855cc5662e3475e13d2856f199aa5fe2", "ref_doc_id": "3d92b984-6ce9-442e-8103-29d07961e070"}, "0df592a0-ddf3-40de-b519-1f1d4e38bc33": {"doc_hash": "52cc3a2e7aed3eeb9e7b12d1f2b387cfefccc7e950ee1a41feb75a3bfd77f2c3", "ref_doc_id": "fe211cd5-efb3-4da2-9f7d-0f6fb2bddbb3"}, "6c6ac246-2bd7-48d9-aaa0-9d5193f0849d": {"doc_hash": "0fa46d1f336b061ccd9d527ca523163f19b6406eed9db260c920dd485c4feea4", "ref_doc_id": "15e07a6f-76ce-4a82-a786-391cdcd35aca"}, "a7cc8f80-4465-44cb-a8a6-26bcec37d21b": {"doc_hash": "a06c1b11e7d0b87e84f4967d1daacb6d73f3e76caca35f1ac3a573450f0f6be8", "ref_doc_id": "d24a6ab2-d4d3-4d4f-9f7e-3815a774efe7"}, "9911fba8-efa1-47c8-b4d9-5bce638a893c": {"doc_hash": "2388948238f9dbf8bb548f181693b60f9ab4d6cb9b982eaaead70c4cd85e8b6c", "ref_doc_id": "76791d80-104e-4b3e-b88e-43f72c9a3d4f"}, "a9e9c499-f358-41bd-b5b1-ecfa0e46c947": {"doc_hash": "e6f033dfb84e6936540fa714afe2343d64a4cd95b312d6cb91083e660a64d66d", "ref_doc_id": "475c5733-9751-4f43-92a0-91a7ae894dc6"}, "8f7d22d0-5b77-4d08-9ec6-c22b36fc8bdc": {"doc_hash": "e47ba89168e31389e6cc737625ca4358ade37aef22f14426243fca4a612b1412", "ref_doc_id": "d3e7b6a9-d0d2-4dd7-832e-c85eb9e7fb15"}, "6426cfc1-92a0-4ad0-9015-862a708c3c38": {"doc_hash": "ab8e0c0e0da217f06b29263403786c1dcbc4e526cfce1234a638b2a2c56d4a26", "ref_doc_id": "f3f2f7f5-a985-42d4-9da9-74e9927a22e9"}, "dcd14d43-3842-412d-85d4-d6ca572fbf13": {"doc_hash": "4f764df35963b8ad5100091c427b9238573f9a109b0ed23d719f004522e39b79", "ref_doc_id": "9630eb62-79c6-48b9-8bb5-15be162219bd"}, "846100de-d9c0-42e9-91db-65a12e154817": {"doc_hash": "579642e80a9c872a05642077447b7dec7802ea5759345451da241d81f5a350a9", "ref_doc_id": "e2d027f1-fd33-4c82-85cb-83c6879815aa"}, "f90bf45e-4ecd-42b2-baad-c1c0e5b2a09d": {"doc_hash": "e66274eeb7151915b6472fee3b2ff1473ef46259317c9797329cf2d593e5ba51", "ref_doc_id": "a3b6dc73-ec0d-40b8-a9e1-9e1d1273c484"}, "987df782-0a57-4f40-b0a7-138867f46a32": {"doc_hash": "601def9b26f9a4682894ce542d0ceb0ec67a6a0954735c752ea8dabf7d113b40", "ref_doc_id": "7e24d7b4-32f7-4197-86c9-ba086166570f"}, "23b8fdb9-b363-449b-b4c0-d37a0c3d46d0": {"doc_hash": "80e8aa1b403c86e603795cfc63e7330055392135a7784f5a23890b25b792f147", "ref_doc_id": "0724a354-5728-48bb-a759-169f878009e4"}, "2a45bb47-809d-43d4-95e5-a7c97940cbc1": {"doc_hash": "4503e7b991f05ae82062ef3ec25c320d53002861dd6c51d4b1619c4a0217b7bc", "ref_doc_id": "c30adaba-c97d-4148-a9e8-b1101b9bce4a"}, "bbad10e5-c686-47d1-af1c-3ff16753d2d5": {"doc_hash": "76f6e3ce5f11fb116e5ff962cdca36d6f5ded58dd4706a9eff12e2a4dd5682fa", "ref_doc_id": "3726601a-20a3-4c24-8c47-c3aaf89126a2"}, "394597a3-8c5d-461d-b7ee-9bcb622d6e87": {"doc_hash": "03ac371c3bdb23e410e8a4d586a734bf458a84d64eb969f356329edffca5fec2", "ref_doc_id": "101c693a-69b1-4fba-b21c-547b7dd76bb7"}, "3fc9f901-2271-4aee-82a5-8a90c0a0abc3": {"doc_hash": "92c82b5c90bf03c1dd2d7b3bd8866095e2bdbc87d4c159b5cbe4ac3f699e94c9", "ref_doc_id": "4269736c-1840-4f18-8b53-310760cee6b1"}, "74a6b321-a89b-4d7f-873c-6b1ca0028747": {"doc_hash": "ff5e66daccb25826e1c0d2fa2cc0ec18d1398cea458cb392d1a9e2faac075a39", "ref_doc_id": "a775120d-6d5c-4840-93c8-233dd4c200d3"}, "41dceb47-e5dc-4708-9e38-fc0cc57442c0": {"doc_hash": "0c3d2921ebd943b346c19ec5aa10a82658dc0537cab56cc56e9c98f38cd7193f", "ref_doc_id": "f09eb3ae-9c33-4334-b5c3-bdbe13d1e39e"}, "da144610-953f-4987-93be-6f56b3ff188b": {"doc_hash": "c9cd4419553e5ef5ac4d19bc1a44ef1902bdfdf1093dbc7ee558bd340cd331a1", "ref_doc_id": "2e49e39e-938b-4644-ba88-fb61fd7124d1"}, "bc36ddd3-7f23-4a1d-b74b-f1357665438d": {"doc_hash": "3057f7ac15fa762924f25ef12854bbd9451e36177d36d0ed89ae3c7cf31240fa", "ref_doc_id": "2fb68b04-51f1-46f4-bee8-938751b073b8"}, "3cbb3af7-3550-4f2e-8bf3-78767087cac7": {"doc_hash": "2414315d4f406c74b7bca927506518f8f8e31cbd160a4a5ce2a4c5bf59eb74f4", "ref_doc_id": "a952f3fc-9807-487c-9929-80b4fec76371"}, "27f54f9c-a696-4e39-a095-7d36fdc00d32": {"doc_hash": "14c868c45156d7d6b1833616edf4d379410209762cc1170833b97d08faafdc16", "ref_doc_id": "12067c2a-41b2-4052-a23c-2887c79868a2"}, "2e3a2487-39a8-4a9d-80b7-c4be5ef21053": {"doc_hash": "175d9dabc8a8154369e9a26f03339f4ff401ac20df3c84911cd46a355e8396d2", "ref_doc_id": "f8ba6383-80a8-41d5-944c-9eeda070e320"}, "24c6e134-7ff4-41bb-bde2-4d1eafc52c28": {"doc_hash": "bb1b5b93b9080613c7bd9bf8de63fdf35dfc5980356ae15291a668e787bc04d2", "ref_doc_id": "1d0a9154-b34a-4fe7-8748-1e96d2204075"}, "d19645e7-c305-4385-8eb3-952da37645f1": {"doc_hash": "b3e285729b78cf8f7f8d34baf4818be3b0d031bd4c2e2c2a2f0e4f91af352122", "ref_doc_id": "052af2aa-5395-46e7-9b94-59803c54bd76"}, "5ac6be57-04e8-4bcc-8769-b4474d22d4e8": {"doc_hash": "613f80c645f3979f5a0554819eca147481b77ac69df6db01d0bf60108d0953ad", "ref_doc_id": "905ce469-92bb-40f1-a955-1621093976db"}, "05d10f30-f512-477a-930d-0e9c9176e81f": {"doc_hash": "6df5fdf90f22f3e4b7405c0e39519bdde77df7e913c58369a60e09cb2e2a2eee", "ref_doc_id": "2e50f84f-9a91-4439-b7e4-8dbff5542353"}, "10d0c491-fd08-43dd-87c9-f6e674009989": {"doc_hash": "7c25dd84340d5ef10c30818fc5dd06097c564faf0f922610dd20b3a23e60728e", "ref_doc_id": "63962a8b-f476-4d81-a7c4-cf0f30360a9f"}, "047672e5-731a-43bb-adb0-3aa72fdbfe35": {"doc_hash": "370adba2e71080ebcb36e44a10b82fd457652a70f53794fbb477ec41a0cfbb66", "ref_doc_id": "5055891b-2c72-4103-92fe-f22e6eca43fa"}, "27c648fb-655b-40f9-8ac2-6bf292f02270": {"doc_hash": "9c9fba3abf765f9124e975f5b23517ab6c2d0a454b9bea56aa7129b12fd2f0bd", "ref_doc_id": "ae1ca833-5b2a-48f1-9c96-df305ce0761f"}, "7015c1d2-25c3-4578-ae61-9b903ab5e646": {"doc_hash": "070c2bbfc83de9f8cb529569012e554a184b8b76d9271d9bc3be14ba8e78be7e", "ref_doc_id": "60df65ee-b19d-4bde-97bb-5892b26d068c"}, "11484388-d5a0-4b12-a68c-0dfde986ab25": {"doc_hash": "34f717a536dc2d08aebed5713764cbcded4edd3923988544df6e12efba64e66d", "ref_doc_id": "0264f651-656a-4615-917d-00444ec82669"}, "4a4c4474-3d55-4b2a-a653-f82976bc1f5f": {"doc_hash": "b8cd72e2e620189ce08a1d02d740d49278b908b9d7410972cc2d3f3f96a84439", "ref_doc_id": "2c5eaf2b-bbb8-4e5c-80a6-1a574f31e2c5"}, "3e708d74-2759-4c0a-a491-95d33eb5da93": {"doc_hash": "fa40bca7c3689f065cdc520cb4b96fa33d8b71b5109da0ca581c0e9411ee5f1c", "ref_doc_id": "79460471-77a9-4bd8-a444-fa825801d025"}, "bb2c8b24-5e57-4491-bc7e-fa0823047a19": {"doc_hash": "ec2cbe75b7573cf0c5350c7eb6e86bc24720e05e900224384f8f5324944a4738", "ref_doc_id": "0a35a476-e537-43e0-adad-4a5edb2b8093"}, "e5872643-4c6d-4d8f-9e1e-2144be3bc43a": {"doc_hash": "2eb533ba0522aeb6c52ce9b4791ebf6398d010d1b1f0d5254b8979dcb66e249b", "ref_doc_id": "2a424303-79fc-4a97-9e41-bdd23e7db883"}, "b58ba513-897f-4cb0-8ba2-d0d5fdf06ae0": {"doc_hash": "f035e09bbe4e6f899b417cbe0421b65365a0f680c29a01f0c3b222634f0cf287", "ref_doc_id": "7aa4d61c-3e09-428e-9d70-7a71a89c2b04"}, "76724c1d-81ca-4053-b197-0ad41bd8d122": {"doc_hash": "eb84bca264698e9c264cd2aaa313730cccbff0b743bc4005620dd23fd72ac8e8", "ref_doc_id": "a69bc4e2-453f-4bdb-aef2-e302fb17d294"}, "0cafe233-7957-44f7-8d77-ab92d2662357": {"doc_hash": "59505292f0b1c85910e540e6fed16df80139293f33a2a03bc85b72923b4ff607", "ref_doc_id": "e4b4c74e-6e0a-4034-8901-68d17332a2eb"}, "31d1044c-5b11-4cc2-946e-8ab9d6122fd4": {"doc_hash": "c00eb17abe4c5e4cc16df7eaf0e164e6c92f7baba9f4f6ff3e97d057655d40e0", "ref_doc_id": "4c668fdf-c5ed-4b1b-8ed8-52b2eaaee6ac"}, "90b7da1d-1b92-41b2-9b51-23df481d4b55": {"doc_hash": "2a299eef7b07b3fb0ea23fdd37802847a8ec8eb70b6794deef01aa1a65bc61fe", "ref_doc_id": "4e9ca625-b668-4e94-b187-ca93a18447c6"}, "31ebbff9-d316-46d0-afe7-3970db5efd6e": {"doc_hash": "9f8d9fc2b7b0dd752d9cefdba7a90c96a8cf878b9f38620db4ecc6f5096be9c3", "ref_doc_id": "d285d5ad-40ed-49ab-9864-b40819b1981c"}, "34820f6d-d084-479d-b718-a4adca26bc74": {"doc_hash": "8271a36fbb7ccc22aa3aafc876a51993278bd166831e5caaffef150df15d7ab5", "ref_doc_id": "073a22ae-60a0-451c-98dd-9bdd8b7a8156"}, "9c757698-ca51-4b24-a6dd-ab7de988e720": {"doc_hash": "cb6cdedd00ed23e91af5bd01800478d7a93db1077c5eb0473dfa56135bcfa8e4", "ref_doc_id": "0a0a635d-6b7d-4fb1-a4ed-3843b408b404"}, "dda323a7-8d37-40af-a18f-a146e3c52296": {"doc_hash": "7e8c8438b2c3185eda53dd857b8c434b570ceaf32e36a91cf6544e2ad85960eb", "ref_doc_id": "1b1e1586-f125-4f61-afc7-0379a5d28367"}, "7a75976f-6b8f-4796-a4d9-2b82c91d0ef6": {"doc_hash": "3cef99e46b7a8716af042bfa7bc0154db530d25a582849fd9a22f20555875dc7", "ref_doc_id": "d6dd18ff-b84e-4916-b1e8-6c83141cfce9"}, "9b1e6aa1-0a5e-45b2-990a-3767b9ebcb2a": {"doc_hash": "7a97040a59b8c589fbdc02eda0e1f33473023ce272fc055fc68e1957d9fc1b97", "ref_doc_id": "581cee82-3c46-4d37-9aee-b6cd159b2b96"}, "682fac3a-ebb6-442c-b6e4-b8e40222d70d": {"doc_hash": "6dac01a056f36981779929d0368db56b6e62e6422111c85385ac4c50680d1ff8", "ref_doc_id": "07aabb45-12d1-409d-aa5d-b7b421f3b923"}, "f4a08316-4883-4992-899d-d7a00ed58e6f": {"doc_hash": "5bf47169fc68c367038274e08dbb0cebc50237823dbefc89e30afc077e311884", "ref_doc_id": "565f6fa4-651a-432f-9286-7fca2aa004cf"}, "461373ad-0013-4cab-a055-e89358be2f22": {"doc_hash": "6488303c8a3be84f862da201a60ac8f5f85fabd7ace89de7b60adab175f2c5f3", "ref_doc_id": "5dee41c3-6577-475c-afb2-d00ac21a4a48"}, "e2ed831f-6236-497b-adf0-32b711bcb2f9": {"doc_hash": "046331986976e631d5752107d0b0fb0f8e2b4f60b040507d2b5068ee7f076b0d", "ref_doc_id": "a3c315d2-479e-4d2b-a283-ca0083603216"}, "743b241d-c357-41d4-ad60-e0cde412e621": {"doc_hash": "1bf8903c0a2eb58d501e4f0a2d26ecb1f49231b7ba2e1886920680c326580135", "ref_doc_id": "ed469d87-4b9b-4f1f-acee-765d8bf3fd27"}, "5d2e9bcc-59b4-417e-9ba2-ff1f5fae12a2": {"doc_hash": "e0110d54ff02c7402155eb87f2962faef13fdfc6742692489baa8efc92223674", "ref_doc_id": "d6f38b78-c44c-40cc-9afd-614e65e7d41d"}, "6afa0756-ab1d-47fd-9bca-e3857740777f": {"doc_hash": "533e8c2c2f308f88f63ad5d0813dcfd71d98dbbb41a8f57866d9da67ff6a1353", "ref_doc_id": "c145279b-ba03-4dc1-8689-d6070f770dc4"}, "091be3ee-b3bf-4142-bbf6-424132c087cb": {"doc_hash": "da10e8675dd92917c89e3edb26d08443849baa4f54ddfdc1721b685892c8ce9e", "ref_doc_id": "41a28cd0-4fdd-4bc2-9210-2cafe372eca6"}, "9e12d429-067d-4a26-b968-4f2c5e78f8c5": {"doc_hash": "230916b77c9c119be1b84621074006686703fb61ccdd08ae950850d9d7e376a3", "ref_doc_id": "e6136cd3-b392-4153-ad6e-fac2ca5c2fb3"}, "d8ad9448-56f7-403b-be30-943f8df61390": {"doc_hash": "3323025b13a9b0cdde3ddc8ef543528602a504e3f9e1a9462929e6f60614750d", "ref_doc_id": "67a5d3cf-1105-4eb8-b5f4-a5563efed932"}, "63420e32-9f68-47cd-9ecc-38dbfef9b86f": {"doc_hash": "91987e2ff67264441e46eb0d8b7fef0f915e0ac6b0a876fca7ed5c05d45bb742", "ref_doc_id": "c5b2bd6e-865f-477c-8766-6542c8690d62"}, "f1aaa374-bd79-434a-8c6f-02c940f5497c": {"doc_hash": "6b0e8256aabef118194a43d929b53756a461d651fa4ac1215d9c3af135310c5c", "ref_doc_id": "8ac636a0-affd-42ec-8b08-ceab0b4c14c0"}, "0d9ff7d7-f52b-44c2-811c-1faeb8ab6022": {"doc_hash": "564328aa405a9b36e653a34adade468ba925888458a733b1627460c83b86b80e", "ref_doc_id": "35c2644a-ffaf-4ece-bd6b-ecf77b7ccf81"}, "3bfaa4ff-4bd8-4776-9360-b7c6cca9f8e3": {"doc_hash": "d9419e7b14f3acc37fe47b7175cb82f1fb2054b611180fe9db69b6397fea7a28", "ref_doc_id": "b26f278e-2eff-4f8a-98d6-307d16173817"}, "a71d4a66-1716-4c61-9aed-fa1f24ad1650": {"doc_hash": "b96d7cb6eefc1bf6056d99b8bc1cb92f3babde3f0b7f33fc4c2f8a23840d9330", "ref_doc_id": "64dda5d6-cadf-4a5a-b610-c1d8658f89f8"}, "65135e4f-bd2e-4299-af99-d4e5e83f5e46": {"doc_hash": "6e117e292df1415332efecd0de7579f65bab0444280a23fe3503ddf558c1a9c0", "ref_doc_id": "b5990a93-045d-47ae-9076-c97c67735600"}, "73f660a9-3ea9-4593-bbef-b4020d06402b": {"doc_hash": "d8bc78b8105997a2cf9ed259bdb2b633ebf25dfef791ef2c7deab347c30339fc", "ref_doc_id": "5203220a-1e78-4a62-8384-185b8b76059e"}, "cdc4c8b4-fa1e-4164-85e9-30a44f4360f2": {"doc_hash": "dd9efc07533096fba1ee6639e8ac0510a950f20be064a6c7c0dd6de580a1c37a", "ref_doc_id": "ba284af0-c255-44d2-a21a-48414107a053"}, "6a8115e9-0e95-4ff8-97a6-34c2f9afca5e": {"doc_hash": "dc8db9086c0847cb25c9b24320dc257d53fd647870b560eeef9f7f5947843e43", "ref_doc_id": "bb26a3ad-6012-4a46-b393-7670ad36c17c"}, "416edb93-e832-4f77-b8d7-f173aa813ab0": {"doc_hash": "6cd139c2537d053149ee2eff585f721cf5590839d95d3aa12eea850addcff33c", "ref_doc_id": "79555bcc-170e-4cd8-8680-c41f09ffc384"}, "4a54e826-5e67-436a-b3cd-83d21f083519": {"doc_hash": "bae5ebc7d851a3a9bb890dc41ae39fdbd34d11693890953d3ca2d0aa13fe278b", "ref_doc_id": "ff2ba6e2-967c-4349-9acf-37170def2760"}, "b3341a75-5bd1-44b1-9cb6-06a2446c7e4a": {"doc_hash": "dad5275a2cc96b73322cb0d291e3065578a3f67bac1855e6400cc01f2e5f1c6a", "ref_doc_id": "dce72285-1a6d-405f-9363-61c1481642cf"}, "3d15b653-0d02-4edd-8140-2c0f89dd2545": {"doc_hash": "966bb4683ec6068ac09d96099e107562c3377f2a08426dad5684040c0552e530", "ref_doc_id": "46c52590-eda5-4ad9-9c63-02ae02ca0e5c"}, "ef81490d-7546-4c53-8e9e-f2b89cf8990c": {"doc_hash": "3cc82af5d9d446de2145b39dfac2483514aae7b9e17fe484abd64fdc5c9dfe9b", "ref_doc_id": "03866b3c-fed3-4951-a3a6-b453b2292ca7"}, "d1798e97-1526-4a9a-9181-0a1aca3e0afc": {"doc_hash": "2858442711f3528dad4e7c4c8d1d4ecbbcf5c4cc7d6d2722e84d7147176bdebd", "ref_doc_id": "018f8ec3-ecec-463c-8bcc-099043b1e3da"}, "b89c24cf-a910-4fc9-826b-31e4d3b075d9": {"doc_hash": "0473e23c1b40ea195be49a25520e5717b9b94de65c430f534dbcc664384053f1", "ref_doc_id": "dece59b0-ef86-4aba-b0ee-806df11b6c4a"}, "39701ce0-7347-4b5e-9169-0a01d8265262": {"doc_hash": "977736eb5455657241bb0bbd8a7f1cde4d27df43bf852e5e2aeb1f48b44ef770", "ref_doc_id": "110d7cd3-ec3d-478a-81a2-5d9bbad657c6"}, "1782fe05-ecad-4094-b61f-000af3357b23": {"doc_hash": "e8523f9f7ca708a4303a64215979dd7ac21ff308b7f7d98219b35067aa25bd10", "ref_doc_id": "b875b66b-ebe6-4834-b41b-776f4cde11cc"}, "52410e16-f0e6-433f-b45a-9e9ded790aff": {"doc_hash": "bf34e56021b6eaf1ffc0816826585e53be1933d7366fb133cb481f5a33ceb30c", "ref_doc_id": "323d820c-5487-4191-a857-5e3cabf683a6"}, "037d6029-d27d-40c1-abaa-6e41d59f2f6f": {"doc_hash": "f499f01b7a6bd3c5a0082301b9f3971520d496a4c1fb2ba97eca4f147dee2358", "ref_doc_id": "f3d04ad5-a570-4c82-8d40-a511f5e14da4"}, "8cd5a304-b020-4cba-b2c3-f2fba6c8fca4": {"doc_hash": "f61d62f734e2834b86ec97559a0cbe104424f6cd2c51c6ffc3294a62505da3c6", "ref_doc_id": "51daf15e-87c3-41c1-a870-bf2e5b91b3a6"}, "94b3ba69-735a-4312-8dd1-9ff623bb53da": {"doc_hash": "c8bef97ecf9f9e68da24819b892e05a5ee4a0040cf9c2f9c2842fee0147bcbe2", "ref_doc_id": "237049c5-1043-4833-9b44-01e79a7752fc"}, "15640825-f9e0-4e16-8485-b3d9826cb7d0": {"doc_hash": "9e0d6615ae507d290f011c4f432932343420939a761c81698d39314b53dc3e70", "ref_doc_id": "cda1597b-c79b-43ae-970e-c1b1a29d4d36"}, "16013044-4bed-4ec6-87ff-2be7eeb1a34c": {"doc_hash": "adaf29b881fe7c151f51fc23610be6dc1c7937e0b6769572aca94007a54f28d5", "ref_doc_id": "f622e8db-10fb-4d4d-98c1-6557d43577af"}, "ac688a83-2f6f-4f06-b07f-db15fe8a0e76": {"doc_hash": "d674b51958d30d53abf0912f614b9cc60a165d8c7b00d452267144d745050a98", "ref_doc_id": "58045d84-1527-4bac-8fe3-711e25798563"}, "854a5ca2-7f12-4d0b-9c9f-8d8382bf211a": {"doc_hash": "733280be25b866d792f858d7cf56570135cda18e3f5273d2165128024f08b81f", "ref_doc_id": "33a0e446-dda9-47a5-9b47-89cf3d2c94f4"}, "827d182b-9cfd-49bf-9343-9f519f9f9135": {"doc_hash": "a257f9181327571cca02de86aaf0cc1f9fe80708ec5eb12fc86f8ccbef90b462", "ref_doc_id": "83e8486f-8d4c-430d-8c6f-ff6da7b8563d"}, "adda26c4-0053-4edf-85fb-4ad554d1d0af": {"doc_hash": "95becca5b2b97cf64513fee58203795cc09a18b3f1c8b616b4fad133f464254d", "ref_doc_id": "3653e14c-b5ee-426a-9f04-39002a70e11c"}, "9d086e90-f861-4d16-9115-787af7cb2108": {"doc_hash": "1291412bac72ed6edccf3bfb0e842428c6ced5c519cdec7d16a2ace5590f3c9d", "ref_doc_id": "10d526fc-5f8a-4604-adb5-aa1e81c104ca"}, "d91e2f3d-0320-4d3c-b134-c3094c55dbd2": {"doc_hash": "6ec8c8a425c2d232071e370a410357449b02ba51ec9bd3a9eddd5683e292ef1f", "ref_doc_id": "ea979bfb-9e89-44df-b6e1-53f937d842c2"}, "deb356be-ab6b-4a3a-b538-f2a68144bb08": {"doc_hash": "99cfdc91355e4e2ed9cbcf7c033e7af79bf643e4ce6362188a6027275fdbf340", "ref_doc_id": "da092379-d32d-47c8-b4bc-2ba3ab63e82d"}, "206a8b0a-24e9-4f3a-a7af-0d69eaae785b": {"doc_hash": "c26d5b111e302c6aeca846f2ef8f4737b9749c77da4db3ed5bfd46ea8901a399", "ref_doc_id": "91d5cfa1-adac-4387-8445-903880b3051c"}, "4cd7a675-a2f3-477b-be82-3c71586ba806": {"doc_hash": "910e6501b32b5de1543e288dcaf64b211f49695055e5acb3be421fde517e7bb0", "ref_doc_id": "e13bed65-5f39-4857-89f8-247ba90dd928"}, "929195e2-e68d-4967-be35-53558fd5dfec": {"doc_hash": "d644dd3b67112d309230fa24bf5687e923d887209d999916bccedd460e5421b1", "ref_doc_id": "5c4722a8-c476-43f5-8c3b-ddb80c2cfc2d"}, "54a68963-505c-4275-b78e-885ef370a0b1": {"doc_hash": "a880731422ed991b745a1c759452ba7d942f78c0659b7feecf4fa59c50d5db56", "ref_doc_id": "d48ff166-d02f-415b-ac6e-559fa0ed419d"}, "17d94fe8-b665-43a9-bc8e-ac899c48359f": {"doc_hash": "19337fdc35308792ccfea4d57ba267c48411aaee4a5773ca674ca6606501f6b7", "ref_doc_id": "63421a10-847b-40a2-b6cd-31092977dde9"}, "3789185f-a3b9-44a7-a1cb-fad2f711f610": {"doc_hash": "bda9d6a1e119c5ba4a2e2d58dbf5660bb562204dbafd9593245841e5bcadb818", "ref_doc_id": "f6d248d3-26f5-4ed4-a746-544bb604011f"}, "7121ee7c-4b8e-49dd-8d28-ddc5021663ba": {"doc_hash": "761a2af7029c4954a93ba3dc675acc4fe5e21b5b5a336b705e2f3e45f091db6f", "ref_doc_id": "7e36d3a8-b2ae-4181-9853-88acd5ee33f1"}, "9dd6a335-551c-4633-bfea-93160e4d2195": {"doc_hash": "96cdfc42c7c8100e3bfb560adb82775ce2163a4699c6290557009be1ff5d23f6", "ref_doc_id": "108accec-6f16-4c53-91fb-0cfd0617a5ad"}, "7afd90c5-1eb1-46a6-b532-13dcbf7195c3": {"doc_hash": "61cd04735587fb7e4050aae7f7f4217fc428f66d3b63cb6b092db2980a98f49d", "ref_doc_id": "4115e9de-9d3f-41b8-b0c7-9772417a7937"}, "7dc5611b-ea31-4986-a9d8-ed1361d68678": {"doc_hash": "a689208f77f251311425a466da5cbffb5d09cc087fac22ad64cf87588fd146c4", "ref_doc_id": "4013eb99-2f6c-482c-94cc-201b0d3f0f36"}, "a02f93c0-a7b1-483c-ad54-798e96400818": {"doc_hash": "51b52d3bbc2ed600eabe825e6e541c4ac23dddf9dcbd510a8728beb3d83f4916", "ref_doc_id": "d72fa25a-6b1e-42a1-8f95-59609a3bd4c4"}, "e55a0074-1a4b-43f1-a841-6a453ac0adf5": {"doc_hash": "f6070d27606a2aaea2d855c9375d530397e50124a95edb3c7831522d294118d0", "ref_doc_id": "1ecfec48-b677-4174-9163-ccf41958f4ad"}, "2b7e186a-5d93-44cc-9055-a539ccb86eb9": {"doc_hash": "e35a17d5b266aaa2bba06bd033a67388ccd61a4f6cbc0f3ac0f5f68fd4653d25", "ref_doc_id": "8bc4c6df-e26a-45e0-b716-f5840bdb0026"}, "3452765e-3c31-46af-afb2-1533943f21b1": {"doc_hash": "a90ac96a9da4ce8cc4ad58f01bdc1dec240554b8db16b16348a404de4c54d97d", "ref_doc_id": "4815ddd5-9b2b-4567-b51f-1eb5b2b3b08e"}, "bb54cb4e-0ddf-476f-b01d-ef541dc9f6c4": {"doc_hash": "36ddef62ec5eb43437fd6105f8e653faafb7b16d35eca33e09b77845f0d929e9", "ref_doc_id": "517aeb81-f7b2-4d55-9db9-72a0e1392b20"}, "83943f79-4a2d-4e99-b991-2cb11ad1b7dc": {"doc_hash": "212056db41051c12eb87f87f9c3dfaf38c4e079d67a7873aedad460c84bf8b2a", "ref_doc_id": "e8281121-c11f-4117-9015-f3d61ed4c34a"}, "8f43cf18-51f1-4d42-9cab-35b7c78c2ac7": {"doc_hash": "1a6e7d743c6660596bc1ccbf7c23f4f8fe0df3fc0a53bd12abde3f0f4bae896e", "ref_doc_id": "3333d5a7-a7e4-44b1-ba80-7bdeb8211b7c"}, "f0248b87-2f38-4da6-9518-9658c1fece1c": {"doc_hash": "b1b5c42aef3b057d91ddbfa82a70e5e3e477bfe823ad87e90f747a2408dc1b0f", "ref_doc_id": "bc591490-7b7b-46cf-969d-1b3055c8bfb4"}, "e23baac9-e0b9-479f-a549-2c482fb42a5d": {"doc_hash": "21163f802b6165c6320acb0c68c49a80d599b642925b35042216a24d402ce22f", "ref_doc_id": "01860972-165f-489b-a5c5-061120985f6a"}, "9964b2db-fbcd-4e63-99fc-6dc383aba127": {"doc_hash": "272aad2a96bab451120ecf6e562cce6ed080a482972d6aaee19cc4cd840c2b75", "ref_doc_id": "d1932d26-3812-448b-b37b-df2e8a170b45"}, "031bd496-482c-4c8d-9c03-8245724b3b38": {"doc_hash": "05a4b70e08e629271ab2532bd33655af9d25066b9b6aff790c304f7b60389ca9", "ref_doc_id": "d8f9d5e6-4351-4398-8adf-6d900e3fd7fa"}, "1bf12394-a6ac-485e-bba1-c28485c3cfe7": {"doc_hash": "3e1eb947dc2f560315bfce413fea56eed857a8cdded5eeddda096c2014723b37", "ref_doc_id": "bc32748e-2f0d-4cf3-b872-75e69914d3e8"}, "def4abdc-c96a-4f94-bee0-90a87266ba0a": {"doc_hash": "bd8824d019bedc7dc1000baaf2fb8b51a4ae791f87ed35c8765b94f7c140618a", "ref_doc_id": "5301b215-b001-4462-b1fe-183af2f4de3a"}, "98903f6a-e1d1-4b37-9600-65567b3eb89c": {"doc_hash": "1a9587031304a76b2ea5c279f31f6a87f3269e6aa651131d494feeb1b1779262", "ref_doc_id": "2041ffc7-aac5-4e33-aa45-7753982a9d51"}, "1f0b548e-a02d-41d0-89a9-bd9d7f3fd682": {"doc_hash": "70d4d217d9bf724ef1493f55a592f7531e43757ce5878a03afccec040fb48114", "ref_doc_id": "9afcf528-384f-4b17-b5d1-6cffe6ea6bd3"}, "a40a2f1e-21fc-43b1-9040-7754a2f3b131": {"doc_hash": "04bcd3f7d0adf1e1907b21a1c46a9ffd2d5b8305d3ead8c5f12b8cc3589a5f20", "ref_doc_id": "b3fc1138-a7de-41d7-944c-9479ed2a766e"}, "aa3abb29-990b-48e2-9669-17472934c93d": {"doc_hash": "977cf83263f5a75ac52d72f35ec476c0ee7b2707bf0a0da9ac191e0071a7e718", "ref_doc_id": "19a3cddd-b69d-4224-8dc3-77d5419f97cb"}, "0b157baf-77b4-43a0-9dba-265884c852a4": {"doc_hash": "cb8dfd90aef5d4cf0c6f9617c3a4b579f65dc4d353d676cd35b5ad6533d975f5", "ref_doc_id": "5af4028c-2f07-4ddc-ad0e-429067d7c9b9"}, "ed9aad23-364b-426b-8d55-8c0561cd18e7": {"doc_hash": "5eca735862a777670c34d669f4494147e484947cfda6e74e6d7656431d0043ac", "ref_doc_id": "eef4b660-1bcd-415b-86ff-197d2ae1142f"}, "aa0b7764-3808-47c1-89ba-20ef6d5acff8": {"doc_hash": "8af89425bbb7f367a25b351c9adfd351195800cc95b1c320a3a54daa26a30ab1", "ref_doc_id": "65cada6b-6362-4e3b-83b1-861a4eefe461"}, "a37745a2-28cd-46fa-b911-153710c31682": {"doc_hash": "94dde1f8a67319bd57ce7bac0a5590f245a8be4bf6acddf62f7b8fc312c6df8d", "ref_doc_id": "c559472b-2e87-428d-bc3e-7597c4454608"}, "9e7d944f-8da7-48a4-b6ec-e84c1a236c60": {"doc_hash": "e55413246f2c0b46c750fed9d299a7821f8e9b39a713c44fcb0cff45a6b69f62", "ref_doc_id": "6497b4f4-e01b-4ae6-9da0-134b510b77a5"}, "5083d0ef-e310-42a0-b0d9-561518b3eaf7": {"doc_hash": "0690e11b97a158dc783d899bec5005349cf4783e97904b707af42da3fb1d6f70", "ref_doc_id": "9813f3e9-cb06-4934-947d-d87edda5122f"}, "5aaac651-9c2c-4597-b187-872628595745": {"doc_hash": "ae9d9f3f33e11a6fdf65df6f16980f0b776c50205ec83514343fcc72913180c0", "ref_doc_id": "3ddf4d6c-e3fb-4fba-8c30-3fe894a68d2b"}, "8f4e13a5-025b-4fce-b50a-2d388e0eabf2": {"doc_hash": "82c7709b9460afaad61094b20f78da76331cef76fb0d8d2a577005ab9376ac3e", "ref_doc_id": "dcf177a1-50e4-4102-add4-50c616ac2c99"}, "ce978c82-ff62-42e7-a210-848313406b86": {"doc_hash": "c0a46a13ba264c11e9cd82fffd25a264fc92392a6fcd079fd75ec59738f7cecc", "ref_doc_id": "b8e96488-bb9f-4877-90b2-1acae4c81228"}, "a9a9da3c-a213-4a4e-ba11-a29801257c7b": {"doc_hash": "65dde86f81b0693c83f0639838b34735e2b313a94c357131e97c6fa48fa31b6e", "ref_doc_id": "10729b2b-a139-430e-998a-80635752c27e"}, "efd01070-d37d-47a1-931f-c8e8a77e5692": {"doc_hash": "4b778382e717d6d978db344a6dd49ede27dba88924932dcae29663e1fd4bb4dc", "ref_doc_id": "0d3f265c-0c64-4d8d-8400-4795d86fca9b"}, "4db3f962-b80c-4a70-bcc4-accef7c5de4f": {"doc_hash": "2d4e63b4234dfae4e2dcf31dec7ce0ddee60edfd8e6d2cbc114d4c796b062be5", "ref_doc_id": "ae7d2d18-26f7-4185-99d1-09a2ef51a338"}, "2ca616ce-ffac-4351-9015-59e8f3f8980b": {"doc_hash": "641c5e7ff796c325c1d6670c1511671a3c78b462fa69ade02c5375e82f345444", "ref_doc_id": "19cc4910-a4a8-440a-a755-239d81760fd1"}, "1a5cba9d-4077-463c-ae88-f226f63cc4c1": {"doc_hash": "fe1fc3b480f80ea1152f1aaebd45dfe55c4eeb29595ceeaebf643aabbad0980d", "ref_doc_id": "d2345f86-05c0-400f-82d9-fa39af657042"}, "fe54b985-75e2-4908-a635-ef36258fe453": {"doc_hash": "1d2b8123bbad275f9596935f2c1d3cbbe76f5da06852e6945b956d1c288b1abe", "ref_doc_id": "a9ed3e69-0b6e-4e6e-88d7-299f022888e1"}, "63793ccb-a9db-4760-8c20-dd25af0afb13": {"doc_hash": "767b37d654af6dca1888e0dc3dd43f2ba97cbc59e30658ef4ad82d68cb0e0564", "ref_doc_id": "c1d54729-4153-4549-b2b9-8eb18b3f02b9"}, "d5787a04-728c-46f0-b221-fd36c2131a9a": {"doc_hash": "139627fa6950878d7e67a4582a38ce47f805cd605b32ae735d8fdb031f041915", "ref_doc_id": "9458737c-0f0e-469d-bcea-2798109337eb"}, "7279d589-4bfc-4ce1-b7f5-8d6be7026370": {"doc_hash": "c167dd31ee24628d9098d5f3ccce8598229b816627b48d33f5b5b798e06bbabe", "ref_doc_id": "9e1b1421-1975-4f26-b926-23ade368dda2"}, "eba5058b-1d87-430f-8d0c-dd88b9f71f1e": {"doc_hash": "0f4f72f11f346614c314e0c4b5c3540a773a63f840da1b64d42d5a2b05da1f32", "ref_doc_id": "4b56867f-bf3b-4c7d-8bbe-20a19fe43243"}, "0f58556b-2f25-4cc0-b0a7-62072016738c": {"doc_hash": "484fae226b9944d929f3be90dedb1a36770b42f2605a5fa88bb9d72818005896", "ref_doc_id": "da9d5d86-48b0-49a2-88fd-70a53be8d565"}, "ec9ed378-df60-4b70-baa1-4f0e586b2662": {"doc_hash": "e8b2b77503c1ed207701dc12e4b17cbd6085a4116bdf257f903f6877e6d18111", "ref_doc_id": "26910b55-aa06-4da6-b829-a77fd035d517"}, "249cb330-3f72-432e-bce7-5bdd2e59a2bd": {"doc_hash": "65fc97bf47e735790ac03702ac19dd793313b2807555fe9b807ce57b37467fac", "ref_doc_id": "a142d709-6fdc-444e-94c0-f2213e0f59f6"}, "835f3bb8-087a-43c2-8981-767a444eb25d": {"doc_hash": "9a986586506eb325056049795f4ba2b02bb4be969b71687fa6c8ddeb7090bc24", "ref_doc_id": "16646532-c8ef-4726-a9d6-4f9155c08986"}, "68111e1b-f77b-4ba6-b461-0ee2ff5215e5": {"doc_hash": "f48bdfd8044504b02c8fd088300cf6ec8b7dd60b639c66d24f3ceb111b382b59", "ref_doc_id": "c48001d3-1653-405f-a21f-3b93fc025d96"}, "d3a440c5-3af9-4c1a-8831-08274f04c25c": {"doc_hash": "67de700bbc321651eff347d9511dba2f94edd09a7c7370a80c51784682e75634", "ref_doc_id": "159e1f98-9ea7-49da-801b-4ae5028ce89f"}, "7c135e93-c602-4db3-99fd-438a65a71a83": {"doc_hash": "90f280fb0dd107b8ea73b4b5970b0e53c8fbf02a2ae80bd602813d8a1197b083", "ref_doc_id": "6881ea90-7077-4357-a901-df4361968cc2"}, "108c682a-73b8-4468-b458-79213beae740": {"doc_hash": "0d59f80318384afaad2ca358287e57a2bd25e0973b7fd14ef4543d31a178bee1", "ref_doc_id": "2435f0f8-f5f0-442b-b1c2-8da18b5b33dd"}, "ded54989-e7d9-456f-adeb-ce9b082e2115": {"doc_hash": "116427f3938bd8d59a3b82e0872ccadd28644ef0d7699f90aeff9553bcc0abc0", "ref_doc_id": "d37d7220-a050-48e2-816f-5fa7aa46f342"}, "27407ba2-109a-4d98-aa9a-7140a8fd9c0d": {"doc_hash": "ba0ac1b9d82d57e614b13b62c971bbcf2abe077e2d7b48311548aa2b16f37699", "ref_doc_id": "15782b06-5ff9-4a48-952e-0addcbd1b912"}, "f2228ea2-912b-443b-87ae-16d703a114d6": {"doc_hash": "d6fd4979062553dc72ec78198c6033ebea23c30efe60b218c6bcad62aa1c06aa", "ref_doc_id": "8168d032-fdd7-4b99-a39b-ffa2afe2a5bb"}, "80f9d850-8ec0-46b5-b4ad-8df23f5f8133": {"doc_hash": "1aedf84a411464b062edf3c30927ca03978ec9fb99c04f99a34351e2ccda6713", "ref_doc_id": "43597e43-cfe8-4e5e-b2ea-5baa95b2a0f7"}, "5ac98ee6-84e7-4ac2-ba82-3d42a07efb62": {"doc_hash": "c28f1a2402414ccd7b729decc490bca6a8b44de69efa3c2e47042b95312ec7aa", "ref_doc_id": "93b9c1c5-b1d9-480d-bddf-4831a93cd2a7"}, "cd97d70f-8002-49db-a2db-8e0687d46e7a": {"doc_hash": "82b16726e8d1e4962d436c01efb9563cc9124faf714dae191b95adde6efdfd88", "ref_doc_id": "3986fde8-d903-4a14-8056-cfe33e452cba"}, "72618787-33d6-4c8a-8201-98ef58e77c1c": {"doc_hash": "4ddaad4e72aaabdc401dfc3c50fb08becc6a1341771cb7b488467c69c88458dc", "ref_doc_id": "abb25073-cd6b-4285-b4c6-669c9a2ee06b"}, "8ad1ccc3-af7b-41f7-9ff8-76b184ac0162": {"doc_hash": "b8df395c4d0ea3a1123746c8a576d69b5f5ed723fd31c1e259c7642525dcbe12", "ref_doc_id": "f91eed8a-fdf9-4df0-a1b4-8ca4f602780a"}, "f0c430a1-ffe3-4edc-91e9-82f46cacadc6": {"doc_hash": "d8b4ce2adcfcc2d59d5bbd92cff3065900823b2925ce7b7db77a988eedbcac5c", "ref_doc_id": "ad3ceefa-1a91-40f6-9834-cebc42547b76"}, "6079ff8b-dfff-4bce-91d8-f6a76f6c5deb": {"doc_hash": "81b3e5527daea44ab9a1e1e59a2b8dd6de26d7a1943efc90bd2b0225eb58d19b", "ref_doc_id": "9369680e-5f35-488a-9d0f-8346c054c7aa"}, "4d02f1aa-16f7-4910-9131-66ed773a772d": {"doc_hash": "173e241df946b3c9688987e779d43ed6aa33015e2cd0ee953d94ab74758db2c8", "ref_doc_id": "3f9ca530-b9c6-41b8-b347-0a9394467fbc"}, "321705b9-7014-4628-b0b0-d31d79f57078": {"doc_hash": "477df9c65fb954b7ed1828c9213e58726692254cb57f0c46af3e88c37c96278e", "ref_doc_id": "758e5edd-187c-415d-9408-078cb2349960"}, "3053d496-c607-4fe2-94e8-08fd6f736ce1": {"doc_hash": "7451be4402d4f17144e73c4bd81d1910078c23e963edc833fb474021ddb08dca", "ref_doc_id": "8b8092dd-b6c3-4ac2-a878-fba5b499fd1d"}, "e6ad0444-ea8a-4da5-8941-a3362ae09818": {"doc_hash": "b05aeb4fd24057589e3d8b66e0a7424f2536fdebe09fcff29dbca14ae83a1d4e", "ref_doc_id": "c7a11c9c-9f8c-421c-a080-55ce33d33d25"}, "61bf6468-b8d4-43eb-b0d7-6f45b523b6d7": {"doc_hash": "af510a0a4fef9cbf78f93da9b126c95e183c5c64bf25a0e64af8d68a6799874a", "ref_doc_id": "889cd5dc-9090-4e65-b17d-9c5ac8c95733"}, "2d65353c-b922-4c43-a418-fb640bb3ec21": {"doc_hash": "113c0c5be05161c985e28971eab8e3053cd0a415d07db486e1bd9a14d4b12764", "ref_doc_id": "370785f7-98b7-4135-8c1c-c0a7b6b08831"}, "27ffe949-4c47-4137-8c4d-7d8c33c8bdf4": {"doc_hash": "75a1d6b0cb417452f0a0a0daac6b3439ac55e3355046b5c194546354e86d6825", "ref_doc_id": "2f76dde9-f6f2-4fc9-a1fb-d7eda5976711"}, "331f30b8-a679-4340-9271-864f45dcdda6": {"doc_hash": "ec4e40fe4df0d64c7d7ce0d3aca854e57c42c7ba6a8b3265ee71e2b8b2a6430c", "ref_doc_id": "f2a293eb-782a-4c23-adb8-bdaa1fc239e2"}, "85e848a9-7da3-440a-abe9-458a4c7682d8": {"doc_hash": "84186a36a5532ca0ef6cc4ad766b23cf0421313852f307697fdab9c7daeb1f7e", "ref_doc_id": "55d7d7a5-df40-4b07-82f1-bea72fde5715"}, "5cf21112-e887-4568-8030-0858b007ce30": {"doc_hash": "ba797cef1c5538d3dae9c64f572942abd50a3e32b4b77cfbf2548f2783d7697b", "ref_doc_id": "ed8a4230-ea99-4466-a53f-cc58706ccf72"}, "e91f7031-6ee6-41bf-af29-0d966671b43a": {"doc_hash": "f4b0f12254c6ca80f12b0664d961526293a3561c0a05774a557818a6bac15175", "ref_doc_id": "1d341cfd-fcf9-406e-af1f-fc04de798b59"}, "567253c2-1975-4ee0-8fcb-82a6cae8f112": {"doc_hash": "287f88850eb926df619d8b7a799f28ecc3fbac3d657fa62b92c1163fa030ffaa", "ref_doc_id": "2b42418c-01ff-4b46-aef9-166ea7e7d5c3"}, "66aea261-9950-42d0-ab48-095e355e5184": {"doc_hash": "46f28268364321b5d110ea0575de3b7beede6f2dffb418037de715e134f6212e", "ref_doc_id": "a7a94fea-ef59-4a13-95e4-c04e7c6e2076"}, "998a32cd-1cb1-485b-9216-682e31a8acf1": {"doc_hash": "39008704db81ac39b03292c697c6b4081be819e6ee5940685a437baeae4abba8", "ref_doc_id": "04daa350-43f6-4096-b2b8-84737a0322e7"}, "8e6be289-721d-4da3-90c7-6a0d21979d37": {"doc_hash": "c786b62ff72201e620380572b2bb4d9a85969f0814bbbc1959eecde293d88cb4", "ref_doc_id": "025b35af-060b-4805-ae71-7307b2f611ac"}, "ad0007b1-97a1-48a4-841b-85fb92bfae5f": {"doc_hash": "70ee8c58bfcee3eda79a7012834917a63af2ddb5a10ea193c5a5d2679c46ab1d", "ref_doc_id": "6b26081e-3f1c-4b0d-b17c-5bcfc05ea427"}, "57fe7e36-8fa3-41de-b860-6aa16035e370": {"doc_hash": "069d86f576bb59e1998522f9463f7481971c5689787035e2eb9d3687fc74ffc2", "ref_doc_id": "34e16a2e-e2b0-4af1-ab79-ffcf138a3011"}, "f5a3951c-d70d-44b6-b1c7-227d77e113c6": {"doc_hash": "0eaa52c9f160d6f5f2ed7125bdaaec648fc7bbaf131ce6d2dbf458f2ef78f545", "ref_doc_id": "7b9337fc-3ebc-4659-9456-630f5e050f8d"}, "77a05354-927b-43d1-bae5-8eb4e85e7d2e": {"doc_hash": "41536114c7d3e3462bd23d9a38f67de027c151d7cb1be8401af056f778ce6fe6", "ref_doc_id": "bb45a8c0-1ae8-4ffb-8b03-52c6d539e5a8"}, "13d1cc46-c947-4c38-aa07-056a39e651a8": {"doc_hash": "7829f05ee48d12099e72e34454ee10e9efa630fbf3ab71cd3ba4012f6db0ad0e", "ref_doc_id": "dadc8972-4a78-4eab-a29c-dcfe03395c79"}, "b03da278-5577-4ede-ac0a-14db75846ea0": {"doc_hash": "2fd26ee8579c1ffd3e543141f2783d21651c0194152a024ca86229d7bdaa380c", "ref_doc_id": "d5db09f8-3b98-4834-982f-e6e8b65acfbb"}, "b40a9cbb-2d9d-4faa-b7f2-022306004e9c": {"doc_hash": "01d6d3b152689aa3c0aa81b719909d3bb21ba6b6f254f6dd53ddfbcae4a5fb2e", "ref_doc_id": "84d77eb5-683c-4857-b34b-c184f2f8c4c3"}, "d623090a-56ac-408d-a5b5-c0905b4142b2": {"doc_hash": "f194b6819bfe82955aaed96a706db9c87084bc49270432bb5cdca33b31a71ed3", "ref_doc_id": "56a6db1e-9c32-4d6b-af81-310b55a26aae"}, "420e9713-7ce7-4e3a-b8c2-06815b657d26": {"doc_hash": "15d8b8290097b8b11dded2ce2a88442f7ddbddbcbf71acfa8d4f30a738374e1f", "ref_doc_id": "c4d55d9b-0b56-4766-ac1f-959856f3e1ae"}, "86d84a26-9d33-4cd5-b1ef-27043c2ff185": {"doc_hash": "39fb8e05844bf06da0b59eb3fae84d5d872092aa244cf9d116c55153c62c1a61", "ref_doc_id": "ef4b1ce3-8b25-47bd-973f-ec0145ff078f"}, "4f58e685-1bd5-4078-90bf-e50349e1d038": {"doc_hash": "154c682ebafbb61c1427c8ce31b1ecb7d7546c828a0cd86d745e9422771c9d91", "ref_doc_id": "5e02453c-5bdd-49ef-b999-783ee23e976f"}, "532b0dea-9c45-481e-8450-cf19df965d2a": {"doc_hash": "67d6eb1a50a7d055beef3bd32f3a5affb6007caa3f26e5e8e25ee9ea4c430bfb", "ref_doc_id": "81f74d8c-edce-4444-b5fa-17ef4bacc9e7"}, "bcb5f70a-2368-422c-b5a8-c384976175e9": {"doc_hash": "1b603ea3684eadcb05bf1424265dbd0191b07a09d04b7b69133a0977ed6c443f", "ref_doc_id": "7f8732ba-f0d8-44b3-b267-2ebf834b5173"}, "44b4deaa-6828-49d4-a738-8692d884d71d": {"doc_hash": "8a817aa8952c90e558312f8641931e5877d3ee8a1c747c42e0fec027d967e62f", "ref_doc_id": "f0d1a831-b5c0-4790-bbf5-0af750aff8f9"}, "b9728bf8-e487-4a3f-b579-629daab85a31": {"doc_hash": "d823c29b77e75bf53075d3b0f37ff5163a20d0cca4629bea6140eaeffda1a5ac", "ref_doc_id": "8b9fea36-38fe-4b72-908c-43ecfd8e5939"}, "25ab635e-ac75-435f-b3d5-e7f53be5f7d4": {"doc_hash": "76e28ef4cc0d11e5f8cc84cdf1479a727d67ff99c8a1c7aa1d21a9cfcc4220e2", "ref_doc_id": "bb262049-039a-4759-a52c-85ad39e9bf45"}, "b38e36e4-3af5-410c-b7d1-84f1ec242269": {"doc_hash": "e4b774a0fd4754ede19f0be3b66cf587a2bd7429c713a43009f9ed72d00d3418", "ref_doc_id": "eeeba120-aa3a-4c63-806a-33a2f08d6794"}, "f9fefa79-2ca1-407c-9359-120b8f8f1322": {"doc_hash": "c28fa3b038f978965e442e491745c00ca890f5a532c269a293c8b82ba603ca1a", "ref_doc_id": "170995b1-f029-4565-8de0-05e5b9c6ac00"}, "c38f149a-2812-4f48-94fa-e0bde46f6908": {"doc_hash": "64e19e1af57d1b07fe2d31f9da96891f20cdef475574ac0f89aed8cc67ecaeba", "ref_doc_id": "a79977bc-b150-4958-be80-78950ced4b59"}, "720a7da9-6076-4db8-8ea6-deb1ef715523": {"doc_hash": "8c6a986a991cb7e3b45aa64951dc3d938d79e69da8c4e15ede59e1779650257b", "ref_doc_id": "ccb32679-d893-4cc9-b5ec-033554de4b70"}, "951a4fd0-f5ea-43b7-b1ca-d05ae176342d": {"doc_hash": "44060e99af97ee78f8ee664ffb833ef76401ecfe0e36d9aea60d2a569128514e", "ref_doc_id": "867a46cd-14e1-4363-91fc-d70614f8eb2a"}, "cc6385de-97bd-4cb0-942f-7499c95e7dad": {"doc_hash": "3dd5d6860a5b589458f37e72a335177ce4ff4d45bdedd85c4790a8d4fe317bd6", "ref_doc_id": "87169bae-a25d-4717-a9be-dbe35e25c8a3"}, "936e1c85-2c3e-497f-acff-0bb1853cf994": {"doc_hash": "c0c9110577a6ef6aa0220dd4b41fbc8cf7a6e9184c258659051189d71f68b122", "ref_doc_id": "d6f21654-3c29-4f42-8415-1d16289fd63d"}, "b920ae24-cf4b-415a-a802-322e337b6429": {"doc_hash": "8e68bc703f0bafc9ec792fef112ba62966890b60a0fd8735377795b4b82524d9", "ref_doc_id": "1fce4eea-82bd-4a92-9934-0a77b61133a5"}, "4b8516a5-5c4e-47f1-a208-bf6603cf38f0": {"doc_hash": "f51f2a448a31207952f5ad6631667e06f55da4d1db27667c693862b865681948", "ref_doc_id": "454ad110-dcb4-4211-9fc3-a8557ceaed01"}, "76397a0b-8032-48f9-b022-5c4af1a96670": {"doc_hash": "005f22cb0b452fb91c30a90087b0deb064fcfdf9d14b15168ce40eaf4baa8fa8", "ref_doc_id": "351aa71f-bdd1-4452-b692-f1c7e0b67a00"}, "42d5a687-df79-418d-81a5-8a23a3867182": {"doc_hash": "c3368767d874005f3ebd45594c8e822a39b6a156ef4603f559ff3167661a7ba4", "ref_doc_id": "10a55ca1-b5c7-4b19-b96a-c70e29826cf4"}, "a7024aa7-9410-4ee6-b820-10645ff20815": {"doc_hash": "43a985b052b9add57dee4d27cf77e5f476d811acd2e790df4dfbe8f6428287c5", "ref_doc_id": "90784f8a-b074-4135-9ac9-29da240c9f3b"}, "3d78fc5c-a36c-40e3-a6d4-b6231d6d6942": {"doc_hash": "d0ff70068e70e62e079dde95f7a4b40066be2c329c027987ba612e9e5d89dd8c", "ref_doc_id": "b355de7d-aefd-467a-9aea-7109ee1624d3"}, "5b240d69-0f5a-4bec-b3ed-e1315ccf9586": {"doc_hash": "f5e88e87fd040db5f8ae5d69eb276a1de8af071dc00dd01e952a5859f23dbd92", "ref_doc_id": "270c9221-8ba3-409b-b4c0-5fbcd1abd59c"}, "bbc83638-a25a-489a-a240-bd117513e90b": {"doc_hash": "5a7f179042b08f1e2f87df6cb1b04161b88ae93094b12faeee44de9aa749b83d", "ref_doc_id": "642cd54d-9ac8-4260-8e6a-e4e67a5a45c1"}, "ff75d4f2-74fe-42e8-b665-893fdfbe4670": {"doc_hash": "ed4ff7d0a3320ef6d5bed7d3137538a2365d49c8f6b99241eee48377fb8218bc", "ref_doc_id": "fee739f0-25b2-41a9-bb08-c3e0d61d92a6"}, "0bb07de6-a81e-4ed1-ab7d-985c1b23a0aa": {"doc_hash": "851287ce577378f33768b4c6dda122a4b0320e88984fef50e5fc480ff6692cf6", "ref_doc_id": "5a55874c-63ee-4b63-a0cb-ada5a1ac4428"}, "49d28b2e-0821-441f-9486-99e7e7082fc6": {"doc_hash": "afeb851cd7cbbc24147f619b5f83b6de89fbd307e188d8e10669ae5fb3c95457", "ref_doc_id": "9e05084a-48f5-4b8f-86c6-7a611894a8e8"}, "bc13754c-61b9-493f-b96a-dc838a29f894": {"doc_hash": "6f2f0fa3ba8ddf90ec3316e271d1e6329db73d3bc169baa48e161d9dd6206820", "ref_doc_id": "2308e06f-0282-43a0-86ea-72c45cc04c45"}, "6951bdca-2746-4e02-9876-d50b0b960190": {"doc_hash": "70695682bdb8ec95c8d8442eee825a84adbc4ee22535c6da02c9da13604177fe", "ref_doc_id": "294f5bab-f416-4e7d-b314-be0ff1e042e6"}, "77a32342-501c-419b-a75e-cfc60cac1384": {"doc_hash": "df8ae7a8771de620ae9c95c0fcef1a8c545c043aa313a2660083494bd20e2cd0", "ref_doc_id": "5efe42d4-9337-4c4e-a794-20c759bf8204"}, "69e16a5f-25cb-4de5-bad8-c6f55edce4f9": {"doc_hash": "0ba55c962c4838d9979ee8e5e03aca9976beea54c85b3c5ad1e0a8f1149b3c34", "ref_doc_id": "2eb7fd83-07ad-4e7e-98c6-6d9cc2930630"}, "37cbd83d-ef88-44cb-a0b9-31f06924031e": {"doc_hash": "c2260a1e888d08f7846a675c548b446cc25836c8bf215e4d139ec319d98a0687", "ref_doc_id": "540a7c8c-3359-45a3-ba93-d62ab6670116"}, "f4efa6f3-b105-4004-94d8-648a9fc67e86": {"doc_hash": "c0f2ae9291dc785cf86f86427412c7b68fc630601b251e3d6e3f7ae46b160cc8", "ref_doc_id": "6f8ed505-4a7c-47a3-b447-5e3848b8e830"}, "c1858b87-da6d-4ff9-b6ee-76bf2b258528": {"doc_hash": "9cd1bb58ca493282b795b27a8c4e3f46b8a55e4e33e3fb2be4b90cfa71963f83", "ref_doc_id": "d04a66d6-b7e9-470b-bfe3-a0004e269f4b"}, "6c8087b3-e61a-4408-a8cd-060eb0ad0681": {"doc_hash": "aa193e3aec233cfbacc0ca9dfab11a7ab309025fbf2d6396b38d49c45496f50f", "ref_doc_id": "a26a072a-e716-4be4-ada9-161492540f98"}, "8daa420a-f48b-4ecd-9c60-451bdbdf4aec": {"doc_hash": "5d3c7f22718f2d24d96a6e3d4d3be0dd754351fdf26ad02c27a582c4fe260363", "ref_doc_id": "40764a95-80c7-4e80-b313-df2ae0f1f01d"}, "dce03b6a-5735-4761-b726-94af4216cf76": {"doc_hash": "50b9c4d0851a54d0acb162227ea32cc6f8d9955b063c31102b18329d27d9f8b4", "ref_doc_id": "2ad09026-2543-4b73-abb0-6f0345c5a3f0"}, "abc8eb1f-5fb4-4809-9b0d-17825d30894f": {"doc_hash": "792c35afecf747732493efc7a91f54346cb3c908a35dbb03481722ce7f32497f", "ref_doc_id": "843855e2-700a-4c20-9eba-c68410037e6c"}, "d0cce357-f836-4093-a37c-a9fcd518f649": {"doc_hash": "adc6613122c59c8b71f378439854d2806e6410b06099b01f945b14b18cb755e8", "ref_doc_id": "993aeedb-94e7-4792-8b1f-ca64fe71b5af"}, "53b83fa1-fe8e-417b-a529-fe4748d907c9": {"doc_hash": "8bc6456e83288b32cb9a479f155462dcce436bb2dec3cbb860c6a1210021461d", "ref_doc_id": "e600a8c5-57f8-4c3b-833d-a3f7164c8bf5"}, "480c8fca-316e-4c46-bf8b-5e3f5e717c22": {"doc_hash": "64d4370969a6fd0bc7ec7b7e02a2e7ae3a1eda697dfcc371103d669a215eaaa1", "ref_doc_id": "6aefcbde-b3d0-44c2-a3c2-02c8b4d8d91c"}, "1bbeb388-01ad-44f3-acf2-369747198c45": {"doc_hash": "6db7c608b0ab799e2557b5d5c9e9d4dd984ea60a66d72ad704ca28dc80df60a2", "ref_doc_id": "951b1218-579c-4be5-981e-272b7bad7db7"}, "c08aaabf-4abd-466a-b7e6-b5f1bfc2124e": {"doc_hash": "85303c0490e0477f70b7da67da9d17bddcca7a124973517121c0de767d2c7ed7", "ref_doc_id": "59c3732a-95df-4169-acaf-c59fad353b37"}, "f93042bd-2c4a-43e9-bf51-9f62b87dd0ff": {"doc_hash": "db977f7fb34c0c3358a3f919c8f616aecea8b6b94f06a5c5310995138ea0ff77", "ref_doc_id": "343cd142-4f29-4a92-b05a-91f5913820ce"}, "d985c5fb-43fd-4713-9070-a8f2aeeb79aa": {"doc_hash": "c8da26887f907293f5c39879f5878f4a65df0096e4e319be70104bcaddd6c755", "ref_doc_id": "0d04d272-9099-4ffd-a076-30ca8ddd3cda"}, "c48c0f0d-c7b7-4ba6-90cf-0414ec759279": {"doc_hash": "ec74bf645cb49ad07c9b92301a22b5c77ef815a54ae917ce15e194fbe0bd465a", "ref_doc_id": "c3d1d5f6-03c0-473c-928e-58d74ec0d193"}, "de43675a-513c-4e3f-a2ea-be377273e083": {"doc_hash": "6016ff5d6b11eb21ee0cce29fd031239d1c43add08df3a197e965c920791fe5d", "ref_doc_id": "7d6b4382-e6b3-423e-b614-058f39db9754"}, "5d76cf17-c4eb-4919-ac56-bb0e21a5fe08": {"doc_hash": "6b6a83b5559ef71d090ee47beb00f3ade930106a314bd22c8b573c93571f171d", "ref_doc_id": "0813ba98-e715-43a1-87d3-12dc99996a6a"}, "722f3815-30a2-4d43-86d2-70f929a3af29": {"doc_hash": "90f497488caef0de0c19a263c1f2a4dbab36f17dca7fc125f82cdb9029ce456a", "ref_doc_id": "c17cba82-fdcf-42cc-bd32-28973fec44ab"}, "941def26-af38-4503-875d-d1b1c739d2a6": {"doc_hash": "d14b4f3374c0150efcba9fa25e7f870e8ef2b8269961534c059f57e765bfa279", "ref_doc_id": "a4e80fbf-a641-4394-b76c-5baaa3567f9e"}, "48c7b9d6-112f-433d-8fe4-f7f25c13711b": {"doc_hash": "c294dc7ff0018b32a6a303e8a9c1e05a1213e9e77c26e7d7dc0002b58ffcd34d", "ref_doc_id": "4afcd299-6eea-48de-b3db-0747e4248ee4"}, "4011f973-40c9-4fc3-92d7-331650cb0f1b": {"doc_hash": "901cde2a526a187e3e5e40f0ffb5bfdb85e3476b77f04c798f37995935259c1c", "ref_doc_id": "df0dc31f-34a3-44ed-a28d-dd1308b86de7"}, "cda301fa-a34c-4631-a998-960d9ae503fb": {"doc_hash": "d30dc9d7ef0cd8412f995354abc8a504f4269f1b435a8bb9d9438e053a2a220a", "ref_doc_id": "3c916744-f3c3-470a-870f-29129777ced4"}, "2831ce2a-05c2-4e3e-aa10-f9b656ab5abe": {"doc_hash": "d0321cbcf421a1e963408c3136b6669c79e2ca03fdc03c110155b3ebebd5d708", "ref_doc_id": "9d16f2b0-8037-4ada-8b47-38900155cd86"}, "5c8975fc-4bb7-4837-bbeb-9d95fbaa2451": {"doc_hash": "7602a7ecaf88c7331ef42bd7d4b7087fe22130c4a696396cb8a870c968a88836", "ref_doc_id": "16207582-c809-4102-9dea-820fb6055a2f"}, "6eddefbe-aa5e-476b-8d6c-d203c24ae1cb": {"doc_hash": "fe02f1d4d6877c1a19a810ed825c6230c62206cd60b5d414fb6a77422f4289d9", "ref_doc_id": "16d3cd0c-56d0-4784-96fc-5312d8e81934"}, "b6345458-1e34-4f60-861c-6d1dee6c01eb": {"doc_hash": "92b4e6172cbab8892cd029cf5628ab4dae0c583b001f0d4ceffe97a292c82fff", "ref_doc_id": "0ae92e79-39c0-458e-b53b-0853a70456ec"}, "4d2362ad-1d81-4962-8cde-abd8020d0733": {"doc_hash": "2e6144c6569d5163826e6614fc1e4f0b38603a8539086caa376355a3ce473ec5", "ref_doc_id": "f41310d6-7946-4155-a0bf-976309109cf0"}, "69003810-39d4-4ab9-adc2-737825ddccd2": {"doc_hash": "2ff24269b1546523b115ab4bde653e4e9e615887e596ff1244f0e195bae92651", "ref_doc_id": "33446fa5-defd-4156-9121-b09e5250fc3d"}, "9ed78069-36e8-4c70-8653-f66d81102966": {"doc_hash": "a94b95c1588231d6cb06607f3c4d8095978a24318a01daa9fe24052eea7c8e2f", "ref_doc_id": "a00087eb-6758-4019-b62e-5f306a4ac6bd"}, "2607b256-6a7b-44e7-b656-300c94633cf4": {"doc_hash": "f2568311467384e78f68f023589c541c258139a2c1c6d3a4e520a7efbb3143ea", "ref_doc_id": "c560e609-4c8b-4ff9-9b91-c0c7fdc003fe"}, "9271593a-3c48-458f-aa97-557f66be2325": {"doc_hash": "84b8aff87f430a481b44d05fc8c27519dc577de276a79186ee7509585955b239", "ref_doc_id": "89e35911-5734-4e84-a756-47c137f0e6c6"}, "51243320-c090-455c-8df9-a00ac2b2f3ee": {"doc_hash": "1c109497e75daa6c4b3919e4094ebb6d125913b1c99d4168e44de3cd27696ef0", "ref_doc_id": "44f49278-3598-40d6-ba46-8a68a34ffbd7"}, "49211604-c82c-475a-9707-792a6d36e36d": {"doc_hash": "84dde9febcc5453053f0f24500251de50714906e41134f395a2ba67ddfd30d48", "ref_doc_id": "4d4c0c77-bf81-44f4-bf3e-5cbb656360a9"}, "fdece64e-9947-442f-bdf7-0ac71abd0e72": {"doc_hash": "e407e765452df6bfc22030fbfcfcbd1012fffe1f1bc585e6208a0fe434e72b9c", "ref_doc_id": "10ccc054-1a10-427a-8018-5e762ce0abaa"}, "a1cf2b02-c148-48b0-97bb-2696f8be61ab": {"doc_hash": "1e6f579c87b2d8522cea34ddebc22be60dc067dce7fc87681314cebd0837dcad", "ref_doc_id": "34bb6a88-b7be-43aa-88ec-0a2d59832487"}, "90ccb634-9b7c-47a5-afd2-ba8cb27bb42f": {"doc_hash": "d13302889d91a25139346ff060b15a176ddc2b0f061e3a876caf62003bf83cf7", "ref_doc_id": "1512e8d2-7b8f-4d72-8cb6-4de1b6471276"}, "c9ebae01-ac67-4dbc-81d4-af5b63502aec": {"doc_hash": "5833b434f98de4336bc56ddb1c4c14f39fb6cd5527fb9697d30b69f2a03e3fc5", "ref_doc_id": "4cc44e54-30e5-4414-be87-dc3dad1e7f04"}, "10177115-ef35-4bd5-a545-8ae0ba1379c6": {"doc_hash": "9c3c47e4b88c82c309a20900eaf8ae352778191eacdb55b66cd280a256d66361", "ref_doc_id": "94fa673c-c35a-4c4b-8f0c-d438fc2a2ba0"}, "26d21766-c1b6-4b86-bf56-e04eb1712bc5": {"doc_hash": "b84ecfe78ab8d519921f990a08d4af43712fce78c431665ff9e03e87456e8605", "ref_doc_id": "8baa1f8b-715a-4b8f-94a8-05c9587abe44"}, "33e96c0e-f8fb-4067-92b5-ee77cd7c53a4": {"doc_hash": "f5f36d56684fdd3e43a7d9f5e1817882deaf8e6eea37aee77fc3661583e400d4", "ref_doc_id": "1d75198f-372c-4b0e-8cc6-2cf9088c675a"}, "0fdeaf95-5a43-41d0-ba67-832c127578f4": {"doc_hash": "e678198c3f7edf17859faf3c8e2eedf0c60890a70f1eb9a0a72d6bfcfa871eb0", "ref_doc_id": "b6712f88-c3d8-45d7-ab1e-d836c23ac4c4"}, "ee72daf3-5277-48c1-bc86-bd136139f504": {"doc_hash": "9a8cfccfdc6faf6995d12305f3d4c1168eba8a07a76cc9b2addde5e1b4a38ba7", "ref_doc_id": "1394664c-11d0-46b1-9a5a-a2edf0d93051"}, "953064b0-7768-4f8a-9ecb-ed83d0024ba9": {"doc_hash": "aca3766fab5ac765c8c19b8ceed8ffd2a8dd5ab84c37066b4577dcd7fc301378", "ref_doc_id": "11b8c5d0-58c7-4100-99f8-600acfb8e955"}, "2e4d8eb4-d9eb-47f7-a9d8-f918b0d0f044": {"doc_hash": "05e452a73a4292c14de5dcb38773cff4d954742ad0971d16cc697b17101043e7", "ref_doc_id": "26071537-5165-4d2b-bc60-b09088365ecc"}, "7aabe7c5-12c5-4659-beaf-e3169f7c4a66": {"doc_hash": "d0f18b1cf15b077afbdb328ef8dc2444f250748d786b4035362b9d047d1bfcdd", "ref_doc_id": "24de856e-631a-428b-9398-e7a5cc725bc1"}, "f5827238-94af-43e6-915b-912fde09b870": {"doc_hash": "90c0270186721c9bf6d305e0981fe8fc836703723d5c5ea99377a5ff9ae92d14", "ref_doc_id": "82c78b69-9b2e-45ba-9d0e-da5e42592138"}, "fbb92792-9372-42f6-bef0-3a31ac3ba565": {"doc_hash": "6af2346003028e83a23e34d7738cec1dfc8139962383230ba670abbd55b5e4e3", "ref_doc_id": "c0e6c853-a4f2-4fbb-8fea-7c38ac6788ba"}, "9d11723a-6c79-4bdf-88fe-e1d73b32d904": {"doc_hash": "4b04bf6ebfbc2afe1174c1a9e483e6cd6da3a74e384fc3d2ef0ee999f4de9cb4", "ref_doc_id": "0159e441-da03-44a3-a510-08985a659182"}, "448a37a5-e551-42ad-97f6-661564978a73": {"doc_hash": "8e685c6123b1cad7a3f183755688682ad05e8243b38ba4cfa4444092cdb17a87", "ref_doc_id": "717e5f72-53a7-408d-a3ae-fc5b674b3c5a"}, "feb466da-7d75-4350-b39b-79c5aee0c9c7": {"doc_hash": "6323f97b1cc828f06104a458805620e0b1bbc7d4d45bc5d181dccc9781d0d4c2", "ref_doc_id": "30307e36-2c2c-4ea4-9cd1-6184fbb00acf"}, "5aae2267-789e-4657-bd74-fb13797d96bf": {"doc_hash": "00b2d21c8cd1d38cc9caa8a236d9d050e1852d4496d59d4e40e2ebb2841716c8", "ref_doc_id": "775e96f5-0592-46c7-a0c3-795e928ecfcc"}, "17939725-6432-44b4-af69-018a8733eda3": {"doc_hash": "8d54453e99f320f169f14ea8ec238bb165332014c11c49f9b5aa6b14f7d5f461", "ref_doc_id": "6d4097c7-b1fc-43c7-af49-89d817af2bc7"}, "2edf6bc5-284f-484f-8141-6f88b8c052ba": {"doc_hash": "3fe4b6a64fdd0e660a43cf244c0ec18bf66108d28a09e797bbf90e628cf0b7c4", "ref_doc_id": "3c0d953e-7217-4326-9c0c-d2fab55efbda"}, "4e2aa77a-84f7-464e-9b99-1d471571828a": {"doc_hash": "6a1ceee1bff1f45ba9603ffd3469cb10d87b6d0721bcaa71b78a4d3ff32a97a1", "ref_doc_id": "0eb644d8-d73b-4d17-8822-d28b151ed9b0"}, "bc9696ac-fc0b-4f11-b64a-997232c041f5": {"doc_hash": "edec33dc3cd312412bbc9e1d002869d2d3a2dba1b798856c25950f35a617d7da", "ref_doc_id": "be019133-cb45-4b6e-8da0-fa5b37d79dcb"}, "accf81fc-3eee-403b-952a-13328b973e52": {"doc_hash": "26e0a13f4aefc37606c9e18f1fd2bf140cb3b477e40e3791eeb675419ab8c34c", "ref_doc_id": "4eade037-4592-4204-9191-cd2996007fdb"}, "ed2e1b16-e1bc-4747-a0fc-20301e3c3f4a": {"doc_hash": "886596f70776a636f5712daa35e64df229bda2ccda878ce6075a02ee28550261", "ref_doc_id": "9958a76d-45b9-44c5-a5df-8c17aee15ffe"}, "bd4181f8-0300-4b2e-bae6-e5caf1967de1": {"doc_hash": "df6a4acb0db6233c439d87bd95359d0830e31d53a28d50073a3534dfa655995d", "ref_doc_id": "9c44ee0b-903f-414e-afed-b996eafdb5ad"}, "26a8b1d6-533e-4be7-9c9f-0ec99e730828": {"doc_hash": "3a25f22ac2b2d692c6ea91907070a9f18199759bb60b3205e8fea8451a0e0c2e", "ref_doc_id": "5dfcdcf2-40e9-4d6f-8c2a-c07f8c3c72c4"}, "f4a973a8-1aae-4725-9a76-1f389726c80e": {"doc_hash": "f3745661c9360eea1a79f31098c048477cb7076c8ff1cf9aeeb64bee94fc9d50", "ref_doc_id": "e3a68f3c-8dfc-4868-b72c-5f66d7695afd"}, "3f991e64-d8c8-41cd-8573-c3372afeae7f": {"doc_hash": "407d1211277ad57f6827f58a75a8c22f0d6e2a6b9f3b0a1b4816b5012cef4730", "ref_doc_id": "ed176568-a807-4b1f-a151-d3c73299a01a"}, "d1ac9c80-c1e6-4bb5-a36e-20a63c7079e1": {"doc_hash": "403c7cd9da53e19334a1753edabc829474f7a7e5a32c1fa5edd1bfe58b640ca7", "ref_doc_id": "9218787c-fb29-47e4-bec9-45e305275191"}, "3f28fc44-8ba8-4f9c-a0f2-edde1be5c16e": {"doc_hash": "652af53e3ab2b2cefb0595dfc023e7b7403ad44a6ce2fd4743f6cac226f64240", "ref_doc_id": "15bd502c-ab68-45ec-ad6f-65ab5106d56c"}, "daea46d6-01a5-4686-ae91-6b3cfc463733": {"doc_hash": "3b03d410b8359d8bc92fa12953b1ea5142c3df14e3308ecfe21f71d4b190f71e", "ref_doc_id": "2630c9e4-f8e4-4a93-9b7a-03f4e04b73c2"}, "de80cacb-1bcf-4349-acdf-98b741db0066": {"doc_hash": "b5abf602647e0e28080379a0621345839bd64476716f07192336abe079160095", "ref_doc_id": "e7736e3f-cb0b-44f9-b775-8f59f9173e5c"}, "c5acc1c9-6094-4aa5-a355-87a51e6563dc": {"doc_hash": "eeb19e21622570711b8df13613d78b50b99b3d96cf430f397d0ba0fbdeaf125e", "ref_doc_id": "e88052ab-082e-4d00-9c2c-1cd130aeeaf7"}, "c334fe97-50b8-40c8-9123-fddeb97a2bfe": {"doc_hash": "2b78a4c10247a6f3af27e0af46e2c03ea9dec31e3e23ac975028226eb834a5e8", "ref_doc_id": "393c1ba6-92d2-46d1-86d2-1bd3178fcf85"}, "5bad450f-d63e-4af0-a8ae-b1e21596634f": {"doc_hash": "69ca62fac42f5224ff55a94f39b4b057609e1fcb10de8156c065e50935d502f1", "ref_doc_id": "292715b5-8b0d-4b77-9470-65776f1104e3"}, "723166fa-3be5-4ff2-be1b-dbedcc7d2c53": {"doc_hash": "67a15b4133cb91b4bd4cf797dab72e38adb83c382b800bbc8ef7aa2089c45437", "ref_doc_id": "bacd6d88-3582-4e1f-9093-d142274fbe41"}, "ece17e58-86b8-4aa4-9daa-b0cb1711d693": {"doc_hash": "169e087c7892f3c1a94571ee5c49cd646998316990e1bd63c46f001f50b9abcc", "ref_doc_id": "9240973c-ad34-4e57-91a9-49db4196d176"}, "957de0d6-9e96-4f29-bc9e-a8bfa8139df4": {"doc_hash": "94237b6a8083b18e0987a1e1e5eab202cf604e962cd3112a8028468034426e55", "ref_doc_id": "8e9f712b-059a-4146-a231-29bbf41a4f00"}, "0f1c85f2-63b4-46ca-a3a1-5b9a72cfd8a1": {"doc_hash": "3af8514b0025398a69726e10fbc2a61fe860f9a60d5e4d13ebb18a8d55862b72", "ref_doc_id": "68899b06-97fe-4c22-9f44-482b8eea1e51"}, "597db7ad-3034-43fe-b038-2cf518c87645": {"doc_hash": "b7edcd33153ba9f7f47b9da141b964c339f390a2e455a8fee5d91dd1b999702c", "ref_doc_id": "dba355d1-c99f-4f48-a736-eef544e03545"}, "5f70cb97-368f-4373-8420-c69ed32ce5c4": {"doc_hash": "12f261d8cdec6d434258274ffc027b199bbb313f050c937b1182f9a4752d1d70", "ref_doc_id": "f9a90a67-302e-4f6a-bd7f-ab320dedb9f5"}, "a3ac708f-b072-412c-93f3-9c8102818279": {"doc_hash": "a8b1c95afb36881d5ca1e4f4062a0118479aa337d93451faadf2614dd422ff6a", "ref_doc_id": "b90dd89d-678a-4d3f-970a-2aa19f1b092c"}, "c326b73a-88c3-46eb-8828-02dcf50b4e4d": {"doc_hash": "f7e9419d504026e277aafb83610dbb924d2b1211c26f00d5e0adae9084c8367f", "ref_doc_id": "bc175609-d4a4-41aa-9484-06e8641a3da3"}, "d6747a6a-f760-450a-9384-1fe29650acf2": {"doc_hash": "e7d93d733b7fbbea4bc0542746b33a046e2dc2868764929fd88938ca846cc6c2", "ref_doc_id": "d829e738-f39d-4553-b87f-df0413bbffb1"}, "0d765a74-8920-415e-91cf-61a0e76a8edf": {"doc_hash": "a717271b171fb4b22176e72e7a5020c2ad6f46ca4717a7be93408be7be082b03", "ref_doc_id": "7fa4371f-2b40-403e-b039-85dde34a5837"}, "1e89acc8-f392-4418-ad81-8f3810dfd91d": {"doc_hash": "19499e4ee1e902bb4e1f135398630dd192ca897ef02c256943fd01e615e1396f", "ref_doc_id": "e5de85e4-b1fd-4309-b277-1f0d2a7b5adb"}, "9ff0e6c3-ec54-489c-ad32-be8fa1325734": {"doc_hash": "abab507bf58fa913866a10474ac7dbe1cab8dd3c4af66ac179d32bc24fc68adc", "ref_doc_id": "0d492ade-6404-4674-afc0-4160e6fc7e0c"}, "11263a86-3cc4-43ad-b9f6-b8153692ba2a": {"doc_hash": "9c1591ded44c22d5db9101b71a80c981711f007227487918c422c6de59a6d4d3", "ref_doc_id": "ad516506-5eee-40f7-abf1-96c02c264181"}, "4746b9d4-dc81-4e0e-843e-d288ff41348c": {"doc_hash": "e49909125d4f9f25b04c1d32bff6976eebd0460bff44078faee6a52b2f7e5a7a", "ref_doc_id": "60bc2e17-b710-420e-b7a5-3fd3ed68b966"}, "d1c3a35d-ae14-4922-aa1b-7980e76c40f5": {"doc_hash": "22b96e2f60fc0da5c54833cf0fe9bbd6e5d01d9b3140f909f093e004e6141955", "ref_doc_id": "726445d1-879e-4677-a365-f20187a11ea9"}, "aae84ef8-545c-469d-a456-d53c9e434f29": {"doc_hash": "8c2a36f56d99aba62398367509afe2a1131ec4664ca8090e60418384e462651b", "ref_doc_id": "89f2efdd-e8d2-408a-b9e3-c372094b90c1"}, "28ecb96e-1821-4aa4-b9aa-e35ecd312f76": {"doc_hash": "bb7012b30da1da1fb527814c1eefec9cad70f6b3a346d41194086fa0c4ae6170", "ref_doc_id": "1eb8faa1-39cb-4078-9e78-116e63b6abac"}, "0cee2b18-62a8-47d7-b312-7a367b1b5bab": {"doc_hash": "13f64bce1e037b303987c3b892fda567703d4715f15b15fa0f2bf69ed7dfa6ab", "ref_doc_id": "7a9c110e-30c5-46ca-a75d-9ce90e923bea"}, "73831f2e-de8a-4933-b8b8-e422f3d17069": {"doc_hash": "864b14002eb9bdf4c933e9d3a6754de9cf8a1e10fd2a3b0f85309934f2562165", "ref_doc_id": "61abcff5-00b3-47bd-b611-d19531c351af"}, "1073ff4c-b7ee-4e39-9145-8d31d8ba1dd0": {"doc_hash": "b24480691faa7bcb3471135f8a24379183cb0a0055f6b5be2c5a2101848126fb", "ref_doc_id": "ef7d1853-bf95-4bd5-b443-c41ad5ac2531"}, "3032f990-3c98-4376-94c4-fa895f49abef": {"doc_hash": "5d02a63780fe27bc0b053334da71be18186029e8a5e5819db9b0ec5ecc431e19", "ref_doc_id": "0f72a4d2-a252-4cb9-b7d7-32153b3554cd"}, "dcc1e3c2-bb31-483b-90f0-56a280ff46d5": {"doc_hash": "cb85ef396eac2b78b81031d17ffebe0d229c0247e6c7c7cc49fb60baa9a72f98", "ref_doc_id": "91c6c0b4-c0d9-48f9-a727-b66345b78cc2"}, "566a08c9-8d38-4895-8f38-03de70882c35": {"doc_hash": "eb5b631d6c06c6d2d0b7f56286bf4890938b3c22aab936240056654a1f3ca18d", "ref_doc_id": "fa37bda2-f6a5-4996-a99f-6a3a2109009d"}, "7f4c852d-3793-4495-8840-a27a1df1e6f1": {"doc_hash": "0be0ca9426f39ff5d340d61529e7b498d7e493f84e5c2d5dfa78a93f35469175", "ref_doc_id": "1b7dbc2b-26cd-4cbf-bc1c-5ace4d71e6d3"}, "e01499fd-4376-4d72-834f-53855bbbf403": {"doc_hash": "103559e6490fe94155bd65c95b5ee20b8e0197fddd1efd57f9061545025f1585", "ref_doc_id": "dbb3076a-1d3d-4627-9d2b-84d9a78ef5dd"}, "5af44d8e-0fc9-4021-bfeb-0becdf31dc67": {"doc_hash": "584aa6e78464b78073d78df96c4fc008c5f5fc7cae100b191be3678b8c3f9421", "ref_doc_id": "57f1a7b8-d174-470e-ac9c-d966627835f2"}, "246fe17b-b690-40db-9554-2b51a6b0be0a": {"doc_hash": "d1ecd1d612a1f0d3377c05701ad5a7299da1e9cf7458310b147d4a8a68317408", "ref_doc_id": "f8aea7c8-cf21-4609-b220-0fa58b4ded2d"}, "83c56ff5-55c0-4c47-99cd-6287b5edc21a": {"doc_hash": "0e3eaa47fab7fa73374d9784486b69809ce50b3fc7e02babd944b972da622945", "ref_doc_id": "72971b7d-cf58-4874-bf99-c709bc6365b0"}, "4ecd6c14-c628-4b7c-8900-2fab1b272d7f": {"doc_hash": "9f7efa8ce4615b70319dcd9ef725cc30b0201dfeb61f04d5b1517b0ec0c091ef", "ref_doc_id": "03a016bb-2874-494e-b961-cedccdb46160"}, "c15129fb-3237-46fc-aae2-0604c0954f35": {"doc_hash": "a37934312abc7d5e9747be7152b109408e9ab0830a9b393bb9b4980a69acfe78", "ref_doc_id": "efb04f9a-f016-45e6-a329-4a53d332a417"}, "966c5a6a-e341-4a71-8042-fbc9949928b7": {"doc_hash": "676622f8baabeb42ad8dd5dd9588ba2cdfbd33ce3ab9ae84768acb77809bacf3", "ref_doc_id": "27229a91-2e58-4518-ba8e-96ec5296bb60"}, "dac66998-887e-4681-9fc3-07ec3ad4a866": {"doc_hash": "07e2f5716518b8ec62dbad094b8320724fb32d81a0a68e24f030dc58e96e42d6", "ref_doc_id": "c2016448-1964-4221-a16a-7164170c50e0"}, "66041ea0-b424-4bbb-94b4-813884503118": {"doc_hash": "f22b854311d7f829166dd9f2f89c57131c0939e005afa271c715284d768e4800", "ref_doc_id": "4fb73506-e504-4ef6-9ebb-209d6d6e4e67"}, "01f8f556-e964-4947-bc8b-89524c3f82ad": {"doc_hash": "8feac1be3db96b61e1bfd455104e006a0a98026fa021f3e8cc083982489a5e87", "ref_doc_id": "20ab5adb-fbb9-4c3f-a3e9-8bc3b146a444"}, "a87c4aba-b28a-4bcd-b1ad-fccc4ff2009d": {"doc_hash": "4b87d0387ea31f23c3f00ef9d6dee3eb9bee9d4f9990c4c80d902ec1a85bfccd", "ref_doc_id": "b11a67a6-22fe-4810-83c8-e7055b044f8b"}, "7e0f7295-7d2b-4a11-be02-956aa9872c26": {"doc_hash": "3f018afd8f01895a3723c2a8360793204f2b1ba69ac67e67a36000d8df700424", "ref_doc_id": "5b83efbb-b597-47c3-9e73-dea1b9c140ea"}, "cf5eaca9-b384-4147-8e21-af4f96911ebb": {"doc_hash": "905094d4f64810672cebe3fc73ef1565b7f5a2b0521989aa8264807d047a95ef", "ref_doc_id": "312a0ba3-2636-49cd-8f74-147c0b737526"}, "958ca296-479c-4728-8ddc-21cdb0687966": {"doc_hash": "a1ff7453beb9e1b9721e5cff37f84b3d350583cd47f762fa887ebd84bdbe2832", "ref_doc_id": "7ce190cf-fbec-4c1f-bd87-7598b9135d4e"}, "e5d271b6-7b51-4591-a895-b38a8a5438c5": {"doc_hash": "62f4bcd91e87bd26984619005e07f8d1f8ee5742add82473653762c5386e8d7e", "ref_doc_id": "27de5341-77b5-4507-a0b0-7d55aad02307"}, "dfbe26cf-2957-4d0c-835e-b5dee8462dcf": {"doc_hash": "38509855b36cfea0e9b4edeabbdcf3fb655ba8542ed6b2eb3a26643507f95327", "ref_doc_id": "16aa8a06-916c-44ae-a82a-ca93ecaad650"}, "23a9789d-e004-4a3e-9558-f1b8465e8596": {"doc_hash": "42e71434c9fb047c3778e91188bb77f9ce3c9d19f1ee8175199eeffa0d8969d4", "ref_doc_id": "381ccfae-363f-44d6-bcd1-bfd2c18c58ef"}, "19a2a328-9fc9-4775-b1d7-7369cde9a6e1": {"doc_hash": "55d7ff2738bc24479f5dd0f5e41cc1baec66e7ec5eb7f736fac468674b5a1846", "ref_doc_id": "10e414d4-5721-4363-8589-5cebe57d41aa"}, "1428cd47-1143-4ba7-94a7-55fc9843ecdd": {"doc_hash": "b6ad06bb85285feceb5359ae014e309dcc654f68caa6bc35604890915f9306d2", "ref_doc_id": "71ed852d-8c02-4e42-aa6d-62ddfc0759b0"}, "27f4ff16-7b26-4623-9ea7-14750830704c": {"doc_hash": "07ee87c36a7e58a6a56cf62fa59bd08c3830157c0dd9ca79e9fc86ea643c7e30", "ref_doc_id": "15b9b00a-e699-47e2-a05c-bc5cdb7382f4"}, "441ff464-d5ca-45f9-8d24-df208320f0d6": {"doc_hash": "541a23de423544683d6cf3069a52c8d4bf2bee459b35f70fbac19d19af20f584", "ref_doc_id": "b5c06862-7ceb-47b0-896b-fb287a4b9aeb"}, "198e4a4d-4852-4138-84f0-cf895f47d3e9": {"doc_hash": "79b4a7f65b8dadf29fc78ffda5d624a701f170d2032ecf295184417ed0957917", "ref_doc_id": "f4731075-6b5c-401f-81e6-b221ca4e5582"}, "483f114a-8dd7-4a08-ae51-b4fdf73cfa7b": {"doc_hash": "d3271b22bf25eec320c049f02534e0e411b28119517582389e8f760473f53dca", "ref_doc_id": "338f2b27-782f-44ba-a55c-b486572fe93f"}, "eebd701c-a79c-41c2-9b5c-701b18d75300": {"doc_hash": "68d3a8c3dfd9abdb34829e203ca4fab081cce8c3b8b5a32f116d04bf6fb47f88", "ref_doc_id": "ddbcb631-dc2d-483a-abae-bff3d5d6a4cf"}, "c7ed935e-ea1a-4e20-a7f3-b68899650ea2": {"doc_hash": "5af32dab5ea631d2a4ebe918bb893621e39d3697a45e3530a616ece561206621", "ref_doc_id": "cc5b5ce0-c3ea-4d42-89b2-0b31bb859903"}, "68591237-dbc5-4b74-a449-bf1ffdf841f7": {"doc_hash": "0ec941cf4ba2186a3ff9245afa02a35851a24fbf495be357829d36534b3035ea", "ref_doc_id": "820a4896-88f4-49f2-abce-3b9433c39365"}, "7ff0caff-8857-46b3-8578-32e050614d09": {"doc_hash": "f8255780e8c0627097f2de7d09b36955dab6b2f88a60346a5d165f7de050d5ad", "ref_doc_id": "6a18345d-a554-40e4-9fc7-526e9354b2a8"}, "a9b20b38-ed37-4220-b3af-75f5c2f2c423": {"doc_hash": "14c5518c31c2d8156dbdfb27dd3f1ba09e20535ebc8a3c6cbc83d4add50ba098", "ref_doc_id": "8d6afc77-a292-418f-af4e-358d9d8ed358"}, "95163fc5-e261-4871-91f7-3b7e7e2b076e": {"doc_hash": "3a52444a191f0397d5b082e17bdbcf1e7cbe7ed3f02d1880c908fc5de61895fc", "ref_doc_id": "e5c520a0-6806-477c-bbae-37598c6df915"}, "60ea1ec0-65bb-48be-a025-a8fc53de8bf7": {"doc_hash": "a25d06959e5102068346d8965678eb174b0b0a8d9ee2c863c71875a94770b413", "ref_doc_id": "fb1ed94e-bce4-44af-a6db-f8fd5ca28eb7"}, "755bfad9-cf6a-49b7-b56d-a263b2f1a80b": {"doc_hash": "731c3810d6dcb80a186544e2a3aa2d2ad685f2affb8dc4587f95967d090e7c83", "ref_doc_id": "72a9260c-df08-4e16-bf0a-0774b8fe1a71"}, "a8b809e3-7406-4efd-b55f-1db94c2b35c9": {"doc_hash": "011c91a1131e960564b3d28812c56001a754da39e296f369112dc47b59a775fe", "ref_doc_id": "f73ea96e-60eb-4892-a798-f980f0bff6e3"}, "fbc870d0-435a-46de-b179-7972d167def0": {"doc_hash": "3bc804291d96be2cea1232b1d00b4eee90ec0d069049bf58bb3e754b050c7a8d", "ref_doc_id": "32e77581-79ec-4b01-8f43-00a6c2c3fdf5"}, "32c05704-c22d-4cf3-bb9c-2213e31e4c56": {"doc_hash": "1b782b506f3354c33b228fdc483bc0d755b790bc77628a241b3449d29b6b6421", "ref_doc_id": "9c95c66f-e9d9-4abe-a60f-746bc1dd4935"}, "6de4a3cb-45b9-4c17-862c-fec05ff3e598": {"doc_hash": "c0402a0d092efedc36e9e4474ef6fefa3fb2af4e7cf579cbe1a35d1dd22d0c14", "ref_doc_id": "26519c46-edb3-43e4-8d90-422165aca48b"}, "514c2513-80da-445a-a961-c7e2e4366df5": {"doc_hash": "05ad246e69b333b2b0c9f1d51cc6398d6f56c6f92bad9858e3ac9ed74965262d", "ref_doc_id": "1f2ce779-93a8-4fef-bda8-a19d94d54243"}, "dbeacf70-54f0-4f85-8719-776e9d37c26f": {"doc_hash": "c31dad0f50e8b878f92de294e8e86b432bd7e969886c901de353b22eab101726", "ref_doc_id": "0043885e-1378-413e-a548-74b9c628ab46"}, "cbd12b7b-4ae2-474f-a1d8-f14df54e761f": {"doc_hash": "6d14976f73dd247ac27b12b29b640cd860b8bdb842932edf60adc4d167621e5c", "ref_doc_id": "30b6e3dd-42d5-4dd6-b589-a9bd6cf3f22d"}, "7dae93f3-3689-43ce-b10f-cf06f0883442": {"doc_hash": "b04760300da6cc001376bd91385ab6e884e7a577e70f069ea61b5284e98a9508", "ref_doc_id": "dcd5f10b-f226-478a-999d-995891868203"}, "a8c0473a-c9bd-4e0f-80d3-fd3fc5e5e98a": {"doc_hash": "1eb0e6037bb436ebdcfa7f4055cb1d2617d796e8df8e4b1e41e98b2ee721da5c", "ref_doc_id": "c9af7c98-eb43-4db1-a38a-54ec4eee41be"}, "7199e7b8-d4f8-4085-ab63-2ed30da36b4b": {"doc_hash": "feb128ce8e358d5c8e1bfcdcb2515bf9c077f8e34951a388827b49dcc75721e9", "ref_doc_id": "892d3aef-c9d1-48a5-b57a-6cd4fa5d9863"}, "eb5deb60-bbbe-4aaf-a373-5d661ea68066": {"doc_hash": "939cfa48769c600fabd2799b0d41bbbda5ddaeaaf1eb7b5adae5e5250340fb77", "ref_doc_id": "22614239-561d-4fc5-87f1-eaf86076eaa0"}, "cebf494d-d667-42f5-b307-dcea5d9e1467": {"doc_hash": "4ad5f986b2e1f7233817022cea8204d99d0ee50cd314fd467abb417478b8e212", "ref_doc_id": "e2c03cea-a62a-42cb-8d60-71e789622c3b"}, "7d17c0bb-ae64-4748-ab3d-ad68cbd9ae9d": {"doc_hash": "40d6455b34babe3cdbc18b4d383bd1d3a5a81c1558e6e120f879155bfe090219", "ref_doc_id": "ae234c2e-fdaa-4e9b-8038-94ac4f4fda69"}, "f71e9082-cc7d-4414-af8e-0436fcae90b3": {"doc_hash": "f40964887645ac53bf6ac77a428a867c264e33b9127fc01ce65ade0343b94715", "ref_doc_id": "08c73780-3134-4bd9-8c40-9eb443ab6e3a"}, "6482065d-76af-4436-969e-46004997fe12": {"doc_hash": "6c5a8116ac9959dba202a6b50004d7072d4a64fcbd27f68ab7b4c0ec417a0318", "ref_doc_id": "488eaf08-9f55-4810-936a-97a96649a9b2"}, "884d2608-6749-4ad4-a3f1-ff82cda1515e": {"doc_hash": "dad6f336fa7465f3af4ba5d260b1b903189144df87f6d0f384511277443007d8", "ref_doc_id": "cfe6b720-02c2-4214-9f7c-9d2cf7f4385d"}, "0f29a414-81f9-471a-8d9e-0c4f5606e921": {"doc_hash": "45c9fc39bc6d3d0efdd07f69571df269163813a16ef3abf9bf5c8ce37b4346f1", "ref_doc_id": "26e2b798-f0e9-4d1a-ba92-98746ab879bf"}, "c87de3f5-811e-4c7d-a187-74d4d75c1f14": {"doc_hash": "144941c113edbd1d1efb04bdd853d5d1ca4f2b5dec6c141afb913de283d1770f", "ref_doc_id": "02f8a7ae-d6aa-4d97-a9a2-857a233b311c"}, "8c9e82ff-8a00-4156-a48a-b5144ffa5e7a": {"doc_hash": "14208d237675e4af993aefaa7bacc20a22ce8438d9e9e172edf47d45842e0498", "ref_doc_id": "987c6423-77f3-4b64-816f-83f743c91633"}, "aab40873-3a23-4bc0-b0a3-f0c4dd38094a": {"doc_hash": "f0f1dd5a1241d9c0bb64be678402f1647398880c45cbcc0dd0777c436562688a", "ref_doc_id": "aafdec8f-fddc-4cca-ae80-543e93b3bec5"}, "b3b21193-ce4f-4e55-b8c5-61d2da051853": {"doc_hash": "d6a80dfc524b7e6529efe778a3a03e3938dd0bdcebc5a3c6c3e3fe5cd0de89a2", "ref_doc_id": "dd791c9e-657a-4ef0-93ee-cf37d8dc5332"}, "ac54cccd-adda-4022-865d-5177c09a50b4": {"doc_hash": "9c2393bfea8dbf45c37d14eede2cdaecf87b065ce75b8f6df6ae99e36c22a78d", "ref_doc_id": "931bdb33-06f1-40a7-8dd9-4b917a6314bf"}, "2050e05c-85c7-41bf-a530-141375237e42": {"doc_hash": "4381d4017b4e1070a592fe04ee4f7fe9f3a27352b0e4b02c897d8a9bc6ae7a05", "ref_doc_id": "e6e44a4e-9d3f-43e8-ba25-535594dd4aa0"}, "5770b204-a2ad-4bca-ad9b-f1738d948297": {"doc_hash": "22f57cfd0569b7c38e744c2302140afb3cdfb48e07bb9b0a7ef89119582f3892", "ref_doc_id": "f25dd720-f220-46bf-a1c4-ae068389e06d"}, "b799ea19-9b60-4247-9ce5-77576678f320": {"doc_hash": "417bc740dc9d8ebf1d5dbcb7aa64b29db5b6a670e5f761c0f180c291cdb505c5", "ref_doc_id": "e1abab88-31cf-4b5c-b5bb-362d5d9e4781"}, "7d8d5c9e-b5ac-40b0-ba8c-ff594814c15d": {"doc_hash": "fe4c8dd1fd5a52f9f11e9976e3bd1bc9554463bc4a2098e4ba329e3d73a603e6", "ref_doc_id": "c1abd69b-a996-4547-bcb9-339850e2c578"}, "e8bcec72-c459-4b7a-b2de-9dac3c84689a": {"doc_hash": "57ff83e46de6354f8667db1f5ec8b7b1adaa59f26d219f32e6323acc2658ce89", "ref_doc_id": "c33d8504-783b-4537-888a-f234e269cae4"}, "2b79ac6e-7d17-4262-bddf-29c28e6fca72": {"doc_hash": "fae0876c68576d07c8da33c1f388c4fb2ea8e3da608471aaa813cc6c36f1cc20", "ref_doc_id": "a6b81d63-4c32-493d-8316-234b60f12875"}, "39f97a02-75f4-4a96-addc-416a78d06b5c": {"doc_hash": "ccd1689be1a296abc86c510f91421a6d2f1f62ac71cbe0c1fa8c5534730ccce3", "ref_doc_id": "0de56f77-8aa8-4ec8-a802-6b6ad83a501e"}, "ec4bbc3b-1767-44cd-82e4-813540363b85": {"doc_hash": "fd05c3a190102dc6f31e69a9aca0a67010eaf1cdd648395c632a4fb7c2a22dda", "ref_doc_id": "9c0f3155-8c2c-48bf-b5bf-e15a3da8bdf2"}, "9ea63d69-fe8d-411d-95ce-5b9f2101e157": {"doc_hash": "dd2b2581c6d32a5acb8074c40d2df5c78778e91ef5e16c6d08969956d336b6aa", "ref_doc_id": "c411f31e-f296-4c85-bfc3-0f68548c4f69"}, "3c800d40-2698-4ab4-a2d3-b6c6b2a34536": {"doc_hash": "cc4e3f78c222c41431086daf9913fbb79f8de01292a4848358c31dc0d5aedfce", "ref_doc_id": "6d1ce695-b5af-4526-a3ec-fecb8f85e3b5"}, "ed98a415-a6c5-4be2-ba78-96d57900bcad": {"doc_hash": "8018cf5409c5af714cdf6868c6dcd2748af247a742ba478177ab75361f229288", "ref_doc_id": "dd6cdf54-ffb8-4c73-9efc-eb3d4f946350"}, "c62347d2-78cc-4546-af10-9a086aeb4677": {"doc_hash": "a1797f9608517bfce65777b3a5373a2bd6f8c72d27f7880781844d64848c04fe", "ref_doc_id": "546fe59b-fdfe-4bfd-a820-5ea7d5794393"}, "fa724cec-cda8-4107-abbd-c42fe85dd9de": {"doc_hash": "a0e0c714225862bb519562179db692ed52f115ee8328792cbb5c89b639e69fec", "ref_doc_id": "e7d938f0-7ef2-4eab-9e6a-95bf5e2be284"}, "ea5827ca-3200-41b9-a8a4-6b2d0990b303": {"doc_hash": "f5d1489f38e008253b7b5ad07db5880977539cd7c2f9f4ea35faa0d9f76706d1", "ref_doc_id": "37c3ed5b-5261-4f6d-8466-058a5f1f4fb6"}, "5af7aea4-0232-46a4-8a4f-c1cc3a35ea5b": {"doc_hash": "064955daa9ffce13d23b34462614d80b619c648659be83d1f358233d5295c844", "ref_doc_id": "33cafa41-ffcd-4e91-bb7c-4ca9df73e40f"}, "74017acd-c5ca-42c7-8a89-60674fa0b0cc": {"doc_hash": "ed61e35d4c64d6a444f0fc3aa203d69f1c5f7532b54f69970e8a7017104fe01c", "ref_doc_id": "8006b6a6-f025-427c-a9ee-64a2f7d74b4c"}, "d93cb93d-8f28-4f63-ba6a-b2f1756a6db3": {"doc_hash": "b876a52725385303079e20444b8b4c1cf342eaeb55b695cc47cd8254935aac18", "ref_doc_id": "1b9de640-2e82-49c9-8283-6f356fdc20dc"}, "b8b9bff1-704d-4271-8716-5a0b4a2c1138": {"doc_hash": "f9c7b3f7dca84beda80e824381dd07f4f570824324dec191e8eaad7ef5f23d82", "ref_doc_id": "536c6f6d-d678-4823-9df6-887f3c47ea25"}, "7066b7ba-994b-4574-a2e1-8239d3114875": {"doc_hash": "b5e4ed2e1c3f59aa53624d325367ea2e332456bb5b0c83792585ed9f21b7e84b", "ref_doc_id": "b708cdae-27ac-4c9c-8252-8df30880b6a8"}, "f7665667-7d8a-4eaf-9f45-40365569dc9c": {"doc_hash": "1ec9f1df2993898b03cdf612ceb91c2d414d14e056d25f27ce2f181e3a0175b7", "ref_doc_id": "1d43cdc9-5010-4304-a79d-2f24f2cb55f7"}, "0b9ed90f-3143-4bc5-9fed-c78e1c8937da": {"doc_hash": "e26532e3ba6daf37e09b86ef8c9f47cfab042f2e199a98af30bc7186fdfa7329", "ref_doc_id": "e81c45a2-a91c-4b69-9654-6f1da0af7b5e"}, "6b44f320-ef24-4181-8b75-d003e0e7f8ce": {"doc_hash": "d2860c1810e250f9ccb017b566c1e7e5df554d4565c8c7631f366bb35ffc5cde", "ref_doc_id": "f7b148de-ae43-4768-938a-ef3766e5e9a4"}, "3e29309c-b57d-4cad-ac6a-d4f2b42ab19b": {"doc_hash": "3b7ccbfcc037a29a58fdad13ab8db51a5d9ec6206e772633f60d8e6732da9ee8", "ref_doc_id": "47d17c0f-09a1-4258-aa58-44959dc97871"}, "b60262cd-fc44-4011-9179-c4129091aa22": {"doc_hash": "89cec5baea3f7aceae1754d05175f07828b50aed3e578e0e9755953fadba6b9b", "ref_doc_id": "ffe717a0-768a-476a-9174-7211a73454b2"}, "2aae16a3-6d2f-4c84-93cf-06f30c6071b5": {"doc_hash": "4e2e767994db32fb42eb6bd918126bf4720cf4fd9d3daacc7fdd0cc1d78a939b", "ref_doc_id": "399997b9-1df2-4c52-84e3-41cc1050c6b9"}, "64847861-d60d-4fd9-b6c0-75b4421d5237": {"doc_hash": "aa37e24f9215a4c5ac9397db04c7676c0baec158237324779f3439aa654f6d3f", "ref_doc_id": "d2bbed9b-4123-4f0c-a92b-065160dfb8bf"}, "d080e9be-8bf3-4c8a-a0bf-571c2151ac57": {"doc_hash": "cfc51a3ccf99fa529cc013fb4d61437ca59ba2419db8d399c5f352b8a9c74e72", "ref_doc_id": "dae7bf9d-b45d-4b39-a0ab-5ae486f4693b"}, "accd6aea-523f-4f1d-a086-c1d499b9cd00": {"doc_hash": "d262a49b6464b0d683b272cbdd0235b339850768f833eae921649a6fae9513b4", "ref_doc_id": "a5ea1280-ff56-4911-bbe8-5025bed9be20"}, "3bb80efc-ef0e-4f04-97be-5066366d56a8": {"doc_hash": "905b59728c662781c23c51c5261e1567280176f93ef330f15d1aa6f94656b3fa", "ref_doc_id": "7cc854e3-937d-4bfb-aa1b-3ae33b8a8f99"}, "1a192d56-6674-4096-a405-9749a86ef0ae": {"doc_hash": "27980f7bd96cc13266177aee95a72fb41eb77762d40bb6a9000a033cc6543fd9", "ref_doc_id": "66769a97-e4d4-43d1-8c23-d7018b141c41"}, "0f039e7f-c18b-4470-b56f-d816de1b759b": {"doc_hash": "30397f7ebb9ed3c7d8807a79935a7952eff2fd26404d49ee1681ed0a53d8ea57", "ref_doc_id": "0c3d1ed3-e7f3-40b9-98cb-53f523098891"}}, "docstore/data": {"38392cfb-c005-4336-bed9-5c0a61c487e9": {"__data__": {"id_": "38392cfb-c005-4336-bed9-5c0a61c487e9", "embedding": null, "metadata": {"page_label": "1", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a0e08835-711d-4e28-922f-fb2f7f064c48", "node_type": "4", "metadata": {"page_label": "1", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "5cabacfbf2d0efe6b2f07b6aaa65bb870e3408cc65b2512f63dfb12b18af15c8", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n11.1\n1.2\n1.2.1\n1.2.2\n1.2.3\n1.2.4\n1.2.5\n1.2.6\n1.2.7\n1.2.8\n1.2.9\n1.2.10\n1.2.11\n1.2.12\n1.2.13\n1.2.14\n1.2.15\n1.2.16\n1.2.17\n1.2.18\n1.2.19\n1.2.20\n1.2.21\n1.2.22\n1.2.23\n1.2.24\n1.2.25\n1.2.26\n1.2.27\n1.2.28\n1.2.29\n1.2.30Table of Contents\nIntroduction\nx86 Course\nPart 1: Goals\nPart 2: Techniques\nPart 3: Types Of Malware\nPart 4: x86 Assembly Intro\nPart 5: Binary Number System\nPart 6: Hexadecimal Number System\nPart 7: Transistors And Memory\nPart 8 - Bytes, Words, Double Words, etc...\nPart 9: x86 Basic Architecture\nPart 10: General-purpose Registers\nPart 11: Segment Registers\nPart 12: Instruction Pointer Register\nPart 13: Control Registers\nPart 14: Flags\nPart 15: Stack\nPart 16: Heap\nPart 17 \u2013 How To Install Linux\nPart 18 - vim Text Editor\nPart 19 - Why Learn Assembly\nPart 20 - Instruction Code Handling\nPart 21 - How To Compile A Program\nPart 22 - ASM Program 1 [Moving Immediate Data]\nPart 23 - ASM Debugging 1 [Moving Immediate Data]\nPart 24 - ASM Hacking 1 [Moving Immediate Data]\nPart 25 - ASM Program 2 [Moving Data Between Registers]\nPart 26 - ASM Debugging 2 [Moving Data Between Registers]\nPart 27 - ASM Hacking 2 [Moving Data Between Registers]\nPart 28 - ASM Program 3 [Moving Data Between Memory And\nRegisters]\nPart 29 - ASM Debugging 3 [Moving Data Between Memory And\nRegisters]\nPart 30 - ASM Hacking 3 [Moving Data Between Memory And\nRegisters]", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1365, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "15bbaf21-7e87-43bf-9b8c-b40d795c5b44": {"__data__": {"id_": "15bbaf21-7e87-43bf-9b8c-b40d795c5b44", "embedding": null, "metadata": {"page_label": "2", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "05dfabb5-3112-4b47-af4a-646e0c95be46", "node_type": "4", "metadata": {"page_label": "2", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "97217069ea8db8ba70f1cd31a9638e0fd5acce6e783ef74260a9ad26ba739fdc", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n21.2.31\n1.2.32\n1.2.33\n1.2.34\n1.2.37\n1.2.38\n1.2.39\n1.2.401.2.35\n1.2.36\n1.3\n1.3.1\n1.3.2\n1.3.3\n1.3.4\n1.3.5\n1.3.6\n1.3.7\n1.3.8\n1.3.9\n1.3.10\n1.3.11\n1.3.12\n1.3.13\n1.3.14\n1.3.15\n1.3.16\n1.3.17\n1.3.18\n1.3.19\n1.3.20\n1.3.21\n1.3.22\n1.3.23\n1.3.24\n1.3.25Part 31 - ASM Program 4 [Moving Data Between Registers And\nMemory]\nPart 32 - ASM Debugging 4 [Moving Data Between Registers And\nMemory]\nPart 33 - ASM Hacking 4 [Moving Data Between Registers And\nMemory]\nPart 34 - ASM Program 5 [Indirect Addressing With Registers]\nPart 35 - ASM Debugging 5 [Indirect Addressing With Registers]\nPart 36 - ASM Hacking 5 [Indirect Addressing With Registers]\nPart 37 - ASM Program 6 [CMOV Instructions]\nPart 38 - ASM Debugging 6 [CMOV Instructions]\nPart 39 - ASM Hacking 6 [CMOV Instructions]\nPart 40 - Conclusion\nARM-32 Course 1\nPart 1 \u2013 The Meaning Of Life\nPart 2 - Number Systems\nPart 3 - Binary Addition\nPart 4 - Binary Subtraction\nPart 5 - Word Lengths\nPart 6 - Registers\nPart 7 - Program Counter\nPart 8 - CPSR\nPart 9 - Link Register\nPart 10 - Stack Pointer\nPart 11 - ARM Firmware Boot Procedures\nPart 12 - Von Neumann Architecture\nPart 13 - Instruction Pipeline\nPart 14 - ADD\nPart 15 - Debugging ADD\nPart 16 - Hacking ADD\nPart 17 - ADDS\nPart 18 \u2013 Debugging ADDS\nPart 19 \u2013 Hacking ADDS\nPart 20 \u2013 ADC\nPart 21 \u2013 Debugging ADC\nPart 22 \u2013 Hacking ADC\nPart 23 \u2013 SUB\nPart 24 \u2013 Debugging SUB\nPart 25 \u2013 Hacking SUB", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1392, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d6a44019-0f7f-478b-b84f-6753c18a1822": {"__data__": {"id_": "d6a44019-0f7f-478b-b84f-6753c18a1822", "embedding": null, "metadata": {"page_label": "3", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d9e6e873-3fbe-4314-ada2-b68012438a80", "node_type": "4", "metadata": {"page_label": "3", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "aaa11745824d3e5e4ada44f3f644b4342eface9d2545912912b3c08a410402f3", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n31.4\n1.4.1\n1.4.2\n1.4.3\n1.4.4\n1.4.5\n1.4.6\n1.4.7\n1.4.8\n1.4.9\n1.4.10\n1.4.11\n1.4.12\n1.4.13\n1.4.14\n1.4.15\n1.4.16\n1.4.17\n1.4.18\n1.4.19\n1.4.20\n1.4.21\n1.4.22\n1.4.23\n1.4.24\n1.4.25\n1.4.26\n1.4.27\n1.4.28\n1.4.29\n1.4.30\n1.4.31\n1.4.32\n1.4.33\n1.4.34\n1.4.35\n1.4.36\n1.4.37ARM-32 Course 2\nPart 1 \u2013 The Meaning Of Life Part 2\nPart 2 \u2013 Number Systems\nPart 3 \u2013 Binary Addition\nPart 4 \u2013 Binary Subtraction\nPart 5 \u2013 Word Lengths\nPart 6 \u2013 Registers\nPart 7 \u2013 Program Counter\nPart 8 - CPSR\nPart 9 - Link Register\nPart 10 - Stack Pointer\nPart 11 - Firmware Boot Procedures\nPart 12 - Von Neumann Architecture\nPart 13 - Instruction Pipeline\nPart 14 - Hello World\nPart 15 - Debugging Hello World\nPart 16 - Hacking Hello World\nPart 17 - Constants\nPart 18 \u2013 Debugging Constants\nPart 19 \u2013 Hacking Constants\nPart 20 \u2013 Character Variables\nPart 21 \u2013 Debugging Character Variables\nPart 22 \u2013 Hacking Character Variables\nPart 23 \u2013 Boolean Variables\nPart 24 \u2013 Debugging Boolean Variables\nPart 25 \u2013 Hacking Boolean Variables\nPart 26 \u2013 Integer Variables\nPart 27 \u2013 Debugging Integer Variables\nPart 28 \u2013 Hacking Integer Variables\nPart 29 \u2013 Float Variables\nPart 30 \u2013 Debugging Float Variables\nPart 31 \u2013 Hacking Float Variables\nPart 32 \u2013 Double Variables\nPart 33 \u2013 Debugging Double Variables\nPart 34 \u2013 Hacking Double Variables\nPart 35 \u2013 SizeOf Operator\nPart 36 \u2013 Debugging SizeOf Operator\nPart 37 \u2013 Hacking SizeOf Operator", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1389, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "41d12a6f-464b-4b19-9fe5-559ec46f9727": {"__data__": {"id_": "41d12a6f-464b-4b19-9fe5-559ec46f9727", "embedding": null, "metadata": {"page_label": "4", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b56b7d02-0233-4e75-bda4-16d20021e50f", "node_type": "4", "metadata": {"page_label": "4", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "5aaca2d6c718a8c9ba3adc1bcbfc6c00f3e963c838246441eb427912b53e1e7f", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n41.4.38\n1.4.39\n1.4.40\n1.4.41\n1.4.42\n1.4.43\n1.4.44\n1.4.45\n1.4.46\n1.4.47\n1.4.48\n1.4.49\n1.5\n1.5.1\n1.5.2\n1.5.3\n1.5.4\n1.5.5\n1.5.6\n1.5.7\n1.5.8\n1.5.9\n1.5.10\n1.5.11\n1.5.12\n1.5.13\n1.5.14\n1.5.15\n1.5.16\n1.5.17\n1.5.18\n1.5.19\n1.5.20\n1.5.21\n1.5.22\n1.5.23\n1.5.24\n1.5.25Part 38 \u2013 Pre-Increment Operator\nPart 39 \u2013 Debugging Pre-Increment Operator\nPart 40 \u2013 Hacking Pre-Increment Operator\nPart 41 \u2013 Post-Increment Operator\nPart 42 \u2013 Debugging Post-Increment Operator\nPart 43 \u2013 Hacking Post-Increment Operator\nPart 44 \u2013 Pre-Decrement Operator\nPart 45 \u2013 Debugging Pre-Decrement Operator\nPart 46 \u2013 Hacking Pre-Decrement Operator\nPart 47 \u2013 Post-Decrement Operator\nPart 48 \u2013 Debugging Post-Decrement Operator\nPart 49 \u2013 Hacking Post-Decrement Operator\nx64 Course\nPart 1 \u2013 The Cyber Revolution\nPart 2 - Transistors\nPart 3 - Logic Gates\nPart 4 - Number Systems\nPart 5 - Binary Addition\nPart 6 - Binary Subtraction\nPart 7 - Word Lengths\nPart 8 - General Architecture\nPart 9 - Calling Conventions\nPart 10 - Boolean Instructions\nPart 11 - Pointers\nPart 12 - Load Effective Address\nPart 13 - The Data Segment\nPart 14 - SHL Instruction\nPart 15 - SHR Instruction\nPart 16 - ROL Instruction\nPart 17 - ROR Instruction\nPart 18 - Boot Sector Basics [Part 1]\nPart 19 - Boot Sector Basics [Part 2]\nPart 20 - Boot Sector Basics [Part 3]\nPart 21 - Boot Sector Basics [Part 4]\nPart 22 - Boot Sector Basics [Part 5]\nPart 23 - Boot Sector Basics [Part 6]\nPart 24 - Boot Sector Basics [Part 7]\nPart 25 - Boot Sector Basics [Part 8]", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1500, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ad9daf5f-92cb-4bad-899f-2d7a497803f3": {"__data__": {"id_": "ad9daf5f-92cb-4bad-899f-2d7a497803f3", "embedding": null, "metadata": {"page_label": "5", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d5a760ff-6b1b-4c7f-b3df-c99eb876023b", "node_type": "4", "metadata": {"page_label": "5", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "57ec0ecd7dce5220793a8f89ba1adb7bf190388ce13709c542781b46aacba9cd", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n51.5.26\n1.5.27\n1.5.28\n1.5.29\n1.5.30\n1.5.31\n1.5.32\n1.5.33\n1.5.34\n1.5.35\n1.5.36\n1.5.37\n1.5.38\n1.5.39\n1.5.40\n1.5.41\n1.5.42\n1.5.43\n1.6\n1.6.1\n1.6.2\n1.6.3\n1.6.4\n1.6.5\n1.6.6\n1.6.7\n1.6.8\n1.6.9\n1.6.10\n1.6.11\n1.6.12\n1.6.13\n1.6.14\n1.6.15\n1.6.16\n1.6.17\n1.6.18\n1.6.19Part 26 - Boot Sector Basics [Part 9]\nPart 27 - x64 Assembly [Part 1]\nPart 28 - x64 Assembly [Part 2]\nPart 29 - x64 Assembly [Part 3]\nPart 30 - x64 Assembly [Part 4]\nPart 31 - x64 Assembly [Part 5]\nPart 32 - x64 Assembly [Part 6]\nPart 33 - x64 Assembly [Part 7]\nPart 34 - x64 C++ 1 Code [Part 1]\nPart 35 - x64 C++ 2 Debug [Part 2]\nPart 36 - x64 C++ 3 Hacking [Part 3]\nPart 37 - x64 C & Genesis Of Life\nPart 38 - x64 Networking Basics\nPart 39 - Why C?\nPart 40 - Hacking Hello World!\nPart 41 - Hacking Variables!\nPart 42 - Hacking Branches!\nPart 43 - Hacking Pointers!\nARM-64 Course\nPart 1 - The Meaning Of Life\nPart 2 - Development Setup\nPart 3 - \"Hello World\"\nPart 4 - Debugging \"Hello World\"\nPart 5 - Hacking \"Hello World\"\nPart 6 - Basic I/O\nPart 7 - Debugging Basic I/O\nPart 8 - Hacking Basic I/O\nPart 9 - Character Primitive Datatype\nPart 10 - Debugging Character Primitive Datatype\nPart 11 - Hacking Character Primitive Datatype\nPart 12 - Boolean Primitive Datatype\nPart 13 - Debugging Boolean Primitive Datatype\nPart 14 - Hacking Boolean Primitive Datatype\nPart 15 - Float Primitive Datatype\nPart 16 - Debugging Float Primitive Datatype\nPart 17 - Hacking Float Primitive Datatype\nPart 18 - Double Primitive Datatype\nPart 19 - Debugging Double Primitive Datatype", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1534, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d73ed1e5-6994-4e21-8eb0-921ab96a206a": {"__data__": {"id_": "d73ed1e5-6994-4e21-8eb0-921ab96a206a", "embedding": null, "metadata": {"page_label": "6", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f43b82e4-1424-4d61-8690-7e518485ae6d", "node_type": "4", "metadata": {"page_label": "6", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "aaa8a06f7bf863f39cefecf84ac6f8140e444f5fbe8bf89ceaaec123e545ca81", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n61.6.20\n1.7\n1.7.1\n1.7.2\n1.7.3\n1.7.4\n1.7.5\n1.7.6\n1.7.7\n1.7.8\n1.7.9\n1.7.10\n1.7.11\n1.7.12\n1.7.13\n1.7.14\n1.7.15\n1.7.16\n1.7.17\n1.7.18\n1.7.19\n1.7.20Part 20 - Hacking Double Primitive Datatype\nPico Hacking Course\nPart 1 - The Why, The How...\nPart 2 - Hello World\nPart 3 - Debugging Hello World\nPart 4 - Hacking Hello World\nPart 5 - char\nPart 6 - Debugging char\nPart 7 - Hacking char\nPart 8 - int\nPart 9 - Debugging int\nPart 10 - Hacking int\nPart 11 - float\nPart 12 - Debugging float\nPart 13 - Hacking float\nPart 14 - double\nPart 15 - Debugging double\nPart 16 - Hacking double\nPart 17 - \"ABSOLUTE POWER CORRUPTS ABSOLUTELY!\", The\nTragic Tale Of Input...\nPart 18 - \"FOR 800 YEARS HAVE I TRAINED JEDI!\", The FORCE That\nIS Input...\nPart 19 - Input\nPart 20 - Debugging Input", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 776, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "57d91f76-5cba-4353-8f2a-2893abd5427d": {"__data__": {"id_": "57d91f76-5cba-4353-8f2a-2893abd5427d", "embedding": null, "metadata": {"page_label": "7", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2776cc63-94eb-44bc-afb1-dc3edb5c7058", "node_type": "4", "metadata": {"page_label": "7", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "98efef3eefb150801a1f55ba25501e44e55a20a12fae4cc054a77b54555daa74", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n7Reverse Engineering For Everyone!\n\u2014 by @mytechnotalent\n \n \nWait, what's reverse engineering?\nWikipedia defines it as:\nReverse engineering, also called backwards engineering or back\nengineering, is the process by which an artificial object is deconstructed to\nreveal its designs, architecture, code, or to extract knowledge from the\nobject. It is similar to scientific research, the only difference being that\nscientific research is conducted into a natural phenomenon.\nWhew, that was quite a mouthful, wasn't it? Well, it is one of the main reasons\nwhy this tutorial set exists. To make reverse engineering as simple as possible.\nThis comprehensive set of reverse engineering tutorials covers x86, x64 as well\nas 32-bit ARM and 64-bit architectures. If you're a newbie looking to learn\nreversing, or just someone looking to revise on some concepts, you're at the right\nplace. As a beginner, these tutorials will carry you from nothing upto the mid-\nbasics of reverse engineering, a skill that everyone within the realm of cyber-", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1043, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0b19a9f0-3937-4512-bd97-e98fdf184378": {"__data__": {"id_": "0b19a9f0-3937-4512-bd97-e98fdf184378", "embedding": null, "metadata": {"page_label": "8", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "17d92989-e6b1-4ff6-b817-b030decf673b", "node_type": "4", "metadata": {"page_label": "8", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "1889dae261c07e8868cc010850a4b41c91a66c663333500b282468e12a7fb8f6", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n8security should possess. If you're here just to refresh some concepts, you can\nconveniently use the side bar to take a look at the sections that has been covered\nso far.\nYou can get the entire tutorial set in PDF or MOBI format. All these ebook\nversions will get updated automatically as new tutorials will be added.\nDownload here: [ PDF | MOBI  ]\nGitbook crafted with \u2661 by @0xInfection", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 401, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ff3f45e9-fcc0-46ce-a947-5c16d2a35154": {"__data__": {"id_": "ff3f45e9-fcc0-46ce-a947-5c16d2a35154", "embedding": null, "metadata": {"page_label": "9", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "453e8ff1-2c38-47b7-9737-1b14d5db58d8", "node_type": "4", "metadata": {"page_label": "9", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "85944515d48051b19c3a01796ba48ab9737d0ae2451ab70b378c5bb5beee62ba", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n9The x86 Architecture\nLet's dive in rightaway!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 60, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "448743ab-434e-41d6-ba01-a607e04c1bfa": {"__data__": {"id_": "448743ab-434e-41d6-ba01-a607e04c1bfa", "embedding": null, "metadata": {"page_label": "10", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "001678e3-b82a-4ec7-b18d-03ca81bec483", "node_type": "4", "metadata": {"page_label": "10", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "117d62292d83efc2fb5531f8edc1704ca6be51724fb7f39b736d7bc14ef611ae", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n10Part 1: Goals\nEssential to the discussion of basic reverse engineering is the concept of modern\nmalware analysis. Malware analysis is the understanding and examination of\ninformation necessary to respond to a network intrusion.\nThis short tutorial will begin with the basic concepts of malware reverse\nengineering and graduate to an entry-level basic examination of Assembly\nLanguage.\nThe keys to the kingdom so to speak are rooted in the break-down of the\nrespective suspected malware binary and how to find it on your network and\nultimately to contain it.\nUpon full identification of the files required for deeper analysis, it is critical to\ndevelop signatures to detect malware infections throughout your network whether\nit be a home based LAN or complex corporate WAN to which malware analysis is\nnecessary to develop host-based and network signatures.\nTo begin with the concept of a host-based signature, we need to understand that\nthese are utilized to find malicious code in a target machine. Host-based\nsignatures are also referred to as indicators which can identify files created or\nedited by the infected code which can make hidden changes to a computers\nregistry. This is quite in contrast with antivirus signatures because these\nconcentrate on what the malware actually does rather than the make-up of the\nmalware which makes them more effective in finding malware that can migrate or\nhas been removed from the media.\nIn contrast, network signatures are used to find malicious code by examining\nnetwork traffic. It is important to note such tools as WireShark and the like are\noften effective in such analysis.\nUpon identification of these aforementioned signatures, the next step is to identify\nwhat the malware is actually doing.\nIn our next lesson we will discuss techniques of malware analysis.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1827, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9d965b5f-7f5e-4f31-b422-3329fca32fa7": {"__data__": {"id_": "9d965b5f-7f5e-4f31-b422-3329fca32fa7", "embedding": null, "metadata": {"page_label": "11", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "92a35a12-a98c-470e-9113-1ea60b56548c", "node_type": "4", "metadata": {"page_label": "11", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "019fe34e10ac04c897e00ebf61a9df208111c1f957fa19c9729b51b7b2eb7f7b", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n11Part 2: Techniques\nThere are two basic techniques that you can employ when analyzing malware.\nThe first being static analysis and the other being dynamic analysis.\nStatic analysis uses software tools to examine the executable without running the\nactual decompiled instructions in Assembly. We will not focus on this type of\nanalysis here as we are going to focus on actual disassembled binaries instead\nhowever in future courses we will.\nDynamic analysis uses disassemblers and debuggers to analyze malware\nbinaries while actually running them. The most popular tool in the market today is\ncalled IDA which is a multi-platform, multi-processor disassembler and debugger.\nThere are other disassembler/debugger tools as well on the market today such as\nHopper Disassembler, OllyDbg and many more.\nA disassembler will convert an executable binary written in Assembly, C, C++, etc\ninto Assembly Language instructions that you can debug and manipulate.\nReverse engineering is much more than just malware analysis. At the end of our\nseries, our capstone tutorial will utilize IDA as we will create a real-world scenario\nwhere you will be tasked by the CEO of ABC Biochemicals to secretly try to\nethically hack his companies software that controls a bullet-proof door in a very\nsensitive Bio-Chemical lab in order to test how well the software works against\nreal threats. The project will be very basic however it will ultimately showcase the\npower of Assembly Language and how one can use it to reverse engineer and\nultimately provide solutions on how to better design the code to make it safer.\nIn our next lesson we will discuss various types of malware.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1666, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dfb59914-451e-426a-a186-5707e694368e": {"__data__": {"id_": "dfb59914-451e-426a-a186-5707e694368e", "embedding": null, "metadata": {"page_label": "12", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9b1e9e4f-7616-4404-8825-3341066102d8", "node_type": "4", "metadata": {"page_label": "12", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "31635578c7208366c69ecbd83653dcff709aa4986aad5113b811ace5fe0d2fad", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n12Part 3: Types Of Malware\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nMalware falls into several categories of which I will touch briefly upon below.\nA backdoor is malicious code that embeds itself into a computer to allow a remote\nattacker access with very little or sometimes no authority to execute various\ncommands on any respective local computer.\nA botnet allows an attacker access to a system however receive instructions not\nfrom one remote attacker but from a command-and-control server to which can\ncontrol an unlimited amount of computers at the same time.\nA downloader is nothing more than malicious code that has only one purpose\nwhich is to install other malicious software. Downloaders are frequently installed\nwhen a hacker gains access to a system initially. The downloader then installs\nadditional software to control the system.\nWe find information access malware which gathers information from a computer\nand sends it directly to a host such as a keylogger or password grabber and\nusually used to obtain access to various online accounts that can be very\nsensitive.\nThere are malicious programs that launch other malicious programs which use\nnon-standard options to get increased access or a greater cloaking/hiding\ntechnique when penetrating a system.\nOne of the most dangerous forms of malware is the rootkit which hides the\nexistence of itself and additional malware from the user which makes it extremely\nhard to locate. A rootkit can manipulate processes such as hiding their IP in an IP\nscan so that a user may never know that they have a direct socket to a botnet or\nother remote computer.\nScareware is used to trick a user into purchasing additional software to falsely\nprotect a user when there is no real threat whatsoever that exists. Once a user\npays to have the tricked software removed from the computer it then can stay\nresident and later emerge in an altered form.\nThere are also various kinds of malware that send spam from a target machine\nwhich generates income for the attacker by allowing them to sell various services\nto other users.\nThe final form of malware is that of a traditional worm or virus which copies itself\nand goes after other computers.\nThis is the end the road for now regarding our discussion of malware because we\nfirst need to go back to the beginning and understand how a computer works at\nit's base level.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2556, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6c617c77-7034-4713-bba0-66aa9ef4abdb": {"__data__": {"id_": "6c617c77-7034-4713-bba0-66aa9ef4abdb", "embedding": null, "metadata": {"page_label": "13", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dff8ab15-4d9e-4211-b477-c81282473175", "node_type": "4", "metadata": {"page_label": "13", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "42c05058cc886623623b8db97efe5d3d0bbadc2826af5f7a681b7c708ba473bb", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n13In our next lesson we will begin our long journey into x86 Assembly Language. In\norder to truly understand the very basics of reverse engineering and malware we\nneed to over the next several months take a deep dive into the core and build our\nway up.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 266, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ee905d4e-3602-411b-93a8-597841d30b48": {"__data__": {"id_": "ee905d4e-3602-411b-93a8-597841d30b48", "embedding": null, "metadata": {"page_label": "14", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6ee0e2a5-4ac9-4b73-aeb4-0abb2bc90848", "node_type": "4", "metadata": {"page_label": "14", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "3a644c24c22174e51c7628b95bf4b2d269bd20e06a6c3e8a8d6d25ce503b5ab0", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n14Part 4: x86 Assembly Intro\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLadies and Gentlemen, boys and girls, children of all ages! We are about to\nembark on a journey that will change your life forever!\nThere is vast material to cover to get a good understanding of Assembly\nLanguage and why it is important to understand the basics.\nThe first question we must answer is what is x86 Assembly Language to which\nthe answer is a family of backward-compatible Assembly Languages which\nprovide compatibility back to the Intel 8000 series of microprocessors. x86\nAssembly Languages are used to produce object code for the aforementioned\nseries of processors. It uses mnemonics to represent the instructions that the\nCPU can execute.\nAssembly Language for the x86 microprocessor works in conjunction with various\noperating systems. We will focus on Linux Assembly Language utilizing the Intel\nsyntax in addition to learning how to program in C to which we will disassemble\nthe source code an analyze the respective Assembly.\nx86 Assembly Language has two choices of syntax. The AT&T syntax was\ndominant in the Unix world since the OS was developed at AT&T Bell Labs. In\ncontrast, the Intel syntax was originally used for the documentation of the x86\nplatform and was dominant in the MS-DOS and Windows environments.\nFor our purposes, when we are ultimately disassembling or debugging software,\nwhether it be in a Linux or Windows environment, we will see the Intel syntax in\nlarge measure. This is essential whether we are examining a Windows binary in\nPE format or a Linux binary in ELF format. More on that later in this tutorial.\nThe main differences between the two is in the AT&T syntax, the source comes\nbefore the destination and in the Intel syntax, the destination comes before the\nsource. We will discuss this in more detail later in the tutorial.\nBefore you run for the door and regret embarking on this journey, remember,\nsome basic context helps to which we will develop throughout our quest. Many of\nthese topics may be confusing at this point which is perfectly normal as we will\ndevelop them in time.\nWe will focus on Linux Assembly because Linux runs on a variety of hardware\nand is capable of running devices such as a cell phone, personal computer or a\ncomplex commercial server.\nLinux is also open source and there are many versions. We will focus on Ubuntu\nin our demonstrations which can be freely obtained. In contrast, the Windows\noperating system is owned and controlled by one company, Microsoft, to which all\nupdates, security patches and service patches come directly from them where\nLinux has millions of professionals providing the same absolutely free!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2866, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5c18f63c-6f20-401c-8329-f53f5eae1258": {"__data__": {"id_": "5c18f63c-6f20-401c-8329-f53f5eae1258", "embedding": null, "metadata": {"page_label": "15", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9f73fc41-9cd8-43fd-9563-bb2a4c9ba85b", "node_type": "4", "metadata": {"page_label": "15", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "160e61cc5274f6582f61bdbc18c1166d19c1361e784619cce76763f02e33d81f", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n15We will also focus on a 32-bit architecture as ultimately most malware will be\nwritten for such in order to infect as many systems as possible. 32-bit\napplications/malware will work on 64-bit systems so we want to understand the\nbasics of the 32-bit world.\nIn our next lesson we discuss the binary number system. Grab your cup of coffee\nyou are going to need it!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 378, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dc0cb11b-f410-415f-9047-7779209b9cad": {"__data__": {"id_": "dc0cb11b-f410-415f-9047-7779209b9cad", "embedding": null, "metadata": {"page_label": "16", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aa998532-d86d-4132-b45c-c59c082f9446", "node_type": "4", "metadata": {"page_label": "16", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "8e28785ecceb64753fadd718052b91a1c18122ea2d99c60d2f7e3039e1725299", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n16Part 5: Binary Number System\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nBinary numbers are what define the core of a computer. A bit within a computer is\neither on or off. A bit has either electricity turned on to it or it is absent of such. We\nwill dive into this deeper in future tutorials. \nPuzzled and confused, where do we go from here?\nHave no fear! The binary number system is here! It is important to understand that\nin binary, each column has a value two times the column to its right and there are\nonly two digits in the base which happen to be 0 and 1.\nIn decimal, base 10, say we have the number 15 which means (1 x 10) + (5 x 1) =\n15 therefore the 5 is the number times 1 and the 1 is that number times 10.\nBinary works in a similar fashion however we are now referring to base 2. That\nsame number in binary is 1111. To illustrate: \nBinary numbers are important because using them instead of the decimal system\nsimplifies the design of computers and related technologies. The simplest\ndefinition of the binary number system is a system of numbering that uses only\ntwo digits, as we mentioned above, to represent numbers necessary for a\ncomputer architecture rather than using the digits 1 through 9 plus 0 to represent\nsuch.\nIn our next lesson we discuss the hexadecimal number system. It only gets more\nexciting from here!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1527, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0b471e3e-ef2f-49e2-9913-d2bb3c442eda": {"__data__": {"id_": "0b471e3e-ef2f-49e2-9913-d2bb3c442eda", "embedding": null, "metadata": {"page_label": "17", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d8aeac3b-80d6-434e-a88b-c769632035e3", "node_type": "4", "metadata": {"page_label": "17", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "c03f84fb2e93e066166256ecbe9480b755584495db693b93e9eb4d514292c6bc", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n17Part 6: Hexadecimal Number System\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nNow that we are binary masters, it's time to tackle the numbering system of\nnumbering systems!\nWe learned in binary that each number represents a bit. If we combine 8 bits, we\nget a byte. A byte can be further subdivided into its top 4 bits and its low 4 bits. A\ncombination of 4 bits is a nibble. Since 4 bits gives you the possible range from 0\n- 15 a base 16 number system is easier to work with. Keep in mind when we say\nbase 16 we start with 0 and therefore 0 - 15 is 16 different numbers.\nThis exciting number system is called hexadecimal. The reason why we use this\nnumber system is that in x86 Assembly it is much easier to express binary\nnumber representations in hexadecimal than it is in any other numbering system.\nHexadecimal is similar to every other number system except in hexadecimal,\neach column has a value of 16 times the value of the column to its right. The fun\npart about hexadecimal is that not only do we have 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 we\nhave A, B, C, D, E and F and therefore 16 different symbols.\nLets look at a simple table to see how hexadecimal compares to decimal.\n      \nOk I see the smoke coming out of your ears but its ok! In decimal, everything is\ndealt with in the power of 10. Let's take the number 42 and examine it in decimal:\n2 x 10 ^ 0 = 2\n4 x 10 ^ 1 = 40\nRemember 10 to the 0 power is 1 and 10 to the 1st power is 10, therefore, 2 + 40\n= 42.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1656, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c35a60ec-01a9-4bac-add3-819d9849859c": {"__data__": {"id_": "c35a60ec-01a9-4bac-add3-819d9849859c", "embedding": null, "metadata": {"page_label": "18", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "04972e5d-a642-48ad-9870-1b8f5a3ec119", "node_type": "4", "metadata": {"page_label": "18", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "f58b982240ae9a43d386763ddac4315e544a9c7daafe615a444ae4a048f3177d", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n18Grab your coffee, here comes the fun stuff!\nIf we understand that decimal is a base 10 number system, we can create a\nsimple formula where b represents the base. In this case, b = 10.\n(2 * b ^ 0) + (4 * b ^ 1)\n(2 * 10 ^ 0) + (4 * 10 ^ 1) = 42\nIn binary, 42 decimal is 0010 1010 binary as follows:\n0 x 2 ^ 0 = 0\n1 x 2 ^ 1 = 2\n0 x 2 ^ 2 = 0\n1 x 2 ^ 3 = 8\n0 x 2 ^ 4 = 0\n1 x 2 ^ 5 = 32\n0 x 2 ^ 6 = 0\n0 x 2 ^ 7 = 0\n0 + 2 + 0 + 8 + 0 + 32 + 0 + 0 = 42 decimal\nIn hexadecimal, everything is dealt with in the power of 16. Therefore 42 in\ndecimal is 2A in hexadecimal:\n10 * 16 ^ 0 = 10\n2 * 16 ^ 1 = 32\n10 + 32 = 42 decimal => 2A hexadecimal\nThis is the same as saying:\n10 * 1 = 10\n2 * 16 = 32\n10 + 32 = 42 decimal => 2A hexadecimal\nKeep in mind 10 decimal is equal to A hexadecimal and 2 decimal is equal to 2\nhexadecimal. In our formula above when we deal with A, B, C, D, E or F we need\nto convert them to their decimal equivalent.\nLets take another example of F5 hexadecimal. This would be as follows:\n5 x 16 ^ 0 = 5\n15 x 16 ^ 1 = 240\n5 + 240 = 245 decimal => F5 hexadecimal\nLets look at a binary to hexadecimal table:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1129, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8059b26e-a5d7-4422-a87f-4506edb2dfb0": {"__data__": {"id_": "8059b26e-a5d7-4422-a87f-4506edb2dfb0", "embedding": null, "metadata": {"page_label": "19", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e567217f-3bf1-4575-9074-be87278fa136", "node_type": "4", "metadata": {"page_label": "19", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "886cc771ad2d0a503d8c4343a32b187525b5b73454024fdcc242f920ec5ed82f", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n19\n  \nIt is important to understand that every hexadecimal number is 4 bits long or\ncalled a nibble. This will become critical when we are reverse engineering our C\nprograms into Assembly.\nLets look at this another way. Lets work with some more hexadecimal numbers\nand convert them to decimal:\nTo re-emphasize F1CD as a simple conversion:\nD --- 13 x 1 = 13\nC --- 12 x 16 = 192\n1 --- 1 x 256 = 256\nF --- 15 x 4096 = 61,440\n13 + 192 + 256 + 61,440 = 61,901\nAddition in hexadecimal works as follows. From this point forward all numbers in\nhexadecimal will have a 'h' next to the number:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 597, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f7b5d6d8-3372-4ff3-93be-32c2d4abf7b2": {"__data__": {"id_": "f7b5d6d8-3372-4ff3-93be-32c2d4abf7b2", "embedding": null, "metadata": {"page_label": "20", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "59d6e898-b3aa-489d-b098-7c48b54e7b65", "node_type": "4", "metadata": {"page_label": "20", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "1c1ee565271142a43fd2db2a28e9bd9cf143d818507605d819bec3a9b03aa7c6", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n20\n        \nAnother example is as such:\n      \nA final add example is as such:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 92, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "27e5663d-33d5-4c6f-bff2-2ebbd3afbd1e": {"__data__": {"id_": "27e5663d-33d5-4c6f-bff2-2ebbd3afbd1e", "embedding": null, "metadata": {"page_label": "21", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b8820a50-6eb9-44b8-96ca-17b6d4e0a424", "node_type": "4", "metadata": {"page_label": "21", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "36b1d418e9212c35edde1cbdd2b89a4f9daac2fc5060c8379ed31368eb834aae", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n21\nWe will now focus on subtraction:\nYou are probably asking yourself why is this guy spending so much time going\nover so many different ways of learning this! The answer is that each of us learn a\nlittle different from the next. I wanted to show several representations of\nhexadecimal compared to decimal and binary to help put together the whole\npicture.\nIt is fundamental that you understand what is going on here in order to proceed\nany further. If you have any questions, please comment below and I will be more\nthan happy to help!\nIn our next lesson we discuss switches, transistors and memory.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 614, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c59f4818-1c78-4e5c-bfa7-2348d3e233f8": {"__data__": {"id_": "c59f4818-1c78-4e5c-bfa7-2348d3e233f8", "embedding": null, "metadata": {"page_label": "22", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ce926670-e282-4cda-8ed8-d165b9ddc037", "node_type": "4", "metadata": {"page_label": "22", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "4ba56df0ec96a04fe7d3e79ab210e52cf36a45af38f19f0e3d9831c810a3244c", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n22Part 7: Transistors And Memory\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nIn our last lesson, we took a very deep dive into the hexadecimal number system.\nI am going to keep this weeks lesson short so that you can re-read last weeks\nlesson. I can not emphasize how important it is to understand hexadecimal\nnumber conversions in addition to the ability to manually add and subtract them.\nIn the real world, we have calculators, in the real world we use the Windows\noperating system, in the real world professional reverse engineers use GUI\ndebuggers like IDA Pro and others.\nThe question is, why am I not jumping right into the core of what real reverse\nengineers do? The answer is simple, one must have a deep respect and\nunderstanding of the machine in order to become great. We will never change the\nworld without fully understanding it first. Patience and perseverance win the day.\nI focus on on Linux and console-based programming because most professional\nservers utilize Linux and therefore is the greatest threat of malware.\nUnderstanding Linux Assembly allows you to very easily grasp the library-choking\nportable executable format of Windows Assembly in a much deeper way.\nAs I step off the soap box, lets get back to the basics of computers so here we go!\nWhen we ask ourselves what is a computer one must go down to as about as\nbasic as one can get.\nElectronic computers are simply made out of transistor switches. Transistors are\nmicroscopic crystals of silicon that use electrical properties of silicon to act as\nswitches. Modern computers have what are referred to as field-effect transistors.\nLet's use an example of 3 pins. When an electrical voltage is applied to pin 1,\ncurrent then flows between pins 2 and 3. When the voltage is removed from the\nfirst pin, current stops flowing between pins 2 and 3.\nWhen we zoom out a bit we see that there are also diodes and capacitors when\ntaken together with the transistor switches we now have a memory cell. A\nmemory cell keeps a minimum current flow to which when you put a small voltage\non its input pin and a similar voltage on its select pin, a voltage will appear and\nremain on its output pin. The output voltage remains in its set state until the\nvoltage is removed from the input pin in conjunction with the select pin.\nWhy is this important you ask. Very simply, the presence of voltage indicates a\nbinary 1 and the absence of voltage indicates a binary 0 therefore the memory\ncell holds one binary digit or bit which is either 1 or 0 meaning on or off.\nIn our next lesson we will discuss bytes and words.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2766, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c403b6f0-cc03-4cf0-a43d-2e6085eb1d47": {"__data__": {"id_": "c403b6f0-cc03-4cf0-a43d-2e6085eb1d47", "embedding": null, "metadata": {"page_label": "23", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "97935c74-f21d-4f82-80de-c9a8d3631c0c", "node_type": "4", "metadata": {"page_label": "23", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "3202406e0c0f25a4807a4f3c065af615cfaef5985639af251f6376e2fcd0c015", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n23Part 8 - Bytes, Words, Double Words,\netc...\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nMemory is measured in bytes. A byte is 8 bits. Two bytes are called a word and\ntwo words are called a double word which is four bytes (32-bit) and a quad word\nis eight bytes (64-bit).\nA byte is 8 bits and is 2^8 power which is 256. The number of binary numbers 8\nbits in size is one of 256 values starting at 0 and going to 255.\nEvery byte of memory in a computer has its own unique address. Let's review the\ndisassembled instructions for a simple hello world application in Linux by setting a\nbreakpoint on the main function. We will use the GDB debugger:\nDon't worry if this does not make sense yet. The point of utilizing this example is\nto give you a sneak peek into our first program that we will examine in addition to\nlearning about memory in a computer.\nBelow is an examination of the ESP register. Again, it is not critical that you\nunderstand what a register is or what ESP does. We simply want to see what a\nmemory location looks like:\n \nWe see the memory location of 0xffffd040 which of course is in hexadecimal. We\nalso see the value inside the ESP register which is 0xf7fac3dc which is also in\nhexadecimal.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1398, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5522fd06-bb3d-4c1e-a75f-2bf8cb3dc9df": {"__data__": {"id_": "5522fd06-bb3d-4c1e-a75f-2bf8cb3dc9df", "embedding": null, "metadata": {"page_label": "24", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "80bb29a5-496e-4b07-8a53-f3593a56e1ae", "node_type": "4", "metadata": {"page_label": "24", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "9d3d7fc4337edfde166ff6785f84e390930927e5be5e76435cc853e0d11bf66f", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n24It is important to understand that 0xffffd040 is 4 bytes and is a double word. As we\nlearned in Part 6: Hexadecimal Number System, each hexadecimal digit is 4 bits\nlong otherwise called a nibble. In 0xffffd040, lets look at the right most digit of 0. In\nthis example, 0 (hexadecimal) is 4 bits long. If we look at 40 (in hexadecimal), we\nsee that is a byte in length or 8 bits long. If we look at d040, we have two bytes or\na word in length. Finally, ffffd040 is a double word or 4 bytes in length which is 32-\nbits long. The 0x at the beginning of the address just designates that is is a\nhexadecimal value.\nA computer program is nothing more than machine instructions stored in memory.\nA 32-bit CPU fetches a double word from a memory address. A double word is 4\nbytes in a row which is read from memory and loaded into the CPU. As soon as it\nfinishes executing, the CPU fetches the next machine instruction in memory from\nthe instruction pointer.\nThose of you new to assembly have now had your first look. Don't get\ndiscouraged or frustrated if you do not know what is going on here. We will take\nour time and go through dozens of examples to break down each step in future\nlessons. What is important is that you take your time and examine what each\nlesson is discussing. Please always feel free to comment below with any\nquestions.\nIn our next tutorial we will discuss the basics of x86 Architecture.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1420, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "de7b6b87-7c70-417d-829e-d0d75f1c9720": {"__data__": {"id_": "de7b6b87-7c70-417d-829e-d0d75f1c9720", "embedding": null, "metadata": {"page_label": "25", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "936d2e6a-7107-4b7b-82c4-ab0d661309e3", "node_type": "4", "metadata": {"page_label": "25", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "a3a127139dfb7fbe8aa84f0497944a817271e57c0c136d9c8fcd345a63b96df7", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n25Part 9: x86 Basic Architecture\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nA computer application is simply a table of machine instructions stored in memory\nto which the binary numbers which make up the program are unique only in the\nway the CPU deals with them.\nThe basic architecture is made up of a CPU, memory and I/O devices which are\ninput/output devices which are all connected by a system bus as detailed below.\nThe CPU consists of 4 parts which are:\n1)Control Unit - Retrieves and decodes instructions from the CPU and then\nstoring and retrieving them to and from memory.\n2)Execution Unit - Where the execution of fetching and retrieving instructions\noccurs.\n3)Registers - Internal CPU memory locations used a temporary data storage.\n4)Flags - Indicate events when execution occurs.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 981, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e9d1e950-c3b1-4a43-8c91-e9768d352418": {"__data__": {"id_": "e9d1e950-c3b1-4a43-8c91-e9768d352418", "embedding": null, "metadata": {"page_label": "26", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c43193b4-f754-4791-afbe-de7881ba530f", "node_type": "4", "metadata": {"page_label": "26", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "8c4a30c39754061be056eacc506a43058840f7ccf1e36e6814a82e2f964e9ebd", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n26\nWe will discuss 32-bit x86 so therefore a 32-bit CPU first fetches a double word (4\nbytes or 32-bits in length) from a specific address in memory and is read from\nmemory and loaded into the CPU. At this point the CPU looks at the binary\npattern of bits within the double word and begins executing the procedure that the\nfetched machine instruction directs it to do.\nUpon completion of executing an instruction, the CPU goes to memory and\nfetches the next machine instruction in sequence. The CPU has a register, which\nwe will discuss registers in a future tutorial, called the EIP or instruction pointer\nthat contains the address of the next instruction to be fetched from memory and\nthen executed.\nWe can immediately see that if we controlled flow of EIP, we can alter the\nprogram to do things it was NOT intended to do. This is a popular technique upon\nwhich malware operates.\nThe entire fetch and execute process is tied to the system clock which is an\noscillator that emits square-wave pulses at precise intervals.\nIn our next tutorial we will dive deeper into the IA-32 Architecture with a\ndiscussion of the General-purpose Registers.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1156, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cac621fe-f830-4179-9aa9-a5848dba4b31": {"__data__": {"id_": "cac621fe-f830-4179-9aa9-a5848dba4b31", "embedding": null, "metadata": {"page_label": "27", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "afcac854-32ec-4ce8-9df6-7d1af887fa05", "node_type": "4", "metadata": {"page_label": "27", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "6be91072496cc6b426adf6e928bdf53685615716fc880afb8cc0e38765f47cab", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n27Part 10: General-purpose Registers\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe general-purpose registers are used to temporarily store data as it is\nprocessed on the processor. The registers have evolved dramatically over time\nand continue to do so. We will focus on 32-bit x86 architecture for our purposes.\nEach new version of general-purpose registers is created to be backward\ncompatible with previous processors. This means that code utilizing 8-bit registers\non the 8080 chips will still function on today's 64-bit chipset.\nGeneral-purpose registers can be used to hold any type of data to which some\nhave acquired specific use which are used in programs. Lets review the 8\ngeneral-purpose registers in an IA-32 architecture.\nEAX: Main register used in arithmetic calculations. Also known as accumulator, as\nit holds results of arithmetic operations and function return values.\nEBX: The Base Register. Pointer to data in the DS segment. Used to store the\nbase address of the program.\nECX: The Counter register is often used to hold a value representing the number\nof times a process is to be repeated. Used for loop and string operations.\nEDX: A general purpose register. Additionally used for I/O operations. In addition\nwill extend EAX to 64-bits.\nESI: Source Index register. Pointer to data in the segment pointed to by the DS\nregister. Used as an offset address in string and array operations. It holds the\naddress from where to read data.\nEDI: Destination Index register. Pointer to data (or destination) in the segment\npointed to by the ES register. Used as an offset address in string and array\noperations. It holds the implied write address of all string operations.\nEBP: Base Pointer. Pointer to data on the stack (in the SS segment). It points to\nthe bottom of the current stack frame. It is used to reference local variables.\nESP: Stack Pointer (in the SS segment). It points to the top of the current stack\nframe. It is used to reference local variables.\nKeep in mind each of the above registers are 32-bit in length or 4 bytes in length.\nEach of the lower 2 bytes of the EAX, EBX, ECX, and EDX registers can be\nreferenced by AX and then subdivided by the names AH, BH, CH and DH for high\nbytes and AL, BL, CL and DL for the low bytes which are 1 byte each.\nIn addition, the ESI, EDI, EBP and ESP can be referenced by their 16-bit\nequivalent which is SI, DI, BP, SP.\nThis can be a bit confusing to someone who has not studied computer\nengineering however let me illustrate in the table below:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2704, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "064976af-9668-444b-aeab-342784ff12ac": {"__data__": {"id_": "064976af-9668-444b-aeab-342784ff12ac", "embedding": null, "metadata": {"page_label": "28", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "74b13dd1-6d0a-488a-a112-3a6213296efc", "node_type": "4", "metadata": {"page_label": "28", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "b3fecdb10aa5f8c47c4806de007c8fe30a9c9f2cef9334f7979d698f7d2c3143", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n28\nEAX would have AX as its 16-bit segment and then you can further subdivide AX\ninto AL for the low 8 bits and AH for the high 8 bits. The same holds true for EBX,\nECX and EDX as well. EBX would have BX as its 16-bit segment and then you\ncan further subdivide BX into BL for the low 8 bits and BH for the high 8 bits. ECX\nwould have CX as its 16-bit segment and then you can further subdivide CX into\nCL for the low 8 bits and CH for the high 8 bits. EDX would have DX as its 16-bit\nsegment and then you can further subdivide DX into DL for the low 8 bits and DH\nfor the high 8 bits.\nESI, EDI, EBP and ESP can be broken down into its 16-bit segments as follows:\nESI would have SI as its 16-bit segment, EDI would have DI as its 16-bit segment,\nEBP would have BP as its 16-bit segment and ESP would have SP as its 16-bit\nsegment.\nIn our next tutorial we will continue our discussion of the IA-32 Architecture with\nthe Segment Registers.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 950, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5028cadd-0347-4849-be98-7de8bb1f7521": {"__data__": {"id_": "5028cadd-0347-4849-be98-7de8bb1f7521", "embedding": null, "metadata": {"page_label": "29", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "875a3fbf-9f56-4eed-96ef-506664e2f5d4", "node_type": "4", "metadata": {"page_label": "29", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "b01ab6230af1031365576433c0e0d2c75a1546d734bcf02bbdd3a0da7dda2940", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n29Part 11: Segment Registers\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe segment registers are used specifically for referencing memory locations.\nThere are three different methods of accessing system memory of which we will\nfocus on the flat memory model which is relevant for our purposes.\nThere are six segment registers which are as follows:\nCS: Code segment register stores the base location of the code section (.text\nsection) which is used for data access.\nDS: Data segment register stores the default location for variables (.data section)\nwhich is used for data access.\nES: Extra segment register which is used during string operations.\nSS: Stack segment register stores the base location of the stack segment and is\nused when implicitly using the stack pointer or when explicitly using the base\npointer.\nFS: Extra segment register.\nGS: Extra segment register.\nEach segment register is 16-bits and contains the pointer to the start of the\nmemory-specific segment. The CS register contains the pointer to the code\nsegment in memory. The code segment is where the instruction codes are stored\nin memory. The processor retrieves instruction codes from memory based on the\nCS register value and an offset value contained in the instruction pointer (EIP)\nregister. Keep in mind no program can explicitly load or change the CS register.\nThe processor assigns its values as the program is assigned a memory space.\nThe DS, ES, FS and GS segment registers are all used to point to data segments.\nEach of the four separate data segments help the program separate data\nelements to ensure that they do no overlap. The program loads the data segment\nregisters with the appropriate pointer value for the segments and then reference\nindividual memory locations using an offset value.\nThe stack segment register (SS) is used to point to the stack segment. The stack\ncontains data values passed to functions and procedures within the program.\nSegment registers are considered part of the operating system and can neither\nread nor be changed directly in almost all cases. When working in the protected\nmode flat model (x86 architecture which is 32-bit), your program runs and\nreceives a 4GB address space to which any 32-bit register can potentially\naddress any of the four billion memory locations except for those protected areas\ndefined by the operating system. Physical memory may be larger than 4GB\nhowever a 32-bit register can only express 4,294,967,296 different locations. If\nyou have more than 4GB of memory in your computer, the OS must arrange a", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2740, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "741bbd43-94a6-4917-9514-ad0269447170": {"__data__": {"id_": "741bbd43-94a6-4917-9514-ad0269447170", "embedding": null, "metadata": {"page_label": "30", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "09e14734-1b90-4bab-a011-e88b3c97d117", "node_type": "4", "metadata": {"page_label": "30", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "da8007ba44e804042bb401786f19e96fd56f566f0c57a6d962ceacdc0beab5b7", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n304GB region within memory and your programs are limited to that new region. This\ntask is completed by the segment registers and the OS keeps close control of\nthis.\nIn our next tutorial we will continue our discussion of the IA-32 Architecture with\nthe Instruction Pointer Register.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 296, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8e3cf609-809a-4cf0-9b51-aa099341b320": {"__data__": {"id_": "8e3cf609-809a-4cf0-9b51-aa099341b320", "embedding": null, "metadata": {"page_label": "31", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "984f2bbb-568b-4f6f-9411-b670e4ee6a04", "node_type": "4", "metadata": {"page_label": "31", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "3d85a86aa8b892f50fd30f5b8ecdb24a62e5852b63590881d4f715bb4d503944", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n31Part 12: Instruction Pointer Register\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe instruction pointer register called the EIP register is simply the most important\nregister you will deal with in any reverse engineering. The EIP keeps track of the\nnext instruction code to execute. EIP points to the next instruction to execute. If\nyou were to alter that pointer to jump to another area in the code you have\ncomplete control over that program.\nLets jump ahead and dive into some code. Here is an example of a simple hello\nworld application in C that we will go into more detail much later in our tutorial\nseries. For our purposes today, we will see the raw POWER of assembly\nlanguage and particularly that of the EIP register and what we can do to\ncompletely hack program control.\nDon\u2019t worry if you do not understand what it does or its functionality. What to take\nnote of here is the fact we have a function called unreachableFunction that is\nnever called by the main function. As you will see if we can control the EIP\nregister we can hack this program to execute that code!\nWe have simply compiled the code to work with the IA32 instruction set and ran\nit. As you can see there is no call to the unreachableFunction  of any kind as it is\nunreachable under normal conditions as you can see the \u2018Hello World!` printed\nwhen executed.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1527, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "64cb17e9-b200-4d32-a7d7-88f15ee9d73d": {"__data__": {"id_": "64cb17e9-b200-4d32-a7d7-88f15ee9d73d", "embedding": null, "metadata": {"page_label": "32", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "db650133-06a9-4cf3-87cf-c5e28ff28731", "node_type": "4", "metadata": {"page_label": "32", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "de9e762eb4c902d535f143f3a05fa92a08aa6673e9c5addd69411956efdde4b3", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n32\nWe have disassembled the program using the GDB Debugger. We have set a\nbreakpoint on the main function and ran the program. The => shows where EIP is\npointing to when we step to the next instruction. If we follow normal program flow,\n\u2018Hello World! will print to the console and exit. \nIf we run the program again and do an examination of where EIP is pointing to we\nwill see:\nWe can see EIP is pointing to main+17 or the address of 0x680cec83.\nLets examine the unreachableFunction  and see where it starts in memory and\nwrite down that address.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 561, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bd83b56e-76a4-4d6f-8290-5ebb7784f63b": {"__data__": {"id_": "bd83b56e-76a4-4d6f-8290-5ebb7784f63b", "embedding": null, "metadata": {"page_label": "33", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a171f1a3-18c1-49dd-b34d-208919f28b4d", "node_type": "4", "metadata": {"page_label": "33", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "3284280b20a8b398670ad19fd213ca00cb16be44bfcf0a1814df23da01add4cd", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n33\nThe next step is to set EIP to address 0x0804843b so that we hijack program flow\nto run the unreachableFunction.\nNow that we have hacked control of EIP, lets continue and watch how we have\nhijacked the operation of a running program to our advantage!\nTada! We have hacked the program!\nSo the question in your mind is why did you show me this when I have no idea of\nwhat any of this is? It is important to understand that when we are doing a lengthy\ntutorial such as this we should sometimes look forward to see why we are taking\nso many steps to learn the basics before we dive in. It is important however to\nshow you that if you stay with the tutorial your hard work will pay off as we will\nlearn how to hijack any running program to make it do whatever we want in\naddition to proactively breaking down a malicious program so that we can not only\ndisable it but trace it back to a potential IP of where the hack originated.\nIn our next tutorial we will continue our discussion of the IA-32 Architecture with\nthe Control Registers.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1048, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a76b0f8e-c40d-412c-a07c-fe5b0c2d2acf": {"__data__": {"id_": "a76b0f8e-c40d-412c-a07c-fe5b0c2d2acf", "embedding": null, "metadata": {"page_label": "34", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7bfc252e-c1bb-4d0c-b6a8-c5ab7f2fb6c5", "node_type": "4", "metadata": {"page_label": "34", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "240140b449309b5a529ecb84d5a467359b524e9cae7fa49cd271f6219be5fb7c", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n34Part 13: Control Registers\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nTheir are five control registers which are used to determine the operating mode of\nthe CPU and the characteristics of the current executing task. Each control\nregister is as follows:\nCR0: System flag that control the operating mode and various states of the\nprocessor.\nCR1: (Not Currently Implemented)\nCR2: Memory page fault information.\nCR3: Memory page directory information.\nCR4: Flags that enable processor feathers and indicate feature capabilities of the\nprocessor.\nThe values in each of the control registers can\u2019t be directly accessed however the\ndata in the control register can be moved to one of the general-purpose registers\nand once the data is in a GP register, a program can examine the bit flags in the\nregister to determine the operating status of the processor in conjunction with the\ncurrent running task.\nIf a change is required to a control register flag value, the change can be made to\nthe data in the GP register and the register moved to the CR. Low-level System\nProgrammers usually modify the values in control registers. Normal application\nprograms do not usually modify control register entries however they might query\nflag values to determine the capabilities of the host processor chip on which the\nprogram is currently running.\nIn our next tutorial we will continue our discussion of the IA-32 Architecture with\nthe topic of Flags.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1624, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "44397883-1c2f-41c7-bf67-2f611be57471": {"__data__": {"id_": "44397883-1c2f-41c7-bf67-2f611be57471", "embedding": null, "metadata": {"page_label": "35", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b2659654-65cc-4611-8aeb-f1a6533a5646", "node_type": "4", "metadata": {"page_label": "35", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "09e3fbc1b46c0a6b89c2e5a7438418ebc3b56a6ef509b0b8ffb9dc2769fe2578", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n35Part 14: Flags\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe topic of flags are one of the most extremely complex and complicated\nconcepts of assembly language and program flow control when reverse\nengineering. This information below will become much clearer as we enter into\nthe final phase of our training when we reverse engineer C applications into\nassembly language.\nWhat is important here is to take away the fact that flags help control, check and\nverify program execution and are a mechanism to determine whether each\noperation that is performed by the processor is successful or not.\nFlags are critical to assembly language applications as they are a check to verify\neach programs functions successful execution.\nWe are dealing with 32-bit assembly to which a single 32-bit register which\ncontains a group of status, control and system flags exist. This register is called\nthe EFLAGS register as it contains 32 bits of information that are mapped to\nrepresent specific flags of information.\nThere are three kinds of flags which are status flags, control flags and system\nflags.\nStatus flags are as follows:\nCF: Carry Flag\nPF: Parity Flag\nAF: Adjust Flag\nZF: Zero Flag\nSF: Sign Flag\nOF: Overflow Flag\nThe carry flag is set when a math operation on an unsigned integer value\ngenerates a carry or borrow for the most significant bit. This is an overflow\ncondition for the register involved in the math operation. When this occurs, the\nremaining data in the register is not the correct answer to the math operation.\nThe parity flag is used to indicate corrupt data as a result of a math operation in a\nregister. When checked, the parity flag is set if the total number of 1 bits in the\nresult is even and is cleared if the total number of 1 bits in the result is odd. When\nthe parity flag is checked, an application can determine whether the register has\nbeen corrupted since the operation.\nThe adjust flag is used in Binary Coded Decimal math operations and is set if a\ncarry or borrow operation occurs from bit 3 of the register used for the calculation.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2253, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8a97bc1d-9fdc-4db5-b01d-90fa72591203": {"__data__": {"id_": "8a97bc1d-9fdc-4db5-b01d-90fa72591203", "embedding": null, "metadata": {"page_label": "36", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a2a22528-4dbc-4f43-9858-c09203080aa5", "node_type": "4", "metadata": {"page_label": "36", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "266642cc961d5619e7fa71f7a4c9cce969fbf086c932051693aa49e4cbff7eb1", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n36The zero flag is set if the result of an operation is zero.\nThe sign flag is set to the most significant bit of the result which is the sign bit and\nindicates whether the result is positive or negative.\nThe overflow flag is used in signed integer arithmetic when a positive value is too\nbig or a negative value is too small to be represented in the register.\nControl flags are utilized to control specific behavior in the processor. The DF flag\nwhich is the direction flag is used to control the way strings are handled by the\nprocessor. When set, string instructions automatically decrement memory\naddresses to get the next byte in the string. When cleared, string instructions\nautomatically increment memory addresses to get the next byte in the string.\nSystem flags are used to control OS level operations which should NEVER be\nmodified by any respective program or application.\nTF: Trap Flag\nIF: Interrupt Enable Flag\nIOPL : I/O Privilege Level Flag\nNT: Nested Task Flag\nRF: Resume Flag\nVM: Virtual-8086 Mode Flag\nAC: Alignment Check Flag\nVIF: Virtual Interrupt Flag\nVIP: Virtual Interrupt Pending Flag\nID: Identification Flag\nThe trap flag is set to enable single-step mode and when in this mode the\nprocessor performs only one instruction code at a time, waiting for a signal to\nperform the next instruction. This is essential when debugging.\nThe interrupt enable flag controls how the processor responds to signals received\nfrom external sources.\nThe I/O privilege field indicates the input-output privilege level of the currently\nrunning task and defines access levels for the input-output address space which\nmust be less than or equal to the access level required to access the respective\naddress space. In the case where it is not less than or equal to the access level\nrequired, any request to access the address space will be denied.\nThe nested task flag controls whether the currently running task is linked to the\npreviously executed task and is used for chaining interrupted and called tasks.\nThe resume flag controls how the processor responds to exceptions when in\ndebugging mode.\nThe VM flag indicates that the processor is operating in virtual-8086 mode instead\nof protected or real mode.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2224, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c1fe164e-73fb-45d8-af12-c02646505cb4": {"__data__": {"id_": "c1fe164e-73fb-45d8-af12-c02646505cb4", "embedding": null, "metadata": {"page_label": "37", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bfa13395-a00a-42af-a3a9-4a6ac4ad29fb", "node_type": "4", "metadata": {"page_label": "37", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "4779c6d384be37940ca529fbf3efa68b68435e69dfcdde98258278bd69a80782", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n37The alignment check flag is used in conjunction with the AM bit in the CR0 control\nregister to enable alignment checking of memory references.\nThe virtual interrupt flag replicates the IF flag when the processor is operating in\nvirtual mode.\nThe virtual interrupt pending flag is used when the processor is operating in virtual\nmode to indicate that n interrupt is pending.\nThe ID flag indicates whether the processor supports the CPUID instruction.\nIn our next tutorial we will discuss the stack.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 513, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ab3099d4-6055-4997-962e-30a5f5e04973": {"__data__": {"id_": "ab3099d4-6055-4997-962e-30a5f5e04973", "embedding": null, "metadata": {"page_label": "38", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "64d838a8-b7cf-4a1f-8f0f-e82c15232721", "node_type": "4", "metadata": {"page_label": "38", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "6fd51c873bc9df008a319ebc317e6f5f553723504105e5237b3ab617d4510553", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n38Part 15: Stack\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nFunctions are the most fundamental feature in software development. A function\nallows you to organize code in a logical way to execute a specified task. It is not\ncritical that you understand how functions work at this stage it is only important\nthat you understand that when we start learning to develop, we want to minimize\nduplication by using functions that can be called multiple times rather than\nduplicate code taking up excessive memory.\nWhen a program starts to execute a certain contiguous section of memory is set\naside for the program called the stack.\nThe stack pointer is a register that contains the top of the stack. The stack pointer\ncontains the smallest address, lets say for example 0x00001000, such that any\naddress smaller than 0x00001000 is considered garbage and any address greater\nthan 0x00001000 is considered valid.\nThe above address is random and is not an absolute where you will find the stack\npointer from program to program as it will vary. Lets look at what the stack looks\nlike from an abstract perspective:\nThe above diagram is what I want you to keep clear in your mind as that is what is\nactually happening in memory. The next series of diagrams will show the opposite\nof what is shown above.\nYou will see the stack growing upward in the below diagrams however in reality it\nis growing downward from higher memory to lower memory.\nIn the addMe example below, the stack pointer (ESP), when examined in memory\non a breakpoint on the main function, lists 0xffffd050. When the program calls the\naddMe function from main, ESP is now 0xffffd030 which is LOWER in memory.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1851, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f4c2e3dd-30a9-4422-8800-56d33ae724b6": {"__data__": {"id_": "f4c2e3dd-30a9-4422-8800-56d33ae724b6", "embedding": null, "metadata": {"page_label": "39", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c994e818-ca4f-47f4-98ad-2a54038464ad", "node_type": "4", "metadata": {"page_label": "39", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "0c8d21d004daed2af5d2c48eb19c044fa0c55e43e468bc8a67d50b44c4a3e323", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n39Therefore the stack grows DOWNWARD despite the diagram showing it pointing\nupward. Just keep in mind when the arrows below are pointing upward they are\nactually pointing to lower memory addresses.\nThe stack bottom is the largest valid address of the stack and is located in the\nlarger address area or top of the memory model. This can be confusing as the\nstack bottom is higher in memory. The stack grows downward in memory and it is\ncritical that you understand that now as we go forward.\nThe stack limit is the smallest valid address of the stack. If the stack pointer gets\nsmaller than this, there is a stack overflow which can corrupt a program to allow\nan attacker to take control of a system. Malware attempts to take advantage of\nstack overflows. As of recent, there are protections build into modern OS that\nattempt to prevent this from happening.\nThere are two operations on the stack which are push and pop. You can push one\nor more registers by setting the stack pointer to a smaller value. This is usually\ndone by subtracting four times the number of registers to be pushed onto the\nstack and copying the registers to the stack.\nYou can pop one or more registers by copying the data from the stack to the\nregisters, then to add a value to the stack pointer. This is usually done by adding\nfour times the number of registers to be popped on the stack.\nLet us look at how the stack is used to implement functions. For each function call\nthere is a section of the stack reserved for the function. This is called the stack\nframe.\nLet\u2019s look at the C program we created in tutorial 12 and examine what the main\nfunction looks like:\nWe see two functions here. The first one is the unreachableFunction to which will\nnever execute under normal circumstances and we also see the main function\nthat will always be the first function to be called onto the stack.\nWhen we run this program, the stack will look like this:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1936, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "118240c4-f227-4624-9b48-ee2337453646": {"__data__": {"id_": "118240c4-f227-4624-9b48-ee2337453646", "embedding": null, "metadata": {"page_label": "40", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "de0b5dfb-228e-4e63-a50d-e8376e7ebe80", "node_type": "4", "metadata": {"page_label": "40", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "30b165b3530479b3a8cb18474a04a3e7b97c62aa600135011755972ebd00fd34", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n40\nWe can see the stack frame for int main(void) above. It is also referred to as the\nactivation record. A stack frame exists whenever a function has started but yet to\ncomplete. For example, inside of the body of the int main(void) there is a call to int\naddMe(int a, int b) which takes two arguments a and b. There needs to be\nassembly language code in int main(void) to push the arguments for int addMe(int\na, int b) onto the stack. Lets examine some code.\nWhen we compile and run this program we will see the value of 5 to be print out\nlike this:\nVery simply, int main(void) calls int addMe(int a, int b) first and will get put on the\nstack like this:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 669, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "96d70b8f-ffdd-4de2-9bf6-60d091228da0": {"__data__": {"id_": "96d70b8f-ffdd-4de2-9bf6-60d091228da0", "embedding": null, "metadata": {"page_label": "41", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a4b188db-7135-4fb1-a1ef-014ea6ce0e9d", "node_type": "4", "metadata": {"page_label": "41", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "fc9186649c1ece90990254766642de055b722059f3223ff1ed74297165d2bb7f", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n41\nYou can see that by placing the arguments on the stack, the stack frame for int\nmain(void)  has increased in size. We also reserved space for the return value\nwhich is computed by int addMe(int a, int b)  and when the function returns, the\nreturn value in int main(void)  gets restored and execution continues in int\nmain(void)  until it finishes.\nOnce we get the instructions for int addMe(int a, int b) , the function may need\nlocal variables so the function needs to push some space on the stack which\nwould look like:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 538, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0cc913a0-a351-4b5c-840c-f33a0ff93e7e": {"__data__": {"id_": "0cc913a0-a351-4b5c-840c-f33a0ff93e7e", "embedding": null, "metadata": {"page_label": "42", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f9fa1a91-2aa1-4e61-844c-d539917435f0", "node_type": "4", "metadata": {"page_label": "42", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "e83a09548fb980691e658ff7f2cac517f13e205672d5f73d70084cfc9724b2c4", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n42\nint addMe(int a, int b)  can access the arguments passed to it from int\nmain(void)  because the code in int main(void)  places the arguments just as int\naddMe(int a, int b)  expects it. \nFP is the frame pointer and points to the location where the stack pointer was just\nbefore int addMe(int a, int b)  moved the stack pointer or SP for int addMe(int a,\nint b) \u2019s own local variables.\nThe use of a frame pointer is essential when a function is likely to move the stack\npointer several times throughout the course of running the function. The idea is to\nkeep the frame pointer fixed for the duration of int addMe(int a, int b) \u2019s stack\nframe. In the meantime, the stack pointer can change values.\nWe can use the frame pointer to compute the locations in memory for both\narguments as well as local variables. Since it does not move, the computations for\nthose locations should be some fixed offset from the frame pointer.\nOnce it is time to exit int addMe(int a, int b) , the stack pointer is set to where the\nframe pointer is which pops off the int addMe(int a, int b)  stack frame.\nIn sum, the stack is a special region of memory that stores temporary variables\ncreated by each function including main. The stack is a LIFO which is last in, first\nout data structure which is managed and optimized by the CPU closely. Every\ntime a function declares a new variable it is pushed onto the stack. Every time a\nfunction exists, all of the variables pushed onto the stack by that function are\nfreed or deleted. Once a stack variable is freed, that region of memory becomes\navailable for other stack variables.\nThe advantage of the stack to store variables is that memory is managed for you.\nYou do not have to allocate memory manually or free it manually. The CPU\nmanages and organizes stack memory very efficiently and is very fast.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1843, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "79ccab93-907e-41b1-8c07-e75eb4c99c13": {"__data__": {"id_": "79ccab93-907e-41b1-8c07-e75eb4c99c13", "embedding": null, "metadata": {"page_label": "43", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fcef21a1-dcaa-4722-90e3-a4ddee8bbb1b", "node_type": "4", "metadata": {"page_label": "43", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "0f7b67b48f66118198da01ba6a88fade8a6e7029360a56dc3da240d10879355d", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n43It is critical that you understand that when a function exits, all of its variables are\npopped off the stack and lost forever. The stack variables are local. The stack\ngrows and shrinks as functions push and pop local variables.\nI can see your head spinning around and around. Keep in mind, these topics are\ncomplicated and will continue to develop in future tutorials. We have been dealing\nwith a lot of confusing topics such as registers, memory and now the stack and it\ncan be overwhelming. If you ever have questions, please comment below and I\nwill help you to better understand this framework.\nIn our next tutorial we will discuss the heap.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 662, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ba628844-ba39-406c-be8e-7fd9061f7d47": {"__data__": {"id_": "ba628844-ba39-406c-be8e-7fd9061f7d47", "embedding": null, "metadata": {"page_label": "44", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "12550949-ac4c-42ce-bb79-7f8f05bc1b52", "node_type": "4", "metadata": {"page_label": "44", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "79ed10d5e6cb67f58cb10be716920521b2dbc98a80dbec56306260ccbdd873d1", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n44Part 16: Heap\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nOur next step in the Basic Malware Reverse Engineering section focuses on the\nheap. Keep in mind, the stack grows downward and the heap grows upward. It is\nvery, very important that you understand this concept as we progress forward in\nour future tutorials.\nThe heap is the region of your computer's memory that is not managed\nautomatically for you, and is not as tightly managed by the CPU. It is free-floating\nregion of memory and is larger than the stack allocation of memory.\nTo allocate memory on the heap, you must use malloc()  or calloc() , which are\nbuilt-in C functions. Once you have allocated memory on the heap, you are\nresponsible for freeing it by using free()  to de-allocate that memory once you\ndon't need it any more.\nIf you don\u2019t do this step, your program will have what is known as a memory leak.\nThat is, memory on the heap will still be set aside and won't be available to other\nprocesses that need it.\nUnlike the stack, the heap does not have size restrictions on variable size. The\nonly thing that would limit the heap is the physical limitations of your computer.\nHeap memory is slightly slower to be read from and written to, because you have\nto to use pointers to access memory on the heap. When we dive into our C\ntutorial series we will demonstrate this.\nUnlike the stack, variables created on the heap are accessible by any function,\nanywhere in your program. Heap variables are essentially global in scope.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1687, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1b8b2395-ecc7-46e4-9aa3-dbdef359b0dd": {"__data__": {"id_": "1b8b2395-ecc7-46e4-9aa3-dbdef359b0dd", "embedding": null, "metadata": {"page_label": "45", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a02f4137-5276-4d59-a18e-0df1501011c1", "node_type": "4", "metadata": {"page_label": "45", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "aa373b7213b9aec54dd07c8098dd20ef5b0c2d723c37bf3743287ba41fdcfe9a", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n45If you need to allocate a large block of memory for something like a struct or a\nlarge array and you need to keep that variable around for a good duration of the\nprogram to which must be accessed globally, then you should choose the heap\nfor this purpose. If you need variables like arrays and structs that can change size\ndynamically such as arrays that can grow or shrink as needed, then you will likely\nneed to allocate them on the heap, and use dynamic memory allocation functions\nlike malloc() , calloc() , realloc()  and free()  to manage that memory manually.\nThe next step is to dive into programming C in the Linux environment where we\nstep-by-step disassemble each C program so in effect you will be learning both C\nprogramming and Assembly so that you can progress your skills in Malware\nAnalysis and Reverse Engineering.\nI look forward to seeing you all next week when we take a comprehensive step-\nby-step tutorial on how to install Linux on your current computer using the FREE\nVirtual Box software tool.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1034, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "48e1d7d7-fa5a-40be-a99c-1b5d52a8aeb9": {"__data__": {"id_": "48e1d7d7-fa5a-40be-a99c-1b5d52a8aeb9", "embedding": null, "metadata": {"page_label": "46", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "80a9a333-b89a-4465-8dfc-9be0ef02a7a1", "node_type": "4", "metadata": {"page_label": "46", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "03b2333fea28faa8d69344aada436f16f191f5625bb18e2ad89d137f693247c3", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n46Part 17 \u2013 How To Install Linux\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nIf you do not have Linux installed on a computer within your household, I would\nsuggest installing Virtual Box which is an open-source free virtual environment\nwhich you can install on your existing computer to have a version of Linux you\ncan program with. Below is a link to download and install Virtual Box as there are\nversions for both Windows and Mac.\nhttps://www.virtualbox.org/wiki/Downloads  \nIn addition, you will need a copy of Linux to which I will be working with Ubuntu.\nBelow is a link to download the .iso file to which you will install once you have\nVirtual Box installed.\nhttp://www.ubuntu.com/download/desktop  \nAfter you download the above .iso, go to your Download  directory and first\nexecute and run the VirtualBox-5.0.24-108355-Win.exe  or whatever version of\nVirtualBox that is currently available. If you are running a Mac, you will download\nthe .dmg  file. Simply double-click on the file to execute and run it.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1202, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8e705404-b2eb-48b4-975f-b19264c2ecce": {"__data__": {"id_": "8e705404-b2eb-48b4-975f-b19264c2ecce", "embedding": null, "metadata": {"page_label": "47", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "85035baf-8b1b-4672-8800-8c10264402d2", "node_type": "4", "metadata": {"page_label": "47", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "c1476d500adfa120273cda31e890ea518b76849bcf215f0a08fe745332886c70", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n47After you install VirtualBox-5.0.24-108355-Win.exe  or the Mac .dmg  file and you\nwill see this screen:\nClick on the New button above which is located in the top-left corner of the screen\nas it is a big blue cog-looking circle.\nIn the name field above, type Ubuntu and click the next button.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 307, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7a0c7dae-788d-4014-9b30-1b49bae73f49": {"__data__": {"id_": "7a0c7dae-788d-4014-9b30-1b49bae73f49", "embedding": null, "metadata": {"page_label": "48", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d5821e24-e683-46de-bbed-0d62b83a96c4", "node_type": "4", "metadata": {"page_label": "48", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "5481358153970e2ffd57bacf61c443bd3170e54481998b0c7221f0bb86cf24df", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n48\nIt is important to click on the blue slider bar above and select an amount of ram\nthat points to an area in green so that it does not overwhelm your computer\nresources. After moving the blue slider, click next.\nThen click create.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 246, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "607d9d80-6a10-49c8-88ec-a5c9301dcc05": {"__data__": {"id_": "607d9d80-6a10-49c8-88ec-a5c9301dcc05", "embedding": null, "metadata": {"page_label": "49", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3d92b984-6ce9-442e-8103-29d07961e070", "node_type": "4", "metadata": {"page_label": "49", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "25ec167d5ec7a35e006d596dea24d107855cc5662e3475e13d2856f199aa5fe2", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n49\nThen click next.\nThen click next.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 50, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0df592a0-ddf3-40de-b519-1f1d4e38bc33": {"__data__": {"id_": "0df592a0-ddf3-40de-b519-1f1d4e38bc33", "embedding": null, "metadata": {"page_label": "50", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fe211cd5-efb3-4da2-9f7d-0f6fb2bddbb3", "node_type": "4", "metadata": {"page_label": "50", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "52cc3a2e7aed3eeb9e7b12d1f2b387cfefccc7e950ee1a41feb75a3bfd77f2c3", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n50\nPlease move the dial up to 16.00 GB rather than 8.00 GB shown above then click\ncreate.\nThe next step is to click on the green start button.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 156, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6c6ac246-2bd7-48d9-aaa0-9d5193f0849d": {"__data__": {"id_": "6c6ac246-2bd7-48d9-aaa0-9d5193f0849d", "embedding": null, "metadata": {"page_label": "51", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "15e07a6f-76ce-4a82-a786-391cdcd35aca", "node_type": "4", "metadata": {"page_label": "51", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "0fa46d1f336b061ccd9d527ca523163f19b6406eed9db260c920dd485c4feea4", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n51\nThe next step is to click on the yellow folder just above the cancel button.\nThe next step is to click on the .iso file that should be in your Download directory\nand click open.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 194, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a7cc8f80-4465-44cb-a8a6-26bcec37d21b": {"__data__": {"id_": "a7cc8f80-4465-44cb-a8a6-26bcec37d21b", "embedding": null, "metadata": {"page_label": "52", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d24a6ab2-d4d3-4d4f-9f7e-3815a774efe7", "node_type": "4", "metadata": {"page_label": "52", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "a06c1b11e7d0b87e84f4967d1daacb6d73f3e76caca35f1ac3a573450f0f6be8", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n52\nThe next step is to click start.\nThe next step is to let the install begin and click Install Ubuntu.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 117, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9911fba8-efa1-47c8-b4d9-5bce638a893c": {"__data__": {"id_": "9911fba8-efa1-47c8-b4d9-5bce638a893c", "embedding": null, "metadata": {"page_label": "53", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "76791d80-104e-4b3e-b88e-43f72c9a3d4f", "node_type": "4", "metadata": {"page_label": "53", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "2388948238f9dbf8bb548f181693b60f9ab4d6cb9b982eaaead70c4cd85e8b6c", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n53\nThe next step is to check each of the boxes to Download updates while installing\nUbuntu and click continue.\nThe next step is to select Erase disk and install Ubuntu and click install now.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 204, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a9e9c499-f358-41bd-b5b1-ecfa0e46c947": {"__data__": {"id_": "a9e9c499-f358-41bd-b5b1-ecfa0e46c947", "embedding": null, "metadata": {"page_label": "54", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "475c5733-9751-4f43-92a0-91a7ae894dc6", "node_type": "4", "metadata": {"page_label": "54", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "e6f033dfb84e6936540fa714afe2343d64a4cd95b312d6cb91083e660a64d66d", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n54\nThe next step is to click continue and progress forward to the screen where you\nwill select your timezone to which you will select continue.\nThe next step is to select your keyboard layout and click continue.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 225, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8f7d22d0-5b77-4d08-9ec6-c22b36fc8bdc": {"__data__": {"id_": "8f7d22d0-5b77-4d08-9ec6-c22b36fc8bdc", "embedding": null, "metadata": {"page_label": "55", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d3e7b6a9-d0d2-4dd7-832e-c85eb9e7fb15", "node_type": "4", "metadata": {"page_label": "55", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "e47ba89168e31389e6cc737625ca4358ade37aef22f14426243fca4a612b1412", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n55\nThe next step is to create a name for your account. I chose noroot and did the\nsame for the username. In addition, create a password and re-type it for\nverification and click continue.\nAt this point it will take some time to install the operating system. When the\nprocess is finished, click restart now. If the window locks up, click Power Off The\nMachine and click close or next.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 397, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6426cfc1-92a0-4ad0-9015-862a708c3c38": {"__data__": {"id_": "6426cfc1-92a0-4ad0-9015-862a708c3c38", "embedding": null, "metadata": {"page_label": "56", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f3f2f7f5-a985-42d4-9da9-74e9927a22e9", "node_type": "4", "metadata": {"page_label": "56", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "ab8e0c0e0da217f06b29263403786c1dcbc4e526cfce1234a638b2a2c56d4a26", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n56\nAt this point, click on the green start button.\nEnter in your password that you created earlier and click enter on your\nkeyboard. You can click on the blue x buttons in the top right corner as they are\njust some information you can close out.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 259, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dcd14d43-3842-412d-85d4-d6ca572fbf13": {"__data__": {"id_": "dcd14d43-3842-412d-85d4-d6ca572fbf13", "embedding": null, "metadata": {"page_label": "57", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9630eb62-79c6-48b9-8bb5-15be162219bd", "node_type": "4", "metadata": {"page_label": "57", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "4f764df35963b8ad5100091c427b9238573f9a109b0ed23d719f004522e39b79", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n57\nCongratulations! You have a working version of Linux! \nClick on the top left icon and type terminal and double-click on the first Terminal\nicon with the >_ in the window.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 187, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "846100de-d9c0-42e9-91db-65a12e154817": {"__data__": {"id_": "846100de-d9c0-42e9-91db-65a12e154817", "embedding": null, "metadata": {"page_label": "58", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e2d027f1-fd33-4c82-85cb-83c6879815aa", "node_type": "4", "metadata": {"page_label": "58", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "579642e80a9c872a05642077447b7dec7802ea5759345451da241d81f5a350a9", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n58\nYou will see a Terminal icon at the bottom left of your screen. Right-click on it and\nselect Lock to Launcher so that it will be available for you once you close the\nwindow.\nIn the terminal window type cd Desktop and press Enter. Then type mkdir Code\nand press enter. The first command moves you into the Desktop directory and the\nmkdir command creates a folder on the Desktop called Code so that we have a\nplace to store our software applications that we create.\nIt is important you keep your version of Linux up to date. Every time you login, you\nshould type the following commands. First, sudo apt-get update and press enter.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 645, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f90bf45e-4ecd-42b2-baad-c1c0e5b2a09d": {"__data__": {"id_": "f90bf45e-4ecd-42b2-baad-c1c0e5b2a09d", "embedding": null, "metadata": {"page_label": "59", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a3b6dc73-ec0d-40b8-a9e1-9e1d1273c484", "node_type": "4", "metadata": {"page_label": "59", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "e66274eeb7151915b6472fee3b2ff1473ef46259317c9797329cf2d593e5ba51", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n59\nNext you should then type sudo apt-get upgrade and press enter.\nIn order to work with 32-bit Assembly examination, we need to install the gcc\nmultilib package so that we can compile 32-bit versions of C code for\nexamination. Type sudo apt-get install gcc-multilib and press enter.\n    \nFinally click on Devices  and click Insert Guest Additions CD Image\u2026  in order\nto get a better working functionality out of your VM.\nThis has been a very long tutorial however necessary to get you a working copy\nof Linux so that we can continue with our future tutorials.\nI look forward to seeing you all next week when we learn how to use the vim text\neditor to begin coding!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 679, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "987df782-0a57-4f40-b0a7-138867f46a32": {"__data__": {"id_": "987df782-0a57-4f40-b0a7-138867f46a32", "embedding": null, "metadata": {"page_label": "60", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7e24d7b4-32f7-4197-86c9-ba086166570f", "node_type": "4", "metadata": {"page_label": "60", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "601def9b26f9a4682894ce542d0ceb0ec67a6a0954735c752ea8dabf7d113b40", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n60Part 18 - vim Text Editor\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nNow that we have a working version of Linux, we need a text editor that we can\nwork with in the terminal.\nTo begin, open your terminal and type:\nThis will open up the vi text editor. The first thing you need to type is the letter \u2018i\u2019 to\nset the editor to insert mode so you may begin typing.\n  \nAfter you a done typing, press the \u2018 esc\u2019 key and type \u2018 :wq\u2019 and press enter.\nCongratulations! You created your first file! This is a one time file that we need to\ncreate in order to use our text editor they way we want it to perform.\nThe first line states set number  which means we would like each file to show line\nnumbers as this is essential for debugging code. The  set smartindent , set\ntabstop , set shiftwidth  and set expandtab  statements set forth rules to properly\nformat code and allow 4 spaces per tab indent which will help our code to look\nclean.\nThere are several commands you need to be aware of. Keep in mind, to go into\ncommand mode rather than insert mode you must press the \u2018 esc\u2019 key. Below are\nthe most common commands:\nj or down-arrow [move cursor down one line]\nk or up-arrow [move cursor up one line]\nh or left-arrow [move cursor left one character]\nl or right-arrow [move cursor right one character]\n0 [move cursor to the start of the current line]\n$ [move cursor to the end of the current line]\nb [move cursor back to the beginning of preceding word]\ndd [deletes the line the cursor is on]\nD [deletes from the cursor position to the end of the line]\nyy [copies the current line]", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1764, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "23b8fdb9-b363-449b-b4c0-d37a0c3d46d0": {"__data__": {"id_": "23b8fdb9-b363-449b-b4c0-d37a0c3d46d0", "embedding": null, "metadata": {"page_label": "61", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0724a354-5728-48bb-a759-169f878009e4", "node_type": "4", "metadata": {"page_label": "61", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "80e8aa1b403c86e603795cfc63e7330055392135a7784f5a23890b25b792f147", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n61p [puts the copied text after the cursor]\nu [undo the last change to the file]\n:w [save file]\n:wq [save file and exit text editor]\n:q! [quit text editor and do not save any changes]\nYou will be consistently moving between command mode \u2018 esc\u2019 and insert mode\n\u2018i\u2019. Remember that when you want to insert characters you need to be in insert\nmode and when you want to move the cursor other than moving to the next line,\nyou need to be in command mode.\nNow that we have vi configured, lets install vim which has some better\nfunctionality. Simply type:\nOnce that is installed instead of using vi we will now use vim.\nI look forward to seeing you all next week when we talk about why it\u2019s important to\nlearn Assembly Language.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 734, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2a45bb47-809d-43d4-95e5-a7c97940cbc1": {"__data__": {"id_": "2a45bb47-809d-43d4-95e5-a7c97940cbc1", "embedding": null, "metadata": {"page_label": "62", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c30adaba-c97d-4148-a9e8-b1101b9bce4a", "node_type": "4", "metadata": {"page_label": "62", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "4503e7b991f05ae82062ef3ec25c320d53002861dd6c51d4b1619c4a0217b7bc", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n62Part 19 - Why Learn Assembly\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nWhy learn Assembly Language? Java is the most in-demand programming\nlanguage and will get me a job immediately so why in the hell would I ever waste\nmy damn time learning this archaic Assembly Language crap?\nSo many people ask me this question and it is true, Java is HOT and in the\ngreatest demand and there is nothing wrong with learning Java however the\nthreats that face society more than anything in this world, above everything else,\nis the Cyber Security threat. With that said, Java offers a great career path and I\nwould encourage you to learn it however Java is not the only game in town.\nMost malware is written in higher-level languages however most malware authors\ndo not give the attackers their source code so they can properly deal with their\ncrafted attack.\nThe hackers use a multitude of high-level languages and the demand for new\nprofessional Malware Analyst Reverse Engineers continue to grow daily.\nWhen we examine malware, more than not we get only a compiled binary. The\nonly thing we can do with a compiled binary is to break it down, instruction-by-\ninstruction, in Assembly Language as EVERYTHING ultimately goes down to\nAssembly Language.\nWhen someone says Assembly Language is a dinosaur I say to those people, lets\nhave that conversation when your entire network is brought to its knees and you\ncan\u2019t login to a single terminal or manipulate a single machine on your network.\nLets talk about how useless Assembly Language is at that time.\nUnderstanding Assembly Language allows one to open a debugger on an a\nrunning process. Each running program has a PID to which is a numerical value\nwhich designates a running program. If we open a running process or any bit of\nmalware with a professional or open-source tool like GDB, we can see EXACTLY\nwhat is going on and then grab the EIP instruction pointer to go where we need it\nto go to have COMPLETE control over program flow.\nMost malware is written, as I have stated, in a middle-level language and once\ncompiled it can be read by the hardware or OS as it is not human-readable. In\norder for professional Cyber Security Engineers to understand this, they must\nlearn to read, write and properly debug Assembly.\nAssembly Language is low-level and has many more instructions than you would\nsee in a higher-level application.\nThe prior 18 lessons in this tutorial series gave you the basics of x86 hardware.\nAs I have stated in prior tutorials, we will focus on 32-bit Assembly debugging as\nmost malware is going to try to affect as many systems as possible and although", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2809, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bbad10e5-c686-47d1-af1c-3ff16753d2d5": {"__data__": {"id_": "bbad10e5-c686-47d1-af1c-3ff16753d2d5", "embedding": null, "metadata": {"page_label": "63", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3726601a-20a3-4c24-8c47-c3aaf89126a2", "node_type": "4", "metadata": {"page_label": "63", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "76f6e3ce5f11fb116e5ff962cdca36d6f5ded58dd4706a9eff12e2a4dd5682fa", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n63there is 64-bit malware, 32-bit malware is significantly more destructive and\ndangerous and will be the focus of this series.\nI look forward to seeing you all next week when we learn the basics of instruction\ncode handling.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 239, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "394597a3-8c5d-461d-b7ee-9bcb622d6e87": {"__data__": {"id_": "394597a3-8c5d-461d-b7ee-9bcb622d6e87", "embedding": null, "metadata": {"page_label": "64", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "101c693a-69b1-4fba-b21c-547b7dd76bb7", "node_type": "4", "metadata": {"page_label": "64", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "03ac371c3bdb23e410e8a4d586a734bf458a84d64eb969f356329edffca5fec2", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n64Part 20 - Instruction Code Handling\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nA CPU reads instruction codes that are stored in memory as each code set can\ncontain one of more bytes of information that guide the processor to perform a\nvery specific task. As each instruction code is read in from memory, any data\nneeded for the instruction code is also stored and read into memory.\nKeep in mind, memory that contain instruction codes are no different than the\nbytes that contain the data used by the CPU and special pointers are used to help\nthe CPU keep track of where in memory data is and where instruction codes are\nstored.\nA data pointer helps the CPU keep track of where the data area in memory starts\nwhich is the stack. When new data elements are placed in the stack, the stack\npointer moves down in memory and as data is read from the stack the stack\npointer moves up in memory. Please review Part 15 \u2013 Stack if you don\u2019t\nunderstand this concept.\nThe instruction pointer is used to help the CPU keep track of which instruction\ncodes have already been processed and what code is to be processed next.\nPlease review Part 12 \u2013 Instruction Pointer Register if you don\u2019t understand this\nconcept.\nEach and every instruction code must include an opcode that defines the basic\nfunction or task to be performed by the CPU to which opcodes are between 1 and\n3 bytes in length and uniquely defines the function that is performed.\nLets examine a simple C program called test.c to get started.\nAll we are doing is creating a main function of type integer to which it has a void\nparameter and returning 0. All this program does is simply exit the OS.\nLets compile and run this program.\nLets use the objdump tool to and find the main function within it.\nHere is a snippet of the results you would get by running the above\ncommand. Here are the contents of the main function. Keep in mind the below is\nin Intel syntax as we spoke about in the last tutorial.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2141, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3fc9f901-2271-4aee-82a5-8a90c0a0abc3": {"__data__": {"id_": "3fc9f901-2271-4aee-82a5-8a90c0a0abc3", "embedding": null, "metadata": {"page_label": "65", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4269736c-1840-4f18-8b53-310760cee6b1", "node_type": "4", "metadata": {"page_label": "65", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "92c82b5c90bf03c1dd2d7b3bd8866095e2bdbc87d4c159b5cbe4ac3f699e94c9", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n65\nOn the far left we have the corresponding memory addresses. In the center we\nhave the opcodes and finally on the right we have the corresponding assembly\nlanguage in Intel syntax.\nTo keep this simple, lets examine memory address 80483de  where we see op\ncodes b8 00 00 00 00 . We can see that the b8 opcode corresponds with the mov\neax, 0x0  instruction on the right. The next series of 00 00 00 00 represents 4\nbytes of the value 0. We see mov eax, 0x0  therefore the value of 0 is moved into\neax therefore representing the above code. Keep in mind, the IA-32 platform uses\nwhat we call little-endian notation which means the lower-value bytes appear first\nin order when reading right to left.\nI want to make sure you have this straight in your head so lets pretend the value\nabove was:\nmov eax, 0x1\nIn this scenario the corresponding opcode would be:\nb8 01 00 00 00\nIf you are confused it is ok. Remember little-endian? Keep in mind eax is 32-bits\nwide therefore that is 4 bytes (8 bits = 1 byte). The values are listed in reverse\norder therefore we see the above representation.\nI look forward to seeing you all next week when we dive into the details about how\nto compile a program.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1203, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "74a6b321-a89b-4d7f-873c-6b1ca0028747": {"__data__": {"id_": "74a6b321-a89b-4d7f-873c-6b1ca0028747", "embedding": null, "metadata": {"page_label": "66", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a775120d-6d5c-4840-93c8-233dd4c200d3", "node_type": "4", "metadata": {"page_label": "66", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "7aa13f5d71a6e6b277411ea73b4cabd39dfee291c4a56a2480f1cd13f7f3d4b9", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n66Part 21 - How To Compile A Program\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s look again at last weeks C program and take a deeper look at how we turn\nthat source code into an executable file.\nTo compile this program in C, we simply type:\nThis single step will create exit.o  which is the binary object file and exit which is\nthe binary executable file.\nIf we wanted to convert this C source code to Assembly, we need to use the GNU\ncompiler in the below fashion. Lets start by running the below command in the\nterminal:\nLet\u2019s begin with the -S switch. The -S switch will create comparable AT&T Syntax\nAssembly source code. The -m32 will create a 32-bit executable and the -O0 will\ntell the compiler how much optimization to use when compiling the binary. That is\nthe capital O and the numeric 0. Numeric 0 in that case means no optimization\nwhich means it is at the most human readable instruction set. If you were to\nsubstitute a 1, 2 or 3 the amount of optimization increases as the values go up.\nThis step above creates exit.s which is the equivalent Assembly Language source\ncode as we mentioned above.\nWe then need to compile the Assembly source code into a binary object file which\nwill generate a exit.o  file.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1415, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "41dceb47-e5dc-4708-9e38-fc0cc57442c0": {"__data__": {"id_": "41dceb47-e5dc-4708-9e38-fc0cc57442c0", "embedding": null, "metadata": {"page_label": "67", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f09eb3ae-9c33-4334-b5c3-bdbe13d1e39e", "node_type": "4", "metadata": {"page_label": "67", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "0c3d2921ebd943b346c19ec5aa10a82658dc0537cab56cc56e9c98f38cd7193f", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n67Finally we need to use a linker to create the actual binary executable code from\nthe binary object file which will create an executable called exit. \nLast week when we examined the executable file exit in a program called\nobjdump, and examined the main area we saw the following below except this\ntime we will use AT&T Assembly Language Syntax:\nThis command above will create the following output below:\nLets examine the code in the debugger. Let\u2019s start GDB which is the GNU\ndebugger and first list the source code by typing l, then set a breakpoint on main\nand run the program. Finally we will disassemble and review the output below:\nIn each of the three above examinations, you will essentially see the same set of\ninstructions which we will take a deeper look as to what is exactly going on in\nfuture tutorials.\nThroughout this tutorial series thus far we have been looking at Intel Syntax\nAssembly Language. We are going to turn our focus to AT&T Syntax as I have\nstated above as this is the natural syntax utilized in Linux with the GNU\nAssembler and GNU Debugger.\nThe biggest different you will see is that in AT&T Syntax, the source and\ndestinations are reversed.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1188, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "da144610-953f-4987-93be-6f56b3ff188b": {"__data__": {"id_": "da144610-953f-4987-93be-6f56b3ff188b", "embedding": null, "metadata": {"page_label": "68", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2e49e39e-938b-4644-ba88-fb61fd7124d1", "node_type": "4", "metadata": {"page_label": "68", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "c9cd4419553e5ef5ac4d19bc1a44ef1902bdfdf1093dbc7ee558bd340cd331a1", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n68AT&T Syntax : movl %esp, %ebp  [This means move esp into ebp.]\nIntel Syntax : mov esp, ebp  [This means move ebp into esp.]\nYou will also see some additional variances as AT&T uses additional variances\nwhich we will cover in a later tutorial.\nIf we wanted to create a pure Assembly Code program which does the same thing\nabove we would type:\nTo compile this we would use the GAS Assembler and Linker:\nTo run any executable in Linux you type ./ and the name of the binary executable.\nIn this case we type ./exit and press return. When we do so, nothing happens.\nThat is good as all we did was create a program that exited to the OS.\nI look forward to seeing you all next week when we dive into more assembly code!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 728, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bc36ddd3-7f23-4a1d-b74b-f1357665438d": {"__data__": {"id_": "bc36ddd3-7f23-4a1d-b74b-f1357665438d", "embedding": null, "metadata": {"page_label": "69", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2fb68b04-51f1-46f4-bee8-938751b073b8", "node_type": "4", "metadata": {"page_label": "69", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "3057f7ac15fa762924f25ef12854bbd9451e36177d36d0ed89ae3c7cf31240fa", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n69Part 22 - ASM Program 1 [Moving\nImmediate Data]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nI appreciate everyone being patient as it has taken 21 lessons to get to our first\nASM program however very necessary background had to be covered in order to\nfully understand where we begin when developing assembly language.\nWe are going to create 32-bit assembly programs as most malware is written in\n32-bit mode in order to attack the maximum amount of systems possible. Keep in\nmind even though most of us ALL have 64-bit operating systems, 32-bit programs\ncan run on them.\nFor the most part we have been working with Intel syntax when it comes to\nassembly however I am going to focus on the native AT&T syntax going forward.\nIt is very easy to convert back and forth between Intel and AT&T syntax as I have\ndemonstrated in prior tutorials.\nEvery assembly language program is divided into three sections:\n1)Data Section : This section is used for declaring initialized data or constants as\nthis data does not ever change at runtime. You can declare constant values,\nbuffer sizes, file names, etc.\n2)BSS Section : This section is used for declaring uninitialized data or variables.\n3)Text Section : This section is used for the actual code sections as it begins with\na global _start which tells the kernel where execution begins.\nCritical to any development is the use of comments. In the AT&T syntax we use\nuse the # symbol to declare a comment as any data after that symbol on a\nrespective line will be ignored by the compiler.\nKeep in mind, assembly language statements are entered in one statement per\nline as you do not have to end the line with a semicolon like many other\nlanguages. The structure of a statement is as follows:\n[label] mnemonic [operands] [comment]\nA basic instruction has two parts of which the first one is the name of the\ninstruction or the mnemonic which is executed and the second part is the\noperands or parameters of the command.\nOur first program will demonstrate how to move immediate data to a register and\nimmediate data to memory.\nLets open VIM and create a program called moving_immediate_data.s  and type\nthe following:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2342, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3cbb3af7-3550-4f2e-8bf3-78767087cac7": {"__data__": {"id_": "3cbb3af7-3550-4f2e-8bf3-78767087cac7", "embedding": null, "metadata": {"page_label": "70", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a952f3fc-9807-487c-9929-80b4fec76371", "node_type": "4", "metadata": {"page_label": "70", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "2414315d4f406c74b7bca927506518f8f8e31cbd160a4a5ce2a4c5bf59eb74f4", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n70\nTo compile you type:\nas \u201332 -o moving_immediate_data.o moving_immediate_data.s\nld -m elf_i386 -o moving_immediate_data moving_immediate_data.o\nTo run you type:\n./moving_immediate_data\nI would like to show you what it would look like in Intel syntax as well. Before we\nexamine this part you will need to type sudo apt-get install nasm  in a command\nprompt which will install the Netwide Assembler:\nTo compile you type:\nnasm -f elf32 moving_immediate_data.asm\nld -m elf_i386 -o moving_immediate_data moving_immediate_data.o\nTo run you type:\n./moving_immediate_data\nOk what the heck! There is no output! That is correct and you did not do anything\nwrong. Many of our programs will not actually do anything as they are not much\nmore than sandbox programs that we will use in GDB for analysis and\nmanipulation.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 822, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "27f54f9c-a696-4e39-a095-7d36fdc00d32": {"__data__": {"id_": "27f54f9c-a696-4e39-a095-7d36fdc00d32", "embedding": null, "metadata": {"page_label": "71", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "12067c2a-41b2-4052-a23c-2887c79868a2", "node_type": "4", "metadata": {"page_label": "71", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "6418a616cc05f4a44adfad07c744606bf9e70e3bf81b6f232a76f4a46a53299e", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n71Next week we will dive into the GNU GDB debugger and see what is going on\nunder the hood.\nI want to take some time and discuss the code at line 20 \u2013 22 in the AT&T version\nand the Intel Syntax version as well. This set of instructions takes advantage of\nwhat we call a software interrupt. On line 20 in the AT&T Syntax, we movl $1,\n%eax  meaning we move the decimal value of 1 into eax which specifies the\nsys_exit call which will properly terminate program execution back to Linux so that\nthere is no segmentation fault. On line 21, we movl $0, %ebx  which moves 0 into\nebx to show that the program successfully executed and finally we see int $0x80 .\nLine 20 and 21 set up the software interrupt which we call on line 22 with the\ninstruction int $0x80.  Let\u2019s dive into this a little deeper.\nIn Linux, there are two distinct areas of memory. At the very bottom of memory in\nany program execution we have the Kernel Space which is made up of the\nDispatcher section and the Vector Table.\nAt the very top of memory in any program execution we have the User Space\nwhich is made up of The Stack, The Heap and finally your code all of which can\nbe illustrated in the below diagram:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1193, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2e3a2487-39a8-4a9d-80b7-c4be5ef21053": {"__data__": {"id_": "2e3a2487-39a8-4a9d-80b7-c4be5ef21053", "embedding": null, "metadata": {"page_label": "72", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f8ba6383-80a8-41d5-944c-9eeda070e320", "node_type": "4", "metadata": {"page_label": "72", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "175d9dabc8a8154369e9a26f03339f4ff401ac20df3c84911cd46a355e8396d2", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n72When we load the values as we demonstrated above and call INT 0x80, the very\nnext instruction\u2019s address in the User Space, ASM Code section which is your\ncode, is placed into the Return Address area in The Stack. This is critical so that\nwhen INT 0x80 does its work, it can properly know what instruction is to be\ncarried out next to ensure proper and sequential program execution.\nKeep in mind in modern versions of Linux, we are utilizing Protected Mode which\nmeans you do NOT have access to the Linux Kernel Space. Everything under the\nlong line that runs in the middle of the diagram above represents the Linux Kernel\nSpace.\nThe natural question is why can\u2019t we access this? The answer is very simple,\nLinux will NOT allow your code to access operating system internals as that would\nbe very dangerous as any Malware could manipulate those components of the\nOS to track all sorts of things such as user keystrokes, activities and the like.\nIn addition, modern Linux OS architecture changes the address of these key\ncomponents constantly as new software is installed and removed in addition to\nsystem patches and upgrades. This is the cornerstone of Protected Mode\noperating systems.\nThe way that we have our code communicate with the Linux Kernel is through the\nuse of a kernel servies call gate which is a protected gateway between User\nSpace where your program is running and Kernel Space which is implemented\nthrough the Linux Software Interrupt of 0x80.\nAt the very, very bottom of memory where segment 0, offset 0 exists is a lookup\ntable with 256 entries. Every entry is a memory address including segment and\noffset portions which comprise of 4 bytes per entry as the first 1,024 bytes are\nreserved for this table and NO OTHER CODE can be manipulated there. Each\naddress is called an interrupt vector which comprises the whole called the\ninterrupt vector table where every vector has a number from 0 to 255 to which\nvector 0 starts off occupying bytes 0 to 3. This continues with vector 1 which\ncontains 4 to 7, etc.\nKeep in mind, none of these addresses are part of permanent memory. What is\nstatic is vector 0x80 which points to the services dispatcher which point to Linux\nkernel service routines.\nWhen the return address is popped off the stack returns to the next instruction,\nthe instruction is called the Interrupt Return or IRET which completes the\nexecution of program flow.\nTake some time and look at the entire table of system calls by opening up a\nterminal and typing:\ncat /usr/include/asm/unistd_32.h\nBelow is a snapshot of just a few of them. As you can see the exit 1 represents\nthe sys_exit that we utilized in our above code.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2669, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "24c6e134-7ff4-41bb-bde2-4d1eafc52c28": {"__data__": {"id_": "24c6e134-7ff4-41bb-bde2-4d1eafc52c28", "embedding": null, "metadata": {"page_label": "73", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1d0a9154-b34a-4fe7-8748-1e96d2204075", "node_type": "4", "metadata": {"page_label": "73", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "bb1b5b93b9080613c7bd9bf8de63fdf35dfc5980356ae15291a668e787bc04d2", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n73\nStarting with this lesson we will take a 3-step approach:\n1)Program\n2)Debug\n3)Hack\nEach week we will start with a program like you see here, the following week we\nwill take it into GDB and examine what exactly is going on at the assembly level\nand finally in the third series of each week we will hack the data in GDB to change\nit to whatever we want demonstrating the ability to control program flow which\nincludes learning how to hack malware to a point where it is not a threat.\nWe will not necessarily look at malware directly as I would rather focus on the\ntopics of assembly language programs that will give you the tools and\nunderstanding so that ANY program can be debugged and manipulated to your\nliking. That is the purpose of these tutorials.\nThe information you will learn in this tutorial series can be used with high-level\nGUI debuggers like IDA Pro as well however I will focus only on the GNU GDB\ndebugger.\nI look forward to seeing you all next week when we dive into creating our first\nassembly debug!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1035, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d19645e7-c305-4385-8eb3-952da37645f1": {"__data__": {"id_": "d19645e7-c305-4385-8eb3-952da37645f1", "embedding": null, "metadata": {"page_label": "74", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "052af2aa-5395-46e7-9b94-59803c54bd76", "node_type": "4", "metadata": {"page_label": "74", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "b3e285729b78cf8f7f8d34baf4818be3b0d031bd4c2e2c2a2f0e4f91af352122", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n74Part 23 - ASM Debugging 1 [Moving\nImmediate Data]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s begin by loading the binary into GDB.\nTo load into GDB type:\ngdb -q moving_immediate_dat\nLet\u2019s first set a breakpoint on start by typing b _start.\nWe can then run the program by typing r.\nTo then begin disassembly, we simply type disas .\nWe coded a nop which means no operation or 0x90 from an OPCODE\nperspective for proper debugging purposes which the breakpoint properly hit. This\nis good practice when creating assembly programs.\nThe native syntax as I have stated many times before is AT&T syntax which you\nsee above. I painfully go back and forth deliberately so that you have comfort in\neach however going forward I will be sticking to the AT&T syntax however wanted\nto show you a few examples of both. I will state again that if you ever want to see\nIntel syntax simply type set-disassembly-flavor intel and you will have what you\nare looking for.\nWe first use the command si which means step-into to advance to the next\ninstruction. What we see here at _start+0  is you are moving the hex value of\n0x64  into EAX. This is simply moving decimal 100 or as the computer sees it, hex\n0x64  into EAX which demonstrates moving an immediate value into a register.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1454, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5ac6be57-04e8-4bcc-8769-b4474d22d4e8": {"__data__": {"id_": "5ac6be57-04e8-4bcc-8769-b4474d22d4e8", "embedding": null, "metadata": {"page_label": "75", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "905ce469-92bb-40f1-a955-1621093976db", "node_type": "4", "metadata": {"page_label": "75", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "613f80c645f3979f5a0554819eca147481b77ac69df6db01d0bf60108d0953ad", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n75\nWe step-into again and then use the command i r which keep in mind has a space\nbetween them to give us information on the state of the CPU registers. We can\nsee EAX now has the value of 0x64 hex or 100 decimal.\nAfter we step-into again and do a disas , we see that we have then moved the\nvalue of 0x50  into the buffer  label as can refer back to the source code from last\nweek to see.\nWhen dealing with non-register data, we can use the print command above as we\ntype print /x buffer  and it clearly shows us that the value inside buffer is 0x50 .\nThe /x designation means show us the value in hex.\nConsequently you can review slide 2 of this tutorial above you see at _start+5  the\nimmediate value of 0x50  loaded into the buffer  label or in this case the address of\nbuffer  which is 0x8049090  and we can examine it by using the examine\ninstruction by typing x/xb 0x8049090  which shows us one hex byte at that\nlocation which yields 0x50.\nWe will be doing this with every program example so that we can dive into the\ndebugging process. If there are any questions, please leave them below in the\ncomments.\nI look forward to seeing you all next week when we dive into creating our first\nassembly hack!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1220, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "05d10f30-f512-477a-930d-0e9c9176e81f": {"__data__": {"id_": "05d10f30-f512-477a-930d-0e9c9176e81f", "embedding": null, "metadata": {"page_label": "76", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2e50f84f-9a91-4439-b7e4-8dbff5542353", "node_type": "4", "metadata": {"page_label": "76", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "6df5fdf90f22f3e4b7405c0e39519bdde77df7e913c58369a60e09cb2e2a2eee", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n76Part 24 - ASM Hacking 1 [Moving\nImmediate Data]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s begin by loading the binary into GDB.\nTo load into GDB type:\ngdb -q moving_immediate_data\nLet\u2019s first set a breakpoint on start by typing b _start .\nWe can then run the program by typing r.\nTo then begin disassembly, we simply type disas .\nWe coded a nop which means no operation or 0x90  from an OPCODE\nperspective for proper debugging purposes which the breakpoint properly hit. This\nis good practice when creating assembly programs.\nLets have some fun! At this point lets si once and do an i r to see that  0x64  has in\nfact been moved into EAX.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 836, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "10d0c491-fd08-43dd-87c9-f6e674009989": {"__data__": {"id_": "10d0c491-fd08-43dd-87c9-f6e674009989", "embedding": null, "metadata": {"page_label": "77", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "63962a8b-f476-4d81-a7c4-cf0f30360a9f", "node_type": "4", "metadata": {"page_label": "77", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "7c25dd84340d5ef10c30818fc5dd06097c564faf0f922610dd20b3a23e60728e", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n77\nWe can see EAX has the value of 0x64  or 100 decimal. Lets HACK that value\nnow by setting EAX to say something like 0x66  by typing set $eax = 0x66 .\nBAM! There we go! You can see the ULTIMATE power of assembly here! We just\nhacked the value from 0x64  to 0x66  or 100 to 102 decimal. This is a trivial\nexample however you can clearly see when you learn to master these concepts\nyou develop a greater power over the computer. With each program that we\ncreate, we will have a very simple lesson like this where we will hijack at least one\nportion of the code so we can not only see how the program is created and\ndebugged but how we can manipulate it to whatever we want.\nI look forward to seeing you all next week when we dive into creating our second\nassembly program!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 786, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "047672e5-731a-43bb-adb0-3aa72fdbfe35": {"__data__": {"id_": "047672e5-731a-43bb-adb0-3aa72fdbfe35", "embedding": null, "metadata": {"page_label": "78", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5055891b-2c72-4103-92fe-f22e6eca43fa", "node_type": "4", "metadata": {"page_label": "78", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "370adba2e71080ebcb36e44a10b82fd457652a70f53794fbb477ec41a0cfbb66", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n78Part 25 - ASM Program 2 [Moving Data\nBetween Registers]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nIn our second program we will demonstrate how we can move data between\nregisters. Moving data from one register to another is the fastest way to move\ndata. It is always advisable to keep data between registers as much as can be\nengineered for speed.\nSpecifically we will move the value in EDX into EAX. We will initialize this program\nwith a simple immediate value of 22 decimal which will go into EDX and ultimately\ninto EAX.\nKeep in mind you can only move similar registers between each other. We know\nthat EAX and EDX are 32-bit registers. We know that each of these registers can\nbe accessed by their 16-bit values as ax and dx respectively. You can\u2019t move a\n32-bit value into a 16-bit value and vice-versa.\nI look forward to seeing you all next week when we dive into debugging our\nsecond assembly program!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1101, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "27c648fb-655b-40f9-8ac2-6bf292f02270": {"__data__": {"id_": "27c648fb-655b-40f9-8ac2-6bf292f02270", "embedding": null, "metadata": {"page_label": "79", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ae1ca833-5b2a-48f1-9c96-df305ce0761f", "node_type": "4", "metadata": {"page_label": "79", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "9c9fba3abf765f9124e975f5b23517ab6c2d0a454b9bea56aa7129b12fd2f0bd", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n79Part 26 - ASM Debugging 2 [Moving Data\nBetween Registers]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s debug the second program below:\nLets fire up GDB and break on _start, run the binary and disas:\nNow lets si twice and i r:\nAs we can see the value of 0x16  or 22 decimal did move into EDX successfully.\nNow lets si again.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 518, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7015c1d2-25c3-4578-ae61-9b903ab5e646": {"__data__": {"id_": "7015c1d2-25c3-4578-ae61-9b903ab5e646", "embedding": null, "metadata": {"page_label": "80", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "60df65ee-b19d-4bde-97bb-5892b26d068c", "node_type": "4", "metadata": {"page_label": "80", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "070c2bbfc83de9f8cb529569012e554a184b8b76d9271d9bc3be14ba8e78be7e", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n80\nAs you can see we have successfully moved EDX into EAX.\nI look forward to seeing you all next week when we dive into hacking our second\nassembly program!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 170, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "11484388-d5a0-4b12-a68c-0dfde986ab25": {"__data__": {"id_": "11484388-d5a0-4b12-a68c-0dfde986ab25", "embedding": null, "metadata": {"page_label": "81", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0264f651-656a-4615-917d-00444ec82669", "node_type": "4", "metadata": {"page_label": "81", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "7a5a9798379667655a55bda6860c0b97ab6cdb06af00e0325b733c9a4b041347", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n81Part 27 - ASM Hacking 2 [Moving Data\nBetween Registers]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s hack the second program below:\nLets fire up GDB and break on _start, run the binary and disas:\nNow lets si twice and i r:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 417, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4a4c4474-3d55-4b2a-a653-f82976bc1f5f": {"__data__": {"id_": "4a4c4474-3d55-4b2a-a653-f82976bc1f5f", "embedding": null, "metadata": {"page_label": "82", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2c5eaf2b-bbb8-4e5c-80a6-1a574f31e2c5", "node_type": "4", "metadata": {"page_label": "82", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "b8cd72e2e620189ce08a1d02d740d49278b908b9d7410972cc2d3f3f96a84439", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n82As we can see the value of 0x16  or 22 decimal did move into EDX successfully.\nThis is what we did in the last lesson however here we are going to hack that\nvalue to something else.\nWe can set $edx = 0x19  for example:\nAs you can see we easily hacked the value of EDX to 0x19  or 25 decimal.\nHopefully you see some very simple patterns now that we are diving into very\nsimple assembly language programs. The key is to understand how to manipulate\nvalues and instructions so that you have complete control over the binary.\nWe are going to continue to move at a snails pace throughout the rest of this\ntutorial as my goal is to give everyone very small bite-size examples of how to\nunderstand x86 assembly.\nI look forward to seeing you all next week when we dive into writing our third\nassembly program!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 817, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3e708d74-2759-4c0a-a491-95d33eb5da93": {"__data__": {"id_": "3e708d74-2759-4c0a-a491-95d33eb5da93", "embedding": null, "metadata": {"page_label": "83", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "79460471-77a9-4bd8-a444-fa825801d025", "node_type": "4", "metadata": {"page_label": "83", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "fa40bca7c3689f065cdc520cb4b96fa33d8b71b5109da0ca581c0e9411ee5f1c", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n83Part 28 - ASM Program 3 [Moving Data\nBetween Memory And Registers]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nIn our third program we will demonstrate how we can move data between memory\nand registers. \nSpecifically we will move the value of inside the constant integer of 10 decimal\ninto ECX.\nKeep in mind to assemble we type:\nas \u201332 -o moving_data_between_memory_and_registers.o\nmoving_data_between_memory_and_registers.s\nTo link the object file we type:\nld -m elf_i386 -o moving_data_between_memory_and_registers\nmoving_data_between_memory_and_registers.o\nI look forward to seeing you all next week when we dive into debugging our third\nassembly program!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 848, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bb2c8b24-5e57-4491-bc7e-fa0823047a19": {"__data__": {"id_": "bb2c8b24-5e57-4491-bc7e-fa0823047a19", "embedding": null, "metadata": {"page_label": "84", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0a35a476-e537-43e0-adad-4a5edb2b8093", "node_type": "4", "metadata": {"page_label": "84", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "6f3467ca19a29ce68e346b0ed95f14224bd4f853bb24362c48e3ecb46c50002b", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n84Part 29 - ASM Debugging 3 [Moving Data\nBetween Memory And Registers]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s debug! \nSpecifically we will move the value of inside the constant integer of 10 decimal\ninto ECX.\nWe open GDB in quiet mode and break on _start and run by following the\ncommands above.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 494, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e5872643-4c6d-4d8f-9e1e-2144be3bc43a": {"__data__": {"id_": "e5872643-4c6d-4d8f-9e1e-2144be3bc43a", "embedding": null, "metadata": {"page_label": "85", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2a424303-79fc-4a97-9e41-bdd23e7db883", "node_type": "4", "metadata": {"page_label": "85", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "2eb533ba0522aeb6c52ce9b4791ebf6398d010d1b1f0d5254b8979dcb66e249b", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n85As we can see when we info registers the value of ECX is 0.\nAfter we step into twice, we now see the value of ECX as 10 decimal of 0xa hex.\nI look forward to seeing you all next week when we dive into hacking our third\nassembly program!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 252, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b58ba513-897f-4cb0-8ba2-d0d5fdf06ae0": {"__data__": {"id_": "b58ba513-897f-4cb0-8ba2-d0d5fdf06ae0", "embedding": null, "metadata": {"page_label": "86", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7aa4d61c-3e09-428e-9d70-7a71a89c2b04", "node_type": "4", "metadata": {"page_label": "86", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "4e90554e3cfc7cda5da10114c6cf7d2858bde0f76a4f970befa05a0ebcb741e6", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n86Part 30 - ASM Hacking 3 [Moving Data\nBetween Memory And Registers]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s hack! \nSpecifically we will move the value of inside the constant integer of 10 decimal\ninto ECX like before.\nWe open GDB in quiet mode and break on _start and run by following the\ncommands above.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 503, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "76724c1d-81ca-4053-b197-0ad41bd8d122": {"__data__": {"id_": "76724c1d-81ca-4053-b197-0ad41bd8d122", "embedding": null, "metadata": {"page_label": "87", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a69bc4e2-453f-4bdb-aef2-e302fb17d294", "node_type": "4", "metadata": {"page_label": "87", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "eb84bca264698e9c264cd2aaa313730cccbff0b743bc4005620dd23fd72ac8e8", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n87As we can see when we info registers the value of ECX is 0. Let\u2019s do a si and\nanother si. \nAs you can see the value of ECX is 10 decimal or 0xa hex as it was in the prior\nlesson now lets hack that value to something else.\nLet\u2019s set $ecx = 1337 and do an i r.\nAs you can clearly see we have hacked the value of ECX to 0x539 hex or 1337\ndecimal.\nAs I have stated throughout this series. Each of these lessons are very bite-sized\nexamples so that you get the hard muscle memory on how to hack through a\nvariety of situations so that you ultimately have a complete mastery of processor\ncontrol.\nI look forward to seeing you all next week when we dive into creating our fourth\nassembly program!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 705, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0cafe233-7957-44f7-8d77-ab92d2662357": {"__data__": {"id_": "0cafe233-7957-44f7-8d77-ab92d2662357", "embedding": null, "metadata": {"page_label": "88", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e4b4c74e-6e0a-4034-8901-68d17332a2eb", "node_type": "4", "metadata": {"page_label": "88", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "59505292f0b1c85910e540e6fed16df80139293f33a2a03bc85b72923b4ff607", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n88Part 31 - ASM Program 4 [Moving Data\nBetween Registers And Memory]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nIn our fourth program we will demonstrate how we can move data between\nregisters and memory. \nSpecifically we will move the immediate value of 777 decimal into EAX. We then\nmove that value stored in EAX into the constant value in memory which initially\nhad the value of 10 decimal at runtime. Keep in mind we could have called the\nvalue anything however I called it constant as it was set up as a constant in the\n.data section.\nYou can clearly see it can be manipulated so it is NOT a constant. I chose\nconstant deliberately as if it was in pure form the value would stay 10 decimal or\n0xa hex.\nThis code is purely an academic exercise as variable data normally would be set\nup under the .bss section however I wanted to demonstrate that the above is\npossible to show the absolute flexibility of assembly language.\nKeep in mind to assemble we type:\nas \u201332 -o moving_data_between_registers_and_memory.o\nmoving_data_between_registers_and_memory.s\nTo link the object file we type:\nld -m elf_i386 -o moving_data_between_registers_and_memory\nmoving_data_between_registers_and_memory.o\nI look forward to seeing you all next week when we dive into debugging our fourth\nassembly program!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1480, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "31d1044c-5b11-4cc2-946e-8ab9d6122fd4": {"__data__": {"id_": "31d1044c-5b11-4cc2-946e-8ab9d6122fd4", "embedding": null, "metadata": {"page_label": "89", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4c668fdf-c5ed-4b1b-8ed8-52b2eaaee6ac", "node_type": "4", "metadata": {"page_label": "89", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "c00eb17abe4c5e4cc16df7eaf0e164e6c92f7baba9f4f6ff3e97d057655d40e0", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n89Part 32 - ASM Debugging 4 [Moving Data\nBetween Registers And Memory]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nIn our fourth program we will demonstrate how we can move data between\nregisters and memory. \nSpecifically we will move the immediate value of 777 decimal into EAX. We then\nmove that value stored in EAX into the constant value in memory which initially\nhad the value of 10 decimal at runtime. Keep in mind we could have called the\nvalue anything however I called it constant as it was set up as a constant in the\n.data section.\nAs you can see above we go into GDB and clearly see that the value of constant\nhas been replaced with 777 decimal where in the code it was clearly set at 10\ndecimal in line 6 of the code at the beginning of this tutorial.\nWe can clearly see that in line 16 of the code the value of 777 decimal was\nsuccessfully moved into EAX and into the memory value of constant.\nI look forward to seeing you all next week when we dive into hacking our fourth\nassembly program!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1193, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "90b7da1d-1b92-41b2-9b51-23df481d4b55": {"__data__": {"id_": "90b7da1d-1b92-41b2-9b51-23df481d4b55", "embedding": null, "metadata": {"page_label": "90", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4e9ca625-b668-4e94-b187-ca93a18447c6", "node_type": "4", "metadata": {"page_label": "90", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "2a299eef7b07b3fb0ea23fdd37802847a8ec8eb70b6794deef01aa1a65bc61fe", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n90Part 33 - ASM Hacking 4 [Moving Data\nBetween Registers And Memory]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s re-examine the source code.\nWe again can see above that we will move the immediate value of 777 decimal\ninto EAX. We then move that value stored in EAX into the constant value in\nmemory which initially had the value of 10 decimal at runtime. Keep in mind we\ncould have called the value anything however I called it constant as it was set up\nas a constant in the .data section.\nAs you can see above we go into GDB and clearly see that the value of constant\nhas been replaced with 777 decimal where in the code it was clearly set at 10\ndecimal in line 6 of the code at the beginning of this tutorial.\nWe can clearly see that in line 16 of the code the value of 777 decimal was\nsuccessfully moved into EAX and into the memory value of constant.\nNow lets hack this thing!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1074, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "31ebbff9-d316-46d0-afe7-3970db5efd6e": {"__data__": {"id_": "31ebbff9-d316-46d0-afe7-3970db5efd6e", "embedding": null, "metadata": {"page_label": "91", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d285d5ad-40ed-49ab-9864-b40819b1981c", "node_type": "4", "metadata": {"page_label": "91", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "9f8d9fc2b7b0dd752d9cefdba7a90c96a8cf878b9f38620db4ecc6f5096be9c3", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n91\nWe took the very steps as we did last time with the debugging lesson. Here we\nhack the value of constant to which we hack the value from 777 to 666.\nI look forward to seeing you all next week when we dive into creating our fifth\nassembly program!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 263, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "34820f6d-d084-479d-b718-a4adca26bc74": {"__data__": {"id_": "34820f6d-d084-479d-b718-a4adca26bc74", "embedding": null, "metadata": {"page_label": "92", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "073a22ae-60a0-451c-98dd-9bdd8b7a8156", "node_type": "4", "metadata": {"page_label": "92", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "8271a36fbb7ccc22aa3aafc876a51993278bd166831e5caaffef150df15d7ab5", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n92Part 34 - ASM Program 5 [Indirect\nAddressing With Registers]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nIn our fifth program we will demonstrate how we can manipulate indirect\naddressing with registers. \nWe can place more than one value in memory as indicated above. In the past, our\nmemory location contained one single value. In the above as you can see the\nvalue of constants contains 11 separate values.\nThis creates a sequential series of data values placed in memory. Each data\nvalue occupies one unit of memory which is an integer or 4 bytes.\nWe must use an index system to determine these values as what we have\ncreated above is an array.\nWe will utilize the indexed memory mode where the memory address is\ndetermined by a base address, an offset address to add to the base address and\nthe size of the data element, in our case an integer of 4 bytes and an index to\ndetermine which data element to select.\nKeep in mind an array starts with index 0. Therefore in the above code we see 1\nmoving into edi which is the 2nd index which ultimately goes into ebx.\nWe will dive deeper into this in the next lesson we debug however I want you to\ntake some time to study the code above and get a good grasp of what is going on.\nKeep in mind to assemble we type:\nas \u201332 -o indirect_addressing_with_registers.o\nindirect_addressing_with_registers.s\nTo link the object file we type:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1567, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9c757698-ca51-4b24-a6dd-ab7de988e720": {"__data__": {"id_": "9c757698-ca51-4b24-a6dd-ab7de988e720", "embedding": null, "metadata": {"page_label": "93", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0a0a635d-6b7d-4fb1-a4ed-3843b408b404", "node_type": "4", "metadata": {"page_label": "93", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "cb6cdedd00ed23e91af5bd01800478d7a93db1077c5eb0473dfa56135bcfa8e4", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n93ld -m elf_i386 -o indirect_addressing_with_registers\nindirect_addressing_with_registers.o\nI look forward to seeing you all next week when we dive into debugging our fifth\nassembly program!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 204, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dda323a7-8d37-40af-a18f-a146e3c52296": {"__data__": {"id_": "dda323a7-8d37-40af-a18f-a146e3c52296", "embedding": null, "metadata": {"page_label": "94", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1b1e1586-f125-4f61-afc7-0379a5d28367", "node_type": "4", "metadata": {"page_label": "94", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "7e8c8438b2c3185eda53dd857b8c434b570ceaf32e36a91cf6544e2ad85960eb", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n94Part 35 - ASM Debugging 5 [Indirect\nAddressing With Registers]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nIn our fifth program we demonstrated how we can manipulate indirect addressing\nwith registers.\nI want to start by addressing the question of why I use AT&T syntax. In previous\nlessons I provided many ways to easily convert back and forth between AT&T\nsyntax and Intel syntax.\nI deliberately choose this path so that it forces you to be comfortable with the\nmost complex flavor of x86. If you are confused with this syntax please review the\nprior lessons as I go through the differences between both.\nLet\u2019s recap. We will use objdump to take a compiled binary such as the one\nabove that we compiled in our last lesson and show how we can view it\u2019s Intel\nsource code.\nobjdump -d -M intel indirect_addressing_with_registers | grep _start.: -A24\nNow back to our regularly scheduled program.\nLet\u2019s load the binary into GDB and break on _start, step a few steps and examine\n6 of the 11 values inside the constants label.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1211, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7a75976f-6b8f-4796-a4d9-2b82c91d0ef6": {"__data__": {"id_": "7a75976f-6b8f-4796-a4d9-2b82c91d0ef6", "embedding": null, "metadata": {"page_label": "95", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d6dd18ff-b84e-4916-b1e8-6c83141cfce9", "node_type": "4", "metadata": {"page_label": "95", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "3cef99e46b7a8716af042bfa7bc0154db530d25a582849fd9a22f20555875dc7", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n95\nWe then move the memory address of the constants label into edi and move the\nimmediate value of 25 decimal into the second index of our array. This is in\nessence a source code hack as we are changing the original value of 8 to 25.\nIf you examine the source code you see line 18 where we load the value of 1 into\nedi. Keep in mind this is the second value as arrays are 0 based.\nYou can see we changed the value of 8 decimal into 25 as explained.\nThis is our first introduction to arrays in assembly language. It is critical that you\nunderstand how they work as you may someday be a Malware Analyst or\nReverse Engineer looking at the compiled binary of any number of higher-level\nprogram compiled arrays.\nIn our next lesson we will manually hack one of the values in GDB. Keep in mind,\nwe will have to overwrite the contents inside an actual memory address with an\nimmediate value. The fun is only beginning!\nI look forward to seeing you all next week when we dive into hacking our fifth\nassembly program!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1021, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9b1e6aa1-0a5e-45b2-990a-3767b9ebcb2a": {"__data__": {"id_": "9b1e6aa1-0a5e-45b2-990a-3767b9ebcb2a", "embedding": null, "metadata": {"page_label": "96", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "581cee82-3c46-4d37-9aee-b6cd159b2b96", "node_type": "4", "metadata": {"page_label": "96", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "7a97040a59b8c589fbdc02eda0e1f33473023ce272fc055fc68e1957d9fc1b97", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n96Part 36 - ASM Hacking 5 [Indirect\nAddressing With Registers]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s reexamine the source once more.\nLet\u2019s once again load the binary into GDB and break on _start.\nAs we look above we see the command print *0x804909e. We see that it yields a\nvalue of 5 decimal. The binary at runtime puts the values inside the constants\nlabel to a respective memory address.\nIn this case we see that the pointer to 0x804909e or *0x804909e holds 5 decimal\nas we have stated above. An integer holds 4 bytes of data. The next value in our\narray will be stored in 0x80490a2. This memory location will hold the value of 8.\nIf we were to continue to advance through the array we would move 4 bytes to the\nnext value and so forth. Remember each memory location in x86 32-bit assembly\nholds 4 bytes of data.\nLet\u2019s hack!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1027, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "682fac3a-ebb6-442c-b6e4-b8e40222d70d": {"__data__": {"id_": "682fac3a-ebb6-442c-b6e4-b8e40222d70d", "embedding": null, "metadata": {"page_label": "97", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "07aabb45-12d1-409d-aa5d-b7b421f3b923", "node_type": "4", "metadata": {"page_label": "97", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "6dac01a056f36981779929d0368db56b6e62e6422111c85385ac4c50680d1ff8", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n97\nAfter we broke on _start and ran, we examined the array like we did in our prior\nlesson. Here we hack the value at 0x80490a2 to 66 decimal instead of 8 decimal\nand we can see that we successfully changed one element of the array.\nThis lesson is very important to understand how arrays are ultimately stored in\nmemory and how to manipulate and hack them. If you have any questions, please\nleave them in the comments below.\nI look forward to seeing you all next week when we dive into programming our\nsixth assembly program!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 539, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f4a08316-4883-4992-899d-d7a00ed58e6f": {"__data__": {"id_": "f4a08316-4883-4992-899d-d7a00ed58e6f", "embedding": null, "metadata": {"page_label": "98", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "565f6fa4-651a-432f-9286-7fca2aa004cf", "node_type": "4", "metadata": {"page_label": "98", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "5bf47169fc68c367038274e08dbb0cebc50237823dbefc89e30afc077e311884", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n98Part 37 - ASM Program 6 [CMOV\nInstructions]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nIn our sixth program we will demonstrate how we can work with CMOV\ninstructions.\nBefore we dive into some code lets talk about CMOV is. CMOV can prevent the\nprocessor from utilizing the JMP instructions and speeds up the respective binary.\nThere are unsigned CMOV instructions such as:\nCMOVA or CMOVNBE = Above [Carry Flag or Zero Flag = 0]\nCMOVAE or CMOVNB = Above Or Equal [Carry Flag = 0]\nCMOVNC = Not Carry [Carry Flag = 0]\nCMOVB or CMOVNAE = Below [Carry Flag = 1]\nCMOVC = Carry [Carry Flag = 1]\nCMOVBE or CMOVNA = Below Or Equal [Carry Flag or Zero Flag = 1]\nCMOVE or CMOVZ = Equal [Zero Flag = 1]\nCMOVNE or CMOVNZ = Not Equal [Zero Flag = 0]\nCMOVP or CMOVPE = Parity [Parity Flag = 1]\nCMOVNP or CMOVPO = Not Parity [Parity Flag =0]\nThere are also signed CMOV instructions such as:\nCMOVGE or CMOVNL = Greater Or Equal [Sign Flag xor Overflow Flag = 0]\nCMOVL or CMOVNGE = Less [Sign Flag xor Overflow Flag = 1]\nCMOVLE or CMOVNG = Less Or Equal [Sign Flag xor Overflow Flag or ZF = 1]\nCMOVO = Overflow [Overflow Flag = 1]\nCMOVNO = Not Overflow [Overflow Flag = 0]\nCMOVS = Sign NEGATIVE [Sign Flag = 1]\nCMOVNS = Not Sign POSITIVE [Sign Flag = 0]\nKeep in mind to review the relationships between the unsigned and signed\noperations. The unsigned instructions utilize the CF, ZF and PF to determine the\ndifference between the two operands where the signed instructions utilize the SF\nand OF to indicate the condition of the comparison between the operands.\nIf you need a refresher on the flag please review Part 14 on Flags in this series.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1817, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "461373ad-0013-4cab-a055-e89358be2f22": {"__data__": {"id_": "461373ad-0013-4cab-a055-e89358be2f22", "embedding": null, "metadata": {"page_label": "99", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5dee41c3-6577-475c-afb2-d00ac21a4a48", "node_type": "4", "metadata": {"page_label": "99", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "6488303c8a3be84f862da201a60ac8f5f85fabd7ace89de7b60adab175f2c5f3", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n99The CMOV instructions rely on a mathematical instruction that sets the EFLAGS\nregister to operate and therefore saves the programmer to use JMP statements\nafter the compare statement. Lets examine some source code.\nOk lets begin with lines 21 and 22. This is nothing new that we have experienced\nas we are simply moving the array into ebx.\nOn line 24 we see the find_smallest_value function to where we are cycling\nthrough the array and using the CMOVB to find the lowest value ultimately.\nWe see cmp %ebx, %eax  to which cmp subtracts the first operand from the\nsecond and sets the EFLAGS register appropriately. At this point the cmovb is\nused to replace the value in ebx with the value in eax if the value is smaller than\nwhat was originally in the ebx register.\nAfter we exit the loop we see three sets of sys_writes to first display our message,\nsecond to display our converted integer to ascii value and then finally a period\nand line feed.\nKeep in mind to assemble we type:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 996, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e2ed831f-6236-497b-adf0-32b711bcb2f9": {"__data__": {"id_": "e2ed831f-6236-497b-adf0-32b711bcb2f9", "embedding": null, "metadata": {"page_label": "100", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a3c315d2-479e-4d2b-a283-ca0083603216", "node_type": "4", "metadata": {"page_label": "100", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "046331986976e631d5752107d0b0fb0f8e2b4f60b040507d2b5068ee7f076b0d", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n100as \u201332 -o cmov_instructions.o cmov_instructions.s\nTo link the object file we type:\nld -m elf_i386 -o cmov_instructions cmov_instructions.o\nI look forward to seeing you all next week when we dive into debugging our sixth\nassembly program!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 254, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "743b241d-c357-41d4-ad60-e0cde412e621": {"__data__": {"id_": "743b241d-c357-41d4-ad60-e0cde412e621", "embedding": null, "metadata": {"page_label": "101", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed469d87-4b9b-4f1f-acee-765d8bf3fd27", "node_type": "4", "metadata": {"page_label": "101", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "3ca9e2055082a3ca53881ddda62e8acc2b75832774fa0b5989689b7be9f53b8d", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n101Part 38 - ASM Debugging 6 [CMOV\nInstructions]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLets re-examine some source code.\nLets break on 0x08048092 which is line 31. Lets do a r to run and then type print\n$ebx . We can see the value of 7.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 430, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5d2e9bcc-59b4-417e-9ba2-ff1f5fae12a2": {"__data__": {"id_": "5d2e9bcc-59b4-417e-9ba2-ff1f5fae12a2", "embedding": null, "metadata": {"page_label": "102", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d6f38b78-c44c-40cc-9afd-614e65e7d41d", "node_type": "4", "metadata": {"page_label": "102", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "e0110d54ff02c7402155eb87f2962faef13fdfc6742692489baa8efc92223674", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n102Ok now lets break on 0x080480b1 which is line 46. Remember when we are\nexamining the value of answer , it has been converted to its ascii printable\nequivalent so in order to see the value of \u20187\u2019 you would type x/1c &answer .\nI look forward to seeing you all next week when we dive into hacking our sixth\nassembly program!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 338, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6afa0756-ab1d-47fd-9bca-e3857740777f": {"__data__": {"id_": "6afa0756-ab1d-47fd-9bca-e3857740777f", "embedding": null, "metadata": {"page_label": "103", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c145279b-ba03-4dc1-8689-d6070f770dc4", "node_type": "4", "metadata": {"page_label": "103", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "533e8c2c2f308f88f63ad5d0813dcfd71d98dbbb41a8f57866d9da67ff6a1353", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n103Part 39 - ASM Hacking 6 [CMOV\nInstructions]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s bring the binary into gdb.\nLet\u2019s now run the binary. We see that the smallest value is 7 which is expected.\nOur final bit of instruction in this tutorial will teach you how to jump to any part of\nthe execution that you so choose.\nWe set $eip = 0x080480dd  which is the exit routine. We see now that it bypasses\nall of the code from the nop instruction when we broke on _start. You now can use\nthis command to jump anywhere inside of any binary within the debugger.\nI look forward to seeing you all next week when we wrap up our tutorial series.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 829, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "091be3ee-b3bf-4142-bbf6-424132c087cb": {"__data__": {"id_": "091be3ee-b3bf-4142-bbf6-424132c087cb", "embedding": null, "metadata": {"page_label": "104", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "41a28cd0-4fdd-4bc2-9210-2cafe372eca6", "node_type": "4", "metadata": {"page_label": "104", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "da10e8675dd92917c89e3edb26d08443849baa4f54ddfdc1721b685892c8ce9e", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n104Part 40 - Conclusion\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThis has been an extensive and hopefully beneficial tutorial series for you all.\nUnderstanding assembly language is so important to everyone when trying to\nunderstand how Malware works in addition to programming no matter bare-metal\nassembly, c, c++ or even Java, Python or iOS or Android development.\nIf you are looking to pursue a career in Reverse Engineering, assembly will be\nsecond nature to you. Most of us will pursue higher-level language development\nas computers and devices are significantly more powerful today which allows for\nrapid development languages.\nI want to thank you all for joining me on this tutorial series and look forward to you\nall making an impact in the future of tomorrow!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 959, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9e12d429-067d-4a26-b968-4f2c5e78f8c5": {"__data__": {"id_": "9e12d429-067d-4a26-b968-4f2c5e78f8c5", "embedding": null, "metadata": {"page_label": "105", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e6136cd3-b392-4153-ad6e-fac2ca5c2fb3", "node_type": "4", "metadata": {"page_label": "105", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "230916b77c9c119be1b84621074006686703fb61ccdd08ae950850d9d7e376a3", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n105The 32-bit ARM Architecture (Part 1)\nLet's dive in rightaway!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 78, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d8ad9448-56f7-403b-be30-943f8df61390": {"__data__": {"id_": "d8ad9448-56f7-403b-be30-943f8df61390", "embedding": null, "metadata": {"page_label": "106", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "67a5d3cf-1105-4eb8-b5f4-a5563efed932", "node_type": "4", "metadata": {"page_label": "106", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "3323025b13a9b0cdde3ddc8ef543528602a504e3f9e1a9462929e6f60614750d", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n106Part 1 - The Meaning Of Life\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will cover.\nhttps://github.com/mytechnotalent/hacking\\_c-\\_arm64\nWhy C++? I primarily develop in Python professionally as an Automator however\nwith every day passing we see another Ransomware attack that further cripples\nsociety in a catastrophic way.\nThis course is a comprehensive series where we learn every facet of C++ and\nhow it relates to the ARM 64 architecture as we will reverse engineer each step in\nARM 64 assembly language to get a full understanding of the environment.\nThere are roughly over 2,000 hacks a day world-wide and so few who truly\nunderstand how the hacks are executed on a fundamental level. This course is\ngoing to take a very basic and step-by-step approach to understanding low-level\narchitecture as it relates to the ARM 64.\nIn our next lesson we will set up our development environment.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1007, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "63420e32-9f68-47cd-9ecc-38dbfef9b86f": {"__data__": {"id_": "63420e32-9f68-47cd-9ecc-38dbfef9b86f", "embedding": null, "metadata": {"page_label": "107", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c5b2bd6e-865f-477c-8766-6542c8690d62", "node_type": "4", "metadata": {"page_label": "107", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "91987e2ff67264441e46eb0d8b7fef0f915e0ac6b0a876fca7ed5c05d45bb742", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n107Part 2 \u2013 Number Systems\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nAt the core of the microprocessor are a series of binary numbers which are either\n+5V (on or 1) or 0V (off or 0). Each 0 or 1 represents a bit of information within the\nmicroprocessor. A combination of 8 bits results in a single byte.\nBefore we dive into binary, lets examine the familiar decimal. If we take the\nnumber 2017, we would understand this to be two thousand and seventeen.\nLet\u2019s take a look at the binary system and the basics of how it operates.\nIf we were to convert a binary number into decimal, we would very simply do the\nfollowing. Lets take a binary number of 0101 1101 and as you can see it is 93\ndecimal.\nAdding the values in the value column gives us 0 + 64 + 0 + 16 + 8 + 4 + 0 + 1 =\n93 decimal.\nIf we were to convert a decimal number into binary, we would check to see if a\nsubtraction is possible relative to the highest order bit and if so, a 1 would be\nplaced into the binary column to which the remainder would be carried into the\nnext row. Let\u2019s consider the example of the decimal value of 120 which is 0111\n1000 binary.\n1)Can 128 fit inside of 120: No, therefore 0.\n2)Can 64 fit inside of 120: Yes, therefore 1, then 120 \u2013 64 = 56.\n3)Can 32 fit inside of 56: Yes, therefore 1, then 56 \u2013 32 = 24.\n4)Can 16 fit inside of 24: Yes, therefore 1, then 24 \u2013 16 = 8.\n5)Can 8 fit inside of 8: Yes, therefore 1, then 8 \u2013 8 = 0.\n6)Can 4 fit inside of 0: No, therefore 0.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1649, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f1aaa374-bd79-434a-8c6f-02c940f5497c": {"__data__": {"id_": "f1aaa374-bd79-434a-8c6f-02c940f5497c", "embedding": null, "metadata": {"page_label": "108", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ac636a0-affd-42ec-8b08-ceab0b4c14c0", "node_type": "4", "metadata": {"page_label": "108", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "6b0e8256aabef118194a43d929b53756a461d651fa4ac1215d9c3af135310c5c", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n1087)Can 2 fit inside of 0: No, therefore 0.\n8)Can 1 fit inside of 0: No, therefore 0.\nWhen we want to convert binary to hex we simply work with the following table.\nLets convert a binary number such as 0101 1111 to hex. To do this we very\nsimply look at the table and compare each nibble which is a combination of 4 bits.\nKeep in mind, 8 bits is equal to a byte and 2 nibbles are equal to a byte.\n0101 = 5\n1111 = F\nTherefore 0101 1111 binary = 0x5f hex. The 0x notation denotes hex.\nTo go from hex to binary it\u2019s very simple as you have to simply do the opposite\nsuch as:\n0x3a = 0011 1010\n3 = 0011\nA = 1010\nIt is important to understand that each hex digit is a nibble in length therefore two\nhex digits are a byte in length.\nTo convert from hex to decimal we do the following:\n0x5f = 95\n5 = 5 x 16^1 = 5 x 16 = 80\nF = 15 x 16^0 = 15 x 1 = 15\nTherefore we can see that 80 + 15 = 95 which is 0x5f hex.\nFinally to convert from decimal to hex. Lets take the number 850 decimal which is\n352 hex.\nWe put the numbers together from bottom to the top and we get 352 hex.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1077, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0d9ff7d7-f52b-44c2-811c-1faeb8ab6022": {"__data__": {"id_": "0d9ff7d7-f52b-44c2-811c-1faeb8ab6022", "embedding": null, "metadata": {"page_label": "109", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "35c2644a-ffaf-4ece-bd6b-ecf77b7ccf81", "node_type": "4", "metadata": {"page_label": "109", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "564328aa405a9b36e653a34adade468ba925888458a733b1627460c83b86b80e", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n109\u201cWhy the hell would I waste my time learning all this crap when the computer\ndoes all this for me!\u201d\nIf you happen to know any reverse engineers please if you would take a moment\nand ask them the above question.\nThe reality is, if you do NOT have a very firm understanding of how all of the\nabove works, you will have a hard time getting a grasp on how the ARM\nprocessor registers hold and manipulate data. You will also have a hard time\ngetting a grasp on how the ARM processor deals with a binary overflow and it\u2019s\neffect on how carry operations work nor will you understand how compare\noperations work or even the most basic operations of the most simple assembly\ncode.\nI am not suggesting you memorize the above, nor am I suggesting that you do a\nthousand examples of each. All I ask is that you take the time to really understand\nthat literally everything and I mean everything goes down to binary bits in the\nprocessor.\nWhether you are creating, debugging or hacking an Assembly, Python, Java, C,\nC++, R, JavaScript, or any other new language application that hits the street,\nultimately everything MUST go down to binary 0 and 1 to which represent a +5V\nor 0V.\nWe as humans operate on the base 10 decimal system. The processor works on\na base 16 (hex) system. The registers we are dealing with in conjunction with\nLinux are addressed in 32-bit sizes. When we begin discussion of the processor\nregisters, we will learn that each are 32-bits wide (technically the BCM2837 are\n64-bit wide however our version of Linux that we are working with is 32-bit\ntherefore we only address 32-bits of each register).\nNext week we will dive into binary addition! Stay tuned!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1682, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3bfaa4ff-4bd8-4776-9360-b7c6cca9f8e3": {"__data__": {"id_": "3bfaa4ff-4bd8-4776-9360-b7c6cca9f8e3", "embedding": null, "metadata": {"page_label": "110", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b26f278e-2eff-4f8a-98d6-307d16173817", "node_type": "4", "metadata": {"page_label": "110", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "d9419e7b14f3acc37fe47b7175cb82f1fb2054b611180fe9db69b6397fea7a28", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n110Part 3 \u2013 Binary Addition\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nBinary addition can occur in one of four different fashions:\n0 + 0 = 0 \n1 + 0 = 1 \n0 + 1 = 1 \n1 + 1 = 0 (1) [One Plus One Equals Zero, Carry One] \nKeep in mind the (1) means a carry bit. It very simply means an overflow.\nLets take the following 4-bit nibble example:\n  0111 \n+ 0100 \n= 1011 \nWe see an obvious carry in the 3rd bit. If the 8th bit had a carry then this would\ngenerate a carry flag within the CPU.\nLet\u2019s examine an 8-bit number:\n  01110000 \n+ 01010101 \n= 11000101 \nIf we had:\n     11110000 \n+    11010101 \n= (1)11000101 \nHere we see a carry bit which would trigger the carry flag within the CPU to be 1\nor true. We will discuss the carry flag in later tutorials. Please just keep in mind\nthis example to reference as it is very important to understand.\nNext week we will dive into binary subtraction! Stay tuned!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1086, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a71d4a66-1716-4c61-9aed-fa1f24ad1650": {"__data__": {"id_": "a71d4a66-1716-4c61-9aed-fa1f24ad1650", "embedding": null, "metadata": {"page_label": "111", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "64dda5d6-cadf-4a5a-b610-c1d8658f89f8", "node_type": "4", "metadata": {"page_label": "111", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "b96d7cb6eefc1bf6056d99b8bc1cb92f3babde3f0b7f33fc4c2f8a23840d9330", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n111Part 4 \u2013 Binary Subtraction\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nBinary subtraction is nothing more than adding the negative value of the number\nto be subtracted. For example 8 + - 4, the starting point would be zero to which\nwe move 8 points in the positive direction and then four points in the negative\ndirection yielding a value of 4.\nWe represent a sign bit in binary to which bit 7 indicates the sign of number where\n0 is positive and 1 is negative.\nThe above would represent -2.\nWe utilize the concept of twos compliment which inverts each bit and then finally\nadding 1.\nLets examine binary 2.\n00000010\nInvert the bits.\n11111101\nLet\u2019s examine a subtraction operation:\nSo what is the (1) you may ask, that is the overflow bit. In future tutorials we will\nexamine what we refer to as the overflow flag and carry flag.\nNext week we will dive into word lengths! Stay tuned!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1074, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "65135e4f-bd2e-4299-af99-d4e5e83f5e46": {"__data__": {"id_": "65135e4f-bd2e-4299-af99-d4e5e83f5e46", "embedding": null, "metadata": {"page_label": "112", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b5990a93-045d-47ae-9076-c97c67735600", "node_type": "4", "metadata": {"page_label": "112", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "6e117e292df1415332efecd0de7579f65bab0444280a23fe3503ddf558c1a9c0", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n112Part 5 \u2013 Word Lengths\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe system on chip we are working with has a 32-bit ARM CPU. 32-bits is\nactually 4 bytes of information which make up a word.\nIf you remember my prior tutorial on x86 Assembly, a word was 16-bits. Every\ndifferent architecture defines a word differently.\nThe most significant bit of a word for our ARM CPU is located at bit 31 therefore a\ncarry is generated if an overflow occurs there.\nThe lowest address in our architecture starts at 0x00000000 and goes to\n0xFFFFFFFF. The processor sees memory in word blocks therefore every 4\nbytes. A memory address associated with the start of a word is referred to as a\nword boundary and is divisible by 4. For example here is our first word:\n0x00000000 \n0x00000004 \n0x00000008 \n0x0000000C \nSo why is this important? There is the concept of fetching and executing to which\nthe processor deals with instructions to which it must work in this fashion for\nproper execution.\nBefore we dive into coding assembly it is critical that you understand some basics\nof how the CPU operates. There will be a number of more lectures going over the\nframework so I appreciate everyone hanging in there!\nNext week we will dive into registers! Stay tuned!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1433, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "73f660a9-3ea9-4593-bbef-b4020d06402b": {"__data__": {"id_": "73f660a9-3ea9-4593-bbef-b4020d06402b", "embedding": null, "metadata": {"page_label": "113", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5203220a-1e78-4a62-8384-185b8b76059e", "node_type": "4", "metadata": {"page_label": "113", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "d8bc78b8105997a2cf9ed259bdb2b633ebf25dfef791ef2c7deab347c30339fc", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n113Part 6 \u2013 Registers\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nOur ARM microprocessor has internal storage which make any operation must\nfaster as there is no external memory access needed. There are two modes, User\nand Thumb. We will be focusing on User Mode as we are ultimately focused on\ndeveloping for a system on chip within a Linux OS rather than bare-metal\nprogramming which would be better suited on a microcontroller device.\nIn User Mode we have 16 registers and a CPSR register to which have a word\nlength each which is 32-bits each or 8 bytes each.\nRegisters R0 to R12 are multi-purpose registers to which R13 \u2013 R15 have a\nunique purpose as well as the CPSR. Lets take a look at a simple table to\nillustrate.\nR0 GPR (General-Purpose Register) \nR1 GPR (General-Purpose Register) \nR2 GPR (General-Purpose Register) \nR3 GPR (General-Purpose Register) \nR4 GPR (General-Purpose Register) \nR5 GPR (General-Purpose Register) \nR6 GPR (General-Purpose Register) \nR7 GPR (General-Purpose Register) \nR8 GPR (General-Purpose Register) \nR9 GPR (General-Purpose Register) \nR10 GPR (General-Purpose Register) \nR11 GPR (General-Purpose Register) \nR12 GPR (General-Purpose Register) \nR13 Stack Pointer \nR14 Link Register \nR15 Program Counter \nCPSR Current Program Status Register \nIt is critical that we understand registers in a very detailed way. At this point we\nunderstand R0 \u2013 R12 are general purpose and will be used to manipulate data as\nwe build our programs and additionally when you are hacking apart or reverse\nengineering binaries from a hex dump on a cell phone or other ARM device, no\nmatter what high-level language it is written in, it must ultimately come down to\nassembly which you need to understand registers and how they work to grasp\nand understand of any such aforementioned operation.\nThe chip we are working with is known as a load and store machine. This means\nwe load a register with the contents of a register or memory location and we can\nstore a register with the contents of a memory or register location. For example:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2235, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cdc4c8b4-fa1e-4164-85e9-30a44f4360f2": {"__data__": {"id_": "cdc4c8b4-fa1e-4164-85e9-30a44f4360f2", "embedding": null, "metadata": {"page_label": "114", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ba284af0-c255-44d2-a21a-48414107a053", "node_type": "4", "metadata": {"page_label": "114", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "dd9efc07533096fba1ee6639e8ac0510a950f20be064a6c7c0dd6de580a1c37a", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n114ldr, r4, [r10] @  \n    load r4 with the contents of r10, if r10 had the \ndecimal value of  \n    say 22, 22 would go to r4 \n \nstr, r9, [r4] @  \n    store r9 contents into location in r4, if r9 had 0x02 \nhex,  \n    0x02 would be stored into location r4 \nThe @ simply indicates to the compiler that what follows it on a given line is a\ncomment and to be ignored.\nThe next few weeks we will take our time and look at each of the special purpose\nregisters so you have a great understanding of what they do.\nNext week we will dive into more information on the program counter! Stay tuned!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 599, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6a8115e9-0e95-4ff8-97a6-34c2f9afca5e": {"__data__": {"id_": "6a8115e9-0e95-4ff8-97a6-34c2f9afca5e", "embedding": null, "metadata": {"page_label": "115", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb26a3ad-6012-4a46-b393-7670ad36c17c", "node_type": "4", "metadata": {"page_label": "115", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "dc8db9086c0847cb25c9b24320dc257d53fd647870b560eeef9f7f5947843e43", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n115Part 7 \u2013 Program Counter\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nWe will dive into the registers over the coming weeks to make sure you obtain a\nfirm understand of their role and what they can do.\nWe begin with the PC or program counter. The program counter is responsible for\ndirecting the CPU to what instruction will be executed next. The PC literally holds\nthe address of the instruction to be fetched next.\nWhen coding you can refer to the PC as PC or R15 as register 15 is the program\ncounter. You MUST treat it with care as you can set it wrong and crash the\nexecutable quite easily.\nYou can control the PC directly in code:\nmov r15, 0x00000000 \nI would not suggest trying that as we are not in Thumb mode and that will cause a\nfault as you would be going to an OS area rather than designated program area.\nRegarding our ARM processor, we follow the standard calling convention meaning\nparams are passed by placing the param values into regs R0 \u2013 R3 before calling\nthe subroutine and the subroutine returns a value by putting it in R0 before\nreturning.\nThis is important to understand when we think about how execution flows when\ndealing with a stack operation and the link register which we will discuss in future\ntutorials.\nWhen you are hacking or reversing a binary, controlling the PC is essential when\nyou want to test for subroutine execution and learning about how the program\nflows in order to break it down and understand exactly what it is doing.\nNext week we will dive into more information on the CPSR! Stay tuned!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1728, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "416edb93-e832-4f77-b8d7-f173aa813ab0": {"__data__": {"id_": "416edb93-e832-4f77-b8d7-f173aa813ab0", "embedding": null, "metadata": {"page_label": "116", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "79555bcc-170e-4cd8-8680-c41f09ffc384", "node_type": "4", "metadata": {"page_label": "116", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "6cd139c2537d053149ee2eff585f721cf5590839d95d3aa12eea850addcff33c", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n116Part 8 - CPSR\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe CPSR register stores information about the program and the results of a\nparticular operation. Bits that are in the respective registers have pre-assigned\nconditions that are tested for an occurrence which are flags.\nThere are 32-bits that total this register. The highest 4 we are concerned with\nmost which are:\nBit 31 \u2013 N = Negative Flag\nBit 30 \u2013 Z = Zero Flag\nBit 29 \u2013 C = Carry Flag (UNSIGNED OPERATIONS)\nBit 28 \u2013 V = Overflow flag (SIGNED OPERATIONS)\nWhen the instruction completes the CPSR can get updated if it falls into one of\nthe aforementioned scenarios. If one of the conditions occurs, a 1 goes into the\nrespective bits.\nThere are two instructions that directly effect the CPSR flags which are CMP and\nCMN. CMP is compare such as:\nCMP R1, R0 @ notational subtraction where R1 \u2013 R0 and if \nthe result is 0, bit 30 Z would be set to 1 \nThe most logical command that usually follows is BEQ = branch if equal, meaning\nthe zero flag was set and branches to another label within the code.\nRegarding CMP, if two operands are equal then the result is zero. CMN makes\nthe same comparison but with the second operand negated for example:\nCMN R1, R0 @ R1 - (-R0) or R1 + R0 \nWhen dealing with the SUB command, the result would NOT update the CPSR\nyou would have to use the SUBS command to make any flag update respectively.\nNext week we will dive into more information on the Link Register! Stay tuned!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1656, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4a54e826-5e67-436a-b3cd-83d21f083519": {"__data__": {"id_": "4a54e826-5e67-436a-b3cd-83d21f083519", "embedding": null, "metadata": {"page_label": "117", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ff2ba6e2-967c-4349-9acf-37170def2760", "node_type": "4", "metadata": {"page_label": "117", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "68ea203dad9896b9f40dc81a09abdc9f87c9e457a63094feca05f278e348b250", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n117Part 9 - Link Register\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe Link Register, R14, is used to hold the return address of a function call.\nWhen a BL (branch with link) instruction performs a subroutine call, the link\nregister is set to the subroutine return address. BL jumps to another location in\nthe code and when complete allows a return to the point right after the BL code\nsection. When the subroutine returns, the link register returns the address back to\nthe program counter.\nThe link register does not require the writes and reads of the memory containing\nthe stack which can save a considerable percentage of execution time with\nrepeated calls of small subroutines.\nWhen BL has executed, the return address which is the address of the next\ninstruction to be executed, is loaded into the LR or R14. When the subroutine has\nfinished, the LR is copied directly to the PC (Program Counter) or R15 and code\nexecution continues where it was prior in the sequential code source.\nCODE TIME! Don\u2019t be discouraged if you don\u2019t understand everything in the code\nexample here. It will become clear over the next few lessons.\nTo compile:\nas -o lr_demo.o lr_demo.s \n \nld -o lr_demo lr_demo.o", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1385, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b3341a75-5bd1-44b1-9cb6-06a2446c7e4a": {"__data__": {"id_": "b3341a75-5bd1-44b1-9cb6-06a2446c7e4a", "embedding": null, "metadata": {"page_label": "118", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dce72285-1a6d-405f-9363-61c1481642cf", "node_type": "4", "metadata": {"page_label": "118", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "dad5275a2cc96b73322cb0d291e3065578a3f67bac1855e6400cc01f2e5f1c6a", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n118The simple example I created here is pretty self-explanatory. We start and\nproceed to the no_return  subroutine and proceed to the my_function  subroutine\nthen to the wrap_up  subroutine and finally  exit.\nIt is necessary that we jump into GDB which is our debugger to see exactly what\nhappens with each step:\nAs you can see with every step inside the debugger it shows you exactly the\nprogression from no_return to my_function  skipping wrap_up  until the program\ncounter gets the address from the link register.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 530, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3d15b653-0d02-4edd-8140-2c0f89dd2545": {"__data__": {"id_": "3d15b653-0d02-4edd-8140-2c0f89dd2545", "embedding": null, "metadata": {"page_label": "119", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "46c52590-eda5-4ad9-9c63-02ae02ca0e5c", "node_type": "4", "metadata": {"page_label": "119", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "966bb4683ec6068ac09d96099e107562c3377f2a08426dad5684040c0552e530", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n119\nHere we see the progression from wrap_up  to exit.\nThis is a fundamental operation when we see next week how the stack operates\nas the LR is an essential part of this process.\nNext week we will dive into the Stack Pointer! Stay tuned!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 252, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ef81490d-7546-4c53-8e9e-f2b89cf8990c": {"__data__": {"id_": "ef81490d-7546-4c53-8e9e-f2b89cf8990c", "embedding": null, "metadata": {"page_label": "120", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "03866b3c-fed3-4951-a3a6-b453b2292ca7", "node_type": "4", "metadata": {"page_label": "120", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "3cc82af5d9d446de2145b39dfac2483514aae7b9e17fe484abd64fdc5c9dfe9b", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n120Part 10 - Stack Pointer\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe Stack is an abstract data type to which is a LIFO (Last In First Out). When we\npush a value onto the stack it goes into the Stack Pointer and when it is popped\noff of the stack it pops the value off of the stack and into a register of your\nchoosing.\nCODE TIME! Again, don\u2019t be discouraged if you don\u2019t understand everything in\nthe code example here. It will become clear over the next few lessons.\nTo compile:\nas -o sp_demo.o sp_demo.s \n \nld -o sp_demo sp_demo.o \nOnce again lets load the binary into GDB to see what is happening.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 793, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d1798e97-1526-4a9a-9181-0a1aca3e0afc": {"__data__": {"id_": "d1798e97-1526-4a9a-9181-0a1aca3e0afc", "embedding": null, "metadata": {"page_label": "121", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "018f8ec3-ecec-463c-8bcc-099043b1e3da", "node_type": "4", "metadata": {"page_label": "121", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "2858442711f3528dad4e7c4c8d1d4ecbbcf5c4cc7d6d2722e84d7147176bdebd", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n121\nLets step into one time.\nWe see hex 30  or 48 decimal  moved into r7. Lets step into again.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 109, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b89c24cf-a910-4fc9-826b-31e4d3b075d9": {"__data__": {"id_": "b89c24cf-a910-4fc9-826b-31e4d3b075d9", "embedding": null, "metadata": {"page_label": "122", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dece59b0-ef86-4aba-b0ee-806df11b6c4a", "node_type": "4", "metadata": {"page_label": "122", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "0473e23c1b40ea195be49a25520e5717b9b94de65c430f534dbcc664384053f1", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n122\nWe see the value of the sp change from 0x7efff3a0  to 0xefff39c . That is a\nmovement backward 4 bytes . Why the heck is the stack pointer going backward\nyou may ask!\nThe answer revolves around the fact that the stack grows DOWNWARD . When\nwe say the top of the stack you can imagine a series of plates being placed\nBENEATH  of each other.\nOriginally the sp was at 0x7efff3a0 .\nWhen we pushed r7 onto the stack, the new value of the Stack Pointer  is now\n0x7efff39c  so we can see the Stack truly grows DOWNWARD  in memory.\nNow lets step into again.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 566, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "39701ce0-7347-4b5e-9169-0a01d8265262": {"__data__": {"id_": "39701ce0-7347-4b5e-9169-0a01d8265262", "embedding": null, "metadata": {"page_label": "123", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "110d7cd3-ec3d-478a-81a2-5d9bbad657c6", "node_type": "4", "metadata": {"page_label": "123", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "7d091defc0582dba50a554e8c36b4f59cddcfbd3f7bb7b0bb80f58ff3b059286", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n123\nWe can see the value of hex 10  or decimal 16  moved into r7. Notice the sp did\nnot change.\nBefore we step into again, lets look at the value inside the sp.\nLets step into again.\nWe see the value in the stack was popped off the stack and put back into r7\ntherefore the value of hex 30  is back in r7 as well as the sp is back at 0x73fff3a0 .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 359, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1782fe05-ecad-4094-b61f-000af3357b23": {"__data__": {"id_": "1782fe05-ecad-4094-b61f-000af3357b23", "embedding": null, "metadata": {"page_label": "124", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b875b66b-ebe6-4834-b41b-776f4cde11cc", "node_type": "4", "metadata": {"page_label": "124", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "e8523f9f7ca708a4303a64215979dd7ac21ff308b7f7d98219b35067aa25bd10", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n124Please take the time to type out the code, compile and link it and then step\nthrough the binary in GDB. Stack operations are critical to understanding Reverse\nEngineering and Malware Analysis as well as any debugging of any kind.\nNext week we will dive into ARM Firmware Boot Procedures.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 304, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "52410e16-f0e6-433f-b45a-9e9ded790aff": {"__data__": {"id_": "52410e16-f0e6-433f-b45a-9e9ded790aff", "embedding": null, "metadata": {"page_label": "125", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "323d820c-5487-4191-a857-5e3cabf683a6", "node_type": "4", "metadata": {"page_label": "125", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "bf34e56021b6eaf1ffc0816826585e53be1933d7366fb133cb481f5a33ceb30c", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n125Part 11 - ARM Firmware Boot Procedures\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s take a moment to talk about what happens when we first power on our\nRaspberry Pi device.\nAs soon as the Pi receives power, the graphics processor is the first thing to run\nas the processor is held in a reset state to which the GPU starts executing code.\nThe ROM reads from the SD card and reads bootcode.bin to which gets loaded\ninto memory in C2 cache and turns on the rest of the RAM to which start.elf  then\nloads.\nThe start.elf is an OS for the graphics processor and reads config.txt to which\nyou can mod. The kernel.img then gets loaded into 0x8000  in memory which is\nthe Linux kernel.\nOnce loaded, kernel.img turns on the CPU and starts running at 0x8000 in\nmemory.\nIf we wanted, we could create our own kernel.img  to which we can hard code\nmachine code into a file and replace the original image and then reboot. Keep in\nmind the ARM word size is 32 bit long which go from bit 0 to 31.\nAs stated, when kernel.img  is loaded the first byte, which is 8-bits, is loaded into\naddress 0x8000 .\nLets open up a hex editor and write the following:\nFE FF FF EA\nSave the file as kernel.img  and reboot.\n\u201cOk nothing happens, this sucks!\u201d\nActually something did happen, you created your first bare-metal firmware! Time\nto break out the champagne!\nWhen the Pi boots, the below code when it reached kernel.img loads the\nfollowing:\nFE FF FF EA\n@ address 0x8000, 0xfe gets loaded.\n@ address 0x8001, 0xff gets loaded.\n@ address 0x8002, 0xff gets loaded.\n@ address 0x8003, 0xea gets loaded.\n\u201cSo what the hell is really going on?\u201d\nThis set of commands simply executes an infinite loop.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1856, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "037d6029-d27d-40c1-abaa-6e41d59f2f6f": {"__data__": {"id_": "037d6029-d27d-40c1-abaa-6e41d59f2f6f", "embedding": null, "metadata": {"page_label": "126", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f3d04ad5-a570-4c82-8d40-a511f5e14da4", "node_type": "4", "metadata": {"page_label": "126", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "f499f01b7a6bd3c5a0082301b9f3971520d496a4c1fb2ba97eca4f147dee2358", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n126Review the datasheet:\nhttps://www.raspberrypi.org/wp-content/uploads/2012/02/BCM2835-ARM-\nPeripherals.pdf\nThe above code has 3 parts to it:\n1)Conditional \u2013 Set To Always\n2)Op Code \u2013 Branch\n3)Offset \u2013 How Far To Move Within The Current Location\nCondition \u2013 bits 31-28: 0xe or 1110\nOp Code \u2013 bits 27-24: 0xa or 1010\nOffset \u2013 bits 23-0 -2\nI know this may be a lot to wrap your mind around however it is critical that you\ntake the time and read the datasheet linked above. Do not cut corners if you truly\nhave the passion to understand the above. READ THE DATASHEET!\nI will go through painstaking efforts to break everything down step-by-step\nhowever there are exercises like the above that I am asking you to review the\ndatasheet above so you learn how to better understand where to look when you\nare stuck on a particular routine or set of machine code. This is one of those times\nI ask you to please read and research the datasheet above!\n\u201cI\u2019m bored! Why the hell does this crap matter?\u201d\nGlad you asked! The single most dangerous malware on planet earth today is that\nof the root-kit variety. If you do not have a basic understanding of the above, you\nwill never begin to even understand what a root-kit is as you progress in your\nunderstanding.\nAnyone can simply replace the kernel.img  file with their own hacked version and\nyou can have total control over the entire process from boot.\nNext week we will dive into the Von Neumann Architecture.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1462, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8cd5a304-b020-4cba-b2c3-f2fba6c8fca4": {"__data__": {"id_": "8cd5a304-b020-4cba-b2c3-f2fba6c8fca4", "embedding": null, "metadata": {"page_label": "127", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "51daf15e-87c3-41c1-a870-bf2e5b91b3a6", "node_type": "4", "metadata": {"page_label": "127", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "f61d62f734e2834b86ec97559a0cbe104424f6cd2c51c6ffc3294a62505da3c6", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n127Part 12 - Von Neumann Architecture\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nARM is a load and store machine to which the Arithmetic Logic Unit only operates\non the registers themselves and any data that needs to be stored out to RAM, the\ncontrol unit moves the data between memory and the registers which share the\nsame data bus.\nThe CPU chip of this architecture holds a control unit and the arithmetic logic unit\n(along with some local memory) and the main memory is in the form of RAM\nsticks located on the motherboard.\nA stored-program digital computer is one that keeps its program instructions, as\nwell as its data, in read-write, random-access memory or RAM.\nNext week we will dive into the Instruction Pipeline.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 913, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "94b3ba69-735a-4312-8dd1-9ff623bb53da": {"__data__": {"id_": "94b3ba69-735a-4312-8dd1-9ff623bb53da", "embedding": null, "metadata": {"page_label": "128", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "237049c5-1043-4833-9b44-01e79a7752fc", "node_type": "4", "metadata": {"page_label": "128", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "c8bef97ecf9f9e68da24819b892e05a5ee4a0040cf9c2f9c2842fee0147bcbe2", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n128Part 13 - Instruction Pipeline\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe processor works with three separate phases which are:\n1)Fetch Phase  \u2013 The control unit grabs the instruction from memory and loads it\ninto the instruction register.\n2)Decode Phase  \u2013 The control unit configures all of the hardware within the\nprocessor to perform the instruction.\n3)Execute Phase  \u2013 The processor computes the result of the instruction or\noperation.\nWhen the processor processes instruction 1 we refer to it as being in the fetch\nphase. When the processor processes instruction 2, instruction 1 goes into the\ndecode phase and instruction 2 goes into the fetch phase. When the processor\nprocesses instruction 3, instruction 2 goes into the decode stage and instruction 1\ngoes into the execute stage.\nKeep in mind, if a branch instruction occurs, the pipeline might be flushed and\nstart over again with a fresh set of cycles.\nYou now have a strong basis and background of ARM Assembly and how it works\nregarding its load and store capability between memory and the respective\nregisters and the basics of how the instruction set flows.\nNext week we will dive into our first C++ program!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1370, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "15640825-f9e0-4e16-8485-b3d9826cb7d0": {"__data__": {"id_": "15640825-f9e0-4e16-8485-b3d9826cb7d0", "embedding": null, "metadata": {"page_label": "129", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cda1597b-c79b-43ae-970e-c1b1a29d4d36", "node_type": "4", "metadata": {"page_label": "129", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "9e0d6615ae507d290f011c4f432932343420939a761c81698d39314b53dc3e70", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n129Part 14 - ADD\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nIn ARM Assembly, we have three instructions that handle addition, the first being\nADD, the second ADC (Add With Carry) and the final ADDS (Set Flag). This week\nwe will focus on ADD.\nLet\u2019s look at an example to illustrate:\nHere we see that we move decimal 67 into r1 and decimal 53 into r2. We then\nadd r1 and r2 and put the result into r0.\n\"So what the heck is all that and why should I care?\"\nThis series is going to be unlike any other in it's class. The goal is to take small\npieces of code and see exactly what it does. If you are going to understand how\nto reverse a binary or malware of any kind, it is critical that you understand the\nbasics. Learning ARM Assembly basics will help you when reversing an iPhone or\nAndroid. This tutorial series is going to work to take extremely small bites of code\nand talk about:\n1)The Code : (Here) we speak briefly about what the code does.\n2)The Debug : We break down the binary in the GDB Debugger and step though\neach instruction and see what specifically it does to program flow, register values\nand flags.\n3)The Hack : We hack a piece of the code to make it do whatever WE want!\nThis approach will allow you to spend just a few minutes each week to get a good\ngrasp on what is going on behind the scenes.\nNext week we will dive into Debugging ADD.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1545, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "16013044-4bed-4ec6-87ff-2be7eeb1a34c": {"__data__": {"id_": "16013044-4bed-4ec6-87ff-2be7eeb1a34c", "embedding": null, "metadata": {"page_label": "130", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f622e8db-10fb-4d4d-98c1-6557d43577af", "node_type": "4", "metadata": {"page_label": "130", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "adaf29b881fe7c151f51fc23610be6dc1c7937e0b6769572aca94007a54f28d5", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n130Part 15 - Debugging ADD\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s review our ADD example below:\nAgain we see that we move decimal 67 into r1 and decimal 53 into r2. We then\nadd r1 and r2 and put the result into r0.\nLet\u2019s compile:\nas -o add.o add.s\nld -o add add.o\nLet\u2019s bring into GDB to debug:\ngdb -q add", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 504, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ac688a83-2f6f-4f06-b07f-db15fe8a0e76": {"__data__": {"id_": "ac688a83-2f6f-4f06-b07f-db15fe8a0e76", "embedding": null, "metadata": {"page_label": "131", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "58045d84-1527-4bac-8fe3-711e25798563", "node_type": "4", "metadata": {"page_label": "131", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "d674b51958d30d53abf0912f614b9cc60a165d8c7b00d452267144d745050a98", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n131\nWe can see that when we b  _start , break on start and r, run we see the\ndisassembly. If you do an i r we see the info registers where we notice our cpsr  is\n0x10 .\nAs we step again and info registers:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 219, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "854a5ca2-7f12-4d0b-9c9f-8d8382bf211a": {"__data__": {"id_": "854a5ca2-7f12-4d0b-9c9f-8d8382bf211a", "embedding": null, "metadata": {"page_label": "132", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "33a0e446-dda9-47a5-9b47-89cf3d2c94f4", "node_type": "4", "metadata": {"page_label": "132", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "733280be25b866d792f858d7cf56570135cda18e3f5273d2165128024f08b81f", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n132\nWe notice 0x43  hex or 67 decimal into r1. We also notice that the flags are\nunchanged ( cpsr 0x10 ).\nLet\u2019s step again and info registers:\nWe can see r0 now holds 0x78  hex or 120 decimal. We successfully saw the add\ninstruction in place and we again notice that the flags register ( cpsr ) remains\nunchanged by this operation.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 345, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "827d182b-9cfd-49bf-9343-9f519f9f9135": {"__data__": {"id_": "827d182b-9cfd-49bf-9343-9f519f9f9135", "embedding": null, "metadata": {"page_label": "133", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "83e8486f-8d4c-430d-8c6f-ff6da7b8563d", "node_type": "4", "metadata": {"page_label": "133", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "a257f9181327571cca02de86aaf0cc1f9fe80708ec5eb12fc86f8ccbef90b462", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n133Next week we will dive into Hacking ADD.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 57, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "adda26c4-0053-4edf-85fb-4ad554d1d0af": {"__data__": {"id_": "adda26c4-0053-4edf-85fb-4ad554d1d0af", "embedding": null, "metadata": {"page_label": "134", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3653e14c-b5ee-426a-9f04-39002a70e11c", "node_type": "4", "metadata": {"page_label": "134", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "95becca5b2b97cf64513fee58203795cc09a18b3f1c8b616b4fad133f464254d", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n134Part 16 - Hacking ADD\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s again review our ADD example below:\nLet\u2019s debug:\nWe see the value of 67 decimal is being moved into r1 below:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 372, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9d086e90-f861-4d16-9115-787af7cb2108": {"__data__": {"id_": "9d086e90-f861-4d16-9115-787af7cb2108", "embedding": null, "metadata": {"page_label": "135", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "10d526fc-5f8a-4604-adb5-aa1e81c104ca", "node_type": "4", "metadata": {"page_label": "135", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "1291412bac72ed6edccf3bfb0e842428c6ced5c519cdec7d16a2ace5590f3c9d", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n135\nLet\u2019s hack! Lets set r1 = 66 !\nNow we see we have hacked the program so when it adds the values it will have\na different output. If you remember back to the last lecture, r0 = 120 . Here we see\nwe have hacked r1 and now the value of r0 is 119!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 261, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d91e2f3d-0320-4d3c-b134-c3094c55dbd2": {"__data__": {"id_": "d91e2f3d-0320-4d3c-b134-c3094c55dbd2", "embedding": null, "metadata": {"page_label": "136", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ea979bfb-9e89-44df-b6e1-53f937d842c2", "node_type": "4", "metadata": {"page_label": "136", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "6ec8c8a425c2d232071e370a410357449b02ba51ec9bd3a9eddd5683e292ef1f", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n136\nThis is the power of understanding assembly. This is a VERY simple example\nhowever with each new series as I have stated we will create a program, debug\nand hack it.\nThis combination of instructions will help you to get hands on experience when\nlearning how to have absolute control over an application and in the case of\nmalware reverse engineering gives you the ability to make the binary do exactly\nwhat you want!\nNext week we will dive into ADDS.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 468, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "deb356be-ab6b-4a3a-b538-f2a68144bb08": {"__data__": {"id_": "deb356be-ab6b-4a3a-b538-f2a68144bb08", "embedding": null, "metadata": {"page_label": "137", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "da092379-d32d-47c8-b4bc-2ba3ab63e82d", "node_type": "4", "metadata": {"page_label": "137", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "99cfdc91355e4e2ed9cbcf7c033e7af79bf643e4ce6362188a6027275fdbf340", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n137Part 17 - ADDS\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nADDS is the same as ADD except it sets the flags accordingly in the CPSR.\nLet\u2019s look at an example to illustrate:\nWe add 100 decimal into r1, 4,294,967,295  into r2. We then add r1  and r2 and\nplace in r0.\nWe see adds which sets the flags in the CPSR. We have to remember when we\ndebug in GDB, the value of the CPSR is in hex. In order to see what flags are set,\nwe must convert the hex to binary. This will make sense as we start to debug and\nhack this example in the coming tutorials.\nYou can compile the above by:\nas -o adc.o adc.s \nld -o adc adc.o \nWe need to remember that bits 31, 20, 29 and 28 in the CPSR indicate the\nfollowing:\nbit 31 - N = Negative Flag\nbit 30 - Z = Zero Flag\nbit 29 - C = Carry Flag\nbit 28 - V = Overflow Flag\nTherefore if the value in binary was 0110  of bit 31, 30, 29 and 28 ( NZCV ) that\nwould mean:\nNegative Flag NOT Set\nZero Flag SET\nCarry Flag SET\nOverflow Flag NOT Set", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1154, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "206a8b0a-24e9-4f3a-a7af-0d69eaae785b": {"__data__": {"id_": "206a8b0a-24e9-4f3a-a7af-0d69eaae785b", "embedding": null, "metadata": {"page_label": "138", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "91d5cfa1-adac-4387-8445-903880b3051c", "node_type": "4", "metadata": {"page_label": "138", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "c26d5b111e302c6aeca846f2ef8f4737b9749c77da4db3ed5bfd46ea8901a399", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n138It is critical that you compile, debug and hack each exercise in order to\nunderstand what is going on here.\nNext week we will dive into Debugging ADDS.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 168, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4cd7a675-a2f3-477b-be82-3c71586ba806": {"__data__": {"id_": "4cd7a675-a2f3-477b-be82-3c71586ba806", "embedding": null, "metadata": {"page_label": "139", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e13bed65-5f39-4857-89f8-247ba90dd928", "node_type": "4", "metadata": {"page_label": "139", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "910e6501b32b5de1543e288dcaf64b211f49695055e5acb3be421fde517e7bb0", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n139Part 18 \u2013 Debugging ADDS\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s re-examine our code:\nWe again add 100 decimal into r1, 4,294,967,295  into r2. We then add r1  and r2\nand place in r0.\nLets debug:\nWe again see adds which sets the flags in the CPSR. We have to remember\nwhen we debug in GDB, the value of the CPSR is in hex. In order to see what\nflags are set, we must convert the hex to binary. This will make sense as we start", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 627, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "929195e2-e68d-4967-be35-53558fd5dfec": {"__data__": {"id_": "929195e2-e68d-4967-be35-53558fd5dfec", "embedding": null, "metadata": {"page_label": "140", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5c4722a8-c476-43f5-8c3b-ddb80c2cfc2d", "node_type": "4", "metadata": {"page_label": "140", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "d644dd3b67112d309230fa24bf5687e923d887209d999916bccedd460e5421b1", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n140to debug and hack this example in the coming tutorials.\nWe need to remember that bits 31, 20, 29 and 28 in the CPSR indicate the\nfollowing:\nbit 31 - N = Negative Flag\nbit 30 - Z = Zero Flag\nbit 29 - C = Carry Flag\nbit 28 - V = Overflow Flag\nWe see the CPSR  at 10 hex . 10 hex  in binary is 00010000 .\nTherefore if the value in binary was 00010000  of bit 31, 30, 29 and 28 ( NZCV )\nthat would mean:\nNegative Flag NOT Set\nZero Flag NOT SET\nCarry Flag NOT SET\nOverflow Flag Set\nThere is nothing in code above which set the Overflow Flag  however in it\u2019s\nnatural state upon executing this binary it is set.\nLets step through the program:\nWe see 64 hex  or 100 decimal moved into r1 as expected. No change in the\nCPSR . Lets step some more.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 754, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "54a68963-505c-4275-b78e-885ef370a0b1": {"__data__": {"id_": "54a68963-505c-4275-b78e-885ef370a0b1", "embedding": null, "metadata": {"page_label": "141", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d48ff166-d02f-415b-ac6e-559fa0ed419d", "node_type": "4", "metadata": {"page_label": "141", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "a880731422ed991b745a1c759452ba7d942f78c0659b7feecf4fa59c50d5db56", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n141\nWe see the addition that transpires above and notice the value in r0 is 99\ndecimal  after 100 decimal  and 4294967295 decimal  were added together. How\nis that possible? The answer is simple, we overflowed the 32-bit register of r0\nfrom this addition.\nIf we examine the CPSR  we now see 20000010 hex  or 0010 0000 0000 0000\n0000 0000 0001 0000 binary . We only have to focus on the most significant bits\nwhich are 0010 :\nThe value in binary is 0010  of bit 31, 30, 29 and 28 ( NZCV ) that would mean:\nNegative Flag NOT Set\nZero Flag NOT SET\nCarry Flag SET\nOverflow Flag NOT Set\nWe see that the Carry Flag  was set and the Overflow Flag was NOT set. Why is\nthat?\nThe Carry Flag  is a flag set when two unsigned numbers  were added and the\nresult is larger than the register where it is saved. We are dealing with a 32-bit\nregister. We are also dealing with unsigned numbers therefore the CF is set and\nthe OF was not as the OF flag deals with signed numbers .\nNext week we will dive into Hacking ADDS.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1018, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "17d94fe8-b665-43a9-bc8e-ac899c48359f": {"__data__": {"id_": "17d94fe8-b665-43a9-bc8e-ac899c48359f", "embedding": null, "metadata": {"page_label": "142", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "63421a10-847b-40a2-b6cd-31092977dde9", "node_type": "4", "metadata": {"page_label": "142", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "19337fdc35308792ccfea4d57ba267c48411aaee4a5773ca674ca6606501f6b7", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n142Part 19 \u2013 Hacking ADDS\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s once again re-examine our code:\nWe again add 100 decimal into r1, 4,294,967,295  into r2. We then add r1  and r2\nand place in r0.\nLets debug:\nWe again see adds which sets the flags in the CPSR. We have to remember\nwhen we debug in GDB, the value of the CPSR is in hex. In order to see what\nflags are set, we must convert the hex to binary. This will make sense as we start", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 636, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3789185f-a3b9-44a7-a1cb-fad2f711f610": {"__data__": {"id_": "3789185f-a3b9-44a7-a1cb-fad2f711f610", "embedding": null, "metadata": {"page_label": "143", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f6d248d3-26f5-4ed4-a746-544bb604011f", "node_type": "4", "metadata": {"page_label": "143", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "bda9d6a1e119c5ba4a2e2d58dbf5660bb562204dbafd9593245841e5bcadb818", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n143to debug and hack this example in the coming tutorials.\nWe need to remember that bits 31, 20, 29 and 28 in the CPSR indicate the\nfollowing:\nbit 31 - N = Negative Flag\nbit 30 - Z = Zero Flag\nbit 29 - C = Carry Flag\nbit 28 - V = Overflow Flag\nWe see the CPSR  at 10 hex . 10 hex  in binary is 0001 .\nTherefore if the value in binary was 0001  of bit 31, 30, 29 and 28 ( NZCV ) that\nwould mean:\nNegative Flag NOT Set\nZero Flag NOT SET\nCarry Flag NOT SET\nOverflow Flag Set\nLets take a look if we step again:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 520, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7121ee7c-4b8e-49dd-8d28-ddc5021663ba": {"__data__": {"id_": "7121ee7c-4b8e-49dd-8d28-ddc5021663ba", "embedding": null, "metadata": {"page_label": "144", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7e36d3a8-b2ae-4181-9853-88acd5ee33f1", "node_type": "4", "metadata": {"page_label": "144", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "761a2af7029c4954a93ba3dc675acc4fe5e21b5b5a336b705e2f3e45f091db6f", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n144\nWe see 4294967295 decimal  or 0xffffffff in r2. We know if we step again we will\ncause the CPSR to change from 0001 to 0010 which means:\nThe value in binary is 0010  of bit 31, 30, 29 and 28 ( NZCV ) that would mean:\nNegative Flag NOT Set\nZero Flag NOT SET\nCarry Flag SET\nOverflow Flag NOT Set\nThis action sets the carry flag. However lets hack:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 363, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9dd6a335-551c-4633-bfea-93160e4d2195": {"__data__": {"id_": "9dd6a335-551c-4633-bfea-93160e4d2195", "embedding": null, "metadata": {"page_label": "145", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "108accec-6f16-4c53-91fb-0cfd0617a5ad", "node_type": "4", "metadata": {"page_label": "145", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "96cdfc42c7c8100e3bfb560adb82775ce2163a4699c6290557009be1ff5d23f6", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n145\nWe hacked r2 and changed the value to 1 decimal and 0x1 hex . NOW we know\nbefore the  CPSR went to 0010  last time however now that we hacked this, lets\nsee what happens to the CPSR  when we step.\nBAM! We hacked it and see  r0 is 101 and therefore did NOT trigger the carry flag\nand kept the CPSR  at 0x10 hex which means 0001 binary which means:\nTherefore if the value in binary was 0001  of bit 31, 30, 29 and 28 ( NZCV ) that\nwould mean:\nNegative Flag NOT Set\nZero Flag NOT SET\nCarry Flag NOT SET\nOverflow Flag Set\nIt is so important that you understand this lesson in its entirety. If not, please\nreview the last two weeks lessons.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 653, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7afd90c5-1eb1-46a6-b532-13dcbf7195c3": {"__data__": {"id_": "7afd90c5-1eb1-46a6-b532-13dcbf7195c3", "embedding": null, "metadata": {"page_label": "146", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4115e9de-9d3f-41b8-b0c7-9772417a7937", "node_type": "4", "metadata": {"page_label": "146", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "61cd04735587fb7e4050aae7f7f4217fc428f66d3b63cb6b092db2980a98f49d", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n146Next week we will dive into ADC.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 49, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7dc5611b-ea31-4986-a9d8-ed1361d68678": {"__data__": {"id_": "7dc5611b-ea31-4986-a9d8-ed1361d68678", "embedding": null, "metadata": {"page_label": "147", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4013eb99-2f6c-482c-94cc-201b0d3f0f36", "node_type": "4", "metadata": {"page_label": "147", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "a689208f77f251311425a466da5cbffb5d09cc087fac22ad64cf87588fd146c4", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n147Part 20 \u2013 ADC\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nADC is the same as ADD except it adds a 1 if the carry flag is set. We need to\npay particular attention to the CPSR or Status Register when we work with ADC.\nLet\u2019s look at an example to illustrate:\nWe add 100 decimal into r1, 4,294,967,295  into r2, 100 decimal into r3 and 100\ndecimal into r4. We then add r1  and r2 and place in r0 and then add r3  and r4\nand place into r5.\nWe see adds which sets the flags in the CPSR. We have to once again\nremember when we debug in GDB, the value of the CPSR is in hex. In order to\nsee what flags are set, we must convert the hex to binary. This will make sense as\nwe start to debug and hack this example in the coming tutorials.\nYou can compile the above by:\nas -o adc.o adc.s \nld -o adc adc.o \nI want you to ask yourself what is going to happen when r3(100 decimal)  is\nadded to r4(100 decimal) ? What do you think the value of r5 will be with the\nabove example of setting the flags with the adds result? Think about the first\nsentence in this tutorial and keep this in mind for the next tutorial.\nNext week we will dive into Debugging ADC.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1330, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a02f93c0-a7b1-483c-ad54-798e96400818": {"__data__": {"id_": "a02f93c0-a7b1-483c-ad54-798e96400818", "embedding": null, "metadata": {"page_label": "148", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d72fa25a-6b1e-42a1-8f95-59609a3bd4c4", "node_type": "4", "metadata": {"page_label": "148", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "51b52d3bbc2ed600eabe825e6e541c4ac23dddf9dcbd510a8728beb3d83f4916", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n148Part 21 \u2013 Debugging ADC\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nTo recap, ADC is the same as ADD except it adds a 1 if the carry flag is set. We\nneed to pay particular attention to the CPSR or Status Register when we work\nwith ADC.\nLet\u2019s review our code:\nWe add 100 decimal into r1, 4,294,967,295  into r2, 100 decimal into r3 and 100\ndecimal into r4. We then add r1  and r2 and place in r0 and then add r3  and r4\nand place into r5.\nWe see adds which sets the flags in the CPSR. We have to once again\nremember when we debug in GDB, the value of the CPSR is in hex. In order to\nsee what flags are set, we must convert the hex to binary. This will make sense as\nwe start to debug and hack this example in the coming tutorials.\nLast week I raised a question where I wanted you to ask yourself what is going to\nhappen when r3(100 decimal)  is added to r4(100 decimal) ? What do you think\nthe value of r5 will be with the above example of setting the flags with the adds\nresult?", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1169, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e55a0074-1a4b-43f1-a841-6a453ac0adf5": {"__data__": {"id_": "e55a0074-1a4b-43f1-a841-6a453ac0adf5", "embedding": null, "metadata": {"page_label": "149", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1ecfec48-b677-4174-9163-ccf41958f4ad", "node_type": "4", "metadata": {"page_label": "149", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "f6070d27606a2aaea2d855c9375d530397e50124a95edb3c7831522d294118d0", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n149\nOk so we add 100 decimal  and 100 decimal  together in r3 and r4 and we get\n201 decimal  in r5! Is something broken? ADC is the same as ADD except it adds\na 1 if the carry flag is set. Therefore we get the extra 1 in r5.\nWe again need to remember that bits 31, 20, 29 and 28 in the CPSR indicate the\nfollowing:\nbit 31 - N = Negative Flag\nbit 30 - Z = Zero Flag\nbit 29 - C = Carry Flag", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 402, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2b7e186a-5d93-44cc-9055-a539ccb86eb9": {"__data__": {"id_": "2b7e186a-5d93-44cc-9055-a539ccb86eb9", "embedding": null, "metadata": {"page_label": "150", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8bc4c6df-e26a-45e0-b716-f5840bdb0026", "node_type": "4", "metadata": {"page_label": "150", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "e35a17d5b266aaa2bba06bd033a67388ccd61a4f6cbc0f3ac0f5f68fd4653d25", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n150bit 28 - V = Overflow Flag\nWe see the CPSR  at 20000010 hex . The most significant bits of 20000010 hex  in\nbinary is 0010 .\nTherefore if the value in binary was 0010  of bit 31, 30, 29 and 28 ( NZCV ) that\nwould mean:\nNegative Flag NOT Set\nZero Flag NOT Set\nCarry Flag SET\nOverflow Flag NOT Set\nAs we can clearly see the carry flag was set. I hope you can digest and\nunderstand each of these very simple operations and how they have an effect on\nthe CPSR.\nNext week we will dive into Hacking ADC.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 514, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3452765e-3c31-46af-afb2-1533943f21b1": {"__data__": {"id_": "3452765e-3c31-46af-afb2-1533943f21b1", "embedding": null, "metadata": {"page_label": "151", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4815ddd5-9b2b-4567-b51f-1eb5b2b3b08e", "node_type": "4", "metadata": {"page_label": "151", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "fee6a39c2fec5a3a3a8e365f24586c92e93c3dc1b185323ea31dcd5b7d9e74ae", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n151Part 22 \u2013 Hacking ADC\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nTo recap again, ADC is the same as ADD except it adds a 1 if the carry flag is set.\nWe need to pay particular attention to the CPSR or Status Register when we work\nwith ADC.\nLet\u2019s again review our code:\nWe add 100 decimal into r1, 4,294,967,295  into r2, 100 decimal into r3 and 100\ndecimal into r4. We then add r1  and r2 and place in r0 and then add r3  and r4\nand place into r5.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 638, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bb54cb4e-0ddf-476f-b01d-ef541dc9f6c4": {"__data__": {"id_": "bb54cb4e-0ddf-476f-b01d-ef541dc9f6c4", "embedding": null, "metadata": {"page_label": "152", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "517aeb81-f7b2-4d55-9db9-72a0e1392b20", "node_type": "4", "metadata": {"page_label": "152", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "36ddef62ec5eb43437fd6105f8e653faafb7b16d35eca33e09b77845f0d929e9", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n152We run the program and step to where we move 4,294,967,295  into r2. Let\u2019s hack\nthat value in r2 and change it to 100 decimal .\nLet\u2019s step a few more times:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 173, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "83943f79-4a2d-4e99-b991-2cb11ad1b7dc": {"__data__": {"id_": "83943f79-4a2d-4e99-b991-2cb11ad1b7dc", "embedding": null, "metadata": {"page_label": "153", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e8281121-c11f-4117-9015-f3d61ed4c34a", "node_type": "4", "metadata": {"page_label": "153", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "212056db41051c12eb87f87f9c3dfaf38c4e079d67a7873aedad460c84bf8b2a", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n153\nOk so now we add 100 decimal  and 100 decimal  together in r3 and r4 and we\nget 200 decimal  in r5! Do you remember last week when we had 201? Let\u2019s\nexamine the CPSR below.\nWe again need to remember that bits 31, 20, 29 and 28 in the CPSR indicate the\nfollowing:\nbit 31 - N = Negative Flag\nbit 30 - Z = Zero Flag\nbit 29 - C = Carry Flag\nbit 28 - V = Overflow Flag\nWe see the CPSR  at 10 hex . The most significant bits of 10 hex  in binary is 0001 .\nTherefore if the value in binary was 0001  of bit 31, 30, 29 and 28 ( NZCV ) that\nwould mean:\nNegative Flag NOT Set\nZero Flag NOT Set\nCarry Flag NOT SET\nOverflow Flag Set", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 638, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8f43cf18-51f1-4d42-9cab-35b7c78c2ac7": {"__data__": {"id_": "8f43cf18-51f1-4d42-9cab-35b7c78c2ac7", "embedding": null, "metadata": {"page_label": "154", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3333d5a7-a7e4-44b1-ba80-7bdeb8211b7c", "node_type": "4", "metadata": {"page_label": "154", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "1a6e7d743c6660596bc1ccbf7c23f4f8fe0df3fc0a53bd12abde3f0f4bae896e", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n154As we can clearly see the carry flag was NOT set. I hope you can digest and\nunderstand each of these very simple operations and how they have an effect on\nthe CPSR. Please take the time and review last weeks lesson for comparison.\nNext week we will dive into SUB.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 280, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f0248b87-2f38-4da6-9518-9658c1fece1c": {"__data__": {"id_": "f0248b87-2f38-4da6-9518-9658c1fece1c", "embedding": null, "metadata": {"page_label": "155", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bc591490-7b7b-46cf-969d-1b3055c8bfb4", "node_type": "4", "metadata": {"page_label": "155", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "b1b5c42aef3b057d91ddbfa82a70e5e3e477bfe823ad87e90f747a2408dc1b0f", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n155Part 23 \u2013 SUB\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nSubtraction in ARM has four instructions which are SUB, SBC, RSB and RSC.\nWe will start today with SUB.\nPlease keep in mind when you add the S suffix on the end of each such as SUBS,\nSBCS, RSBS, RSCS, it will affect the flags. We have spent enough time on flags\nin the prior lessons so that you should have a firm grasp on this now.\nLet\u2019s examine an example of SUB:\nTo compile:\nas -o sub.o sub.s \nld -o sub sub.o \nWe simply take 67 decimal  and move into r1 and 53 decimal  and move into r2\nand subtract r1 \u2013 r2 and put the result in r0.\nNext week we will dive into SUB debugging.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 829, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e23baac9-e0b9-479f-a549-2c482fb42a5d": {"__data__": {"id_": "e23baac9-e0b9-479f-a549-2c482fb42a5d", "embedding": null, "metadata": {"page_label": "156", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "01860972-165f-489b-a5c5-061120985f6a", "node_type": "4", "metadata": {"page_label": "156", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "21163f802b6165c6320acb0c68c49a80d599b642925b35042216a24d402ce22f", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n156Part 24 \u2013 Debugging SUB\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nAs stated, subtraction in ARM has four instructions which are SUB, SBC, RSB\nand RSC. We will start today with SUB.\nPlease keep in mind when you add the S suffix on the end of each such as SUBS,\nSBCS, RSBS, RSCS, it will affect the flags. We have spent enough time on flags\nin the prior lessons so that you should have a firm grasp on this now.\nLet\u2019s re-examine our example of SUB:\nWe simply take 67 decimal  and move into r1 and 53 decimal  and move into r2\nand subtract r1 \u2013 r2 and put the result in r0.\nLet\u2019s debug.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 776, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9964b2db-fbcd-4e63-99fc-6dc383aba127": {"__data__": {"id_": "9964b2db-fbcd-4e63-99fc-6dc383aba127", "embedding": null, "metadata": {"page_label": "157", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d1932d26-3812-448b-b37b-df2e8a170b45", "node_type": "4", "metadata": {"page_label": "157", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "272aad2a96bab451120ecf6e562cce6ed080a482972d6aaee19cc4cd840c2b75", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n157\nAs we can see the registers are clear. Lets step through and see what the value\nof r0 becomes.\nAs you can see above r0 now has decimal  14 which works as expected.\nNext week we will dive into SUB hacking.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 222, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "031bd496-482c-4c8d-9c03-8245724b3b38": {"__data__": {"id_": "031bd496-482c-4c8d-9c03-8245724b3b38", "embedding": null, "metadata": {"page_label": "158", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d8f9d5e6-4351-4398-8adf-6d900e3fd7fa", "node_type": "4", "metadata": {"page_label": "158", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "05a4b70e08e629271ab2532bd33655af9d25066b9b6aff790c304f7b60389ca9", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n158Part 25 \u2013 Hacking SUB\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nAs stated, subtraction in ARM has four instructions which are SUB, SBC, RSB\nand RSC. We will start today with SUB.\nPlease keep in mind when you add the S suffix on the end of each such as SUBS,\nSBCS, RSBS, RSCS, it will affect the flags. We have spent enough time on flags\nin the prior lessons so that you should have a firm grasp on this now.\nLet\u2019s re-examine our example of SUB:\nWe simply take 67 decimal  and move into r1 and 53 decimal  and move into r2\nand subtract r1 \u2013 r2 and put the result in r0.\nLet\u2019s hack.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 773, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1bf12394-a6ac-485e-bba1-c28485c3cfe7": {"__data__": {"id_": "1bf12394-a6ac-485e-bba1-c28485c3cfe7", "embedding": null, "metadata": {"page_label": "159", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bc32748e-2f0d-4cf3-b872-75e69914d3e8", "node_type": "4", "metadata": {"page_label": "159", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "3e1eb947dc2f560315bfce413fea56eed857a8cdded5eeddda096c2014723b37", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n159\nAs we can see the registers are clear. Lets step through and see what the value\nof r0 becomes when we do a little hacking.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 140, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "def4abdc-c96a-4f94-bee0-90a87266ba0a": {"__data__": {"id_": "def4abdc-c96a-4f94-bee0-90a87266ba0a", "embedding": null, "metadata": {"page_label": "160", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5301b215-b001-4462-b1fe-183af2f4de3a", "node_type": "4", "metadata": {"page_label": "160", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "bd8824d019bedc7dc1000baaf2fb8b51a4ae791f87ed35c8765b94f7c140618a", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n160\nAs you can see above r0 now has decimal  17 which works as expected as we\nhacked the value of r2 to decimal 50  instead of decimal 53 .\nI want to thank you all for taking this journey to learn ARM Assembly. This is the\nend of the series as I encourage you all to take what you have learned and\ncontinue to work through the ARM instruction set and continue your progress.\nThis tutorial\u2019s purpose was to provide you a solid foundation in ARM Assembly\nand I believe we have done that. Thank you all and I look forward to seeing you\nall become future Reverse Engineers!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 583, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "98903f6a-e1d1-4b37-9600-65567b3eb89c": {"__data__": {"id_": "98903f6a-e1d1-4b37-9600-65567b3eb89c", "embedding": null, "metadata": {"page_label": "161", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2041ffc7-aac5-4e33-aa45-7753982a9d51", "node_type": "4", "metadata": {"page_label": "161", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "1a9587031304a76b2ea5c279f31f6a87f3269e6aa651131d494feeb1b1779262", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n161The 32-bit ARM Architecture (Part 2)\nLet's dive in rightaway!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 78, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1f0b548e-a02d-41d0-89a9-bd9d7f3fd682": {"__data__": {"id_": "1f0b548e-a02d-41d0-89a9-bd9d7f3fd682", "embedding": null, "metadata": {"page_label": "162", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9afcf528-384f-4b17-b5d1-6cffe6ea6bd3", "node_type": "4", "metadata": {"page_label": "162", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "70d4d217d9bf724ef1493f55a592f7531e43757ce5878a03afccec040fb48114", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n162Part 1 \u2013 The Meaning Of Life Part 2\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nWelcome to the ARM Reverse Engineering tutorial. This is the third tutorial series\nthat I have done focusing on Assembly Language and Reverse Engineering.\nThe first series was on x86 Assembly and the second was on ARM Assembly.\nThis series will be an expansion series on ARM focusing on ARM Reverse\nEngineering so rather than create programs directly in Assembly alone and then\nReverse Engineer the binary in Assembly we will work with Assembly and C\ntogether and Reverse Engineer in Assembly so that you will get a flavor for a real-\nworld series of applications and what it looks like disassembled.\nWe will not be working with GUI tools such as IDA Pro as we will be working with\nGDB in CLI shell. We will not be working in a traditional lab environment where\nwe are going to put a binary into a debugger rather we are going to SSH into the\nARM device and actually attach to a running process (PID) and Reverse Engineer\nthe process as it is running.\nThe first 13 weeks will be an exact review of the ARM Assembly series as it is\ncritical that we re-examine these concepts so that we have a very firm grasp when\nit comes time to reverse our binaries.\nI wanted to bring back the original quote below before we get started...\n\u201cSo if I go to college and learn Java will I make a million dollars and have nice\nthings?\u201d\nI felt it necessary to start out this tutorial series with such a statement. This is\nNOT an attack on Java as I have used Java in Android Development, Spring and\nJavaEE. In today\u2019s Agile environment, rapid-development is reality. With the\nincreased challenges in both the commercial market and the government sector,\nsoftware development will continue to focus on more robust libraries that will do\nmore with less. React, Python, Java, C# and the like will continue to grow not\nshrink as the race for project completion augments with each passing second of\ntime.\nLike it or not, hardware is getting smaller and smaller and the trend is going from\nCISC to RISC. A CISC is your typical x86/x64 computer with a complex series of\ninstructions. CISC computers will always exist however with the trend going\ntoward cloud computing and the fact that RISC machines with a reduced\ninstruction set are so enormously powerful today, they are the obvious choice for\nconsumption.\nHow many cell phones do you think exist on earth today? Most of them are RISC\nmachines. How many of you have a Smart TV or Amazon Echo or any number of\ndevices considered part of the IOT or Internet Of Things? Each of these devices\nhave one thing in common \u2013 they are RISC and all are primarily ARM based.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2859, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a40a2f1e-21fc-43b1-9040-7754a2f3b131": {"__data__": {"id_": "a40a2f1e-21fc-43b1-9040-7754a2f3b131", "embedding": null, "metadata": {"page_label": "163", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b3fc1138-a7de-41d7-944c-9479ed2a766e", "node_type": "4", "metadata": {"page_label": "163", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "04bcd3f7d0adf1e1907b21a1c46a9ffd2d5b8305d3ead8c5f12b8cc3589a5f20", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n163ARM is an advanced RISC machine. Compared to the very complex architecture\nof a CISC, most ARM systems today are what is referred to as a SoC or system\non chip which is an integrated circuit which has all of the components of a\ncomputer and electronic system on a single chip. This includes RF functionality as\nwell. These low-power embedded devices can run versions of Windows, Linux\nand many other advanced operating systems.\n\u201cWell who cares about ARM, you can call it anything you want, I know Java and\nthat\u2019s all I need to know cause when I program it works everywhere so I don\u2019t\nhave to worry about anything under the hood.\u201d\nI again just want you to reflect on the above statement for a brief moment. As\nevery day continues to pass, more and more systems are becoming vulnerable to\nattack and compromise. Taking the time to understand what is going on under the\nhood can only help to curb this unfortunate reality.\nThis series will focus on ARM Reverse Engineering. We will work with a\nRaspberry Pi 3 which contains the Broadcom BCM2837 SoC with a 4x ARM\nCortex-A53, 1.2GHz CPU and 1 GB LPDDR2 RAM. We will work with the\nRaspbian Jessie, Linux-based operating system. If you don\u2019t own a Raspberry Pi\n3, they are usually available for $35 on Amazon or any number of retailers. If you\nwould like to learn more visit https://www.raspberrypi.org .\nWe will work solely in the terminal so no pretty pictures and graphics as we are\nkeeping it to the hardcore bare-bones utilizing the GNU toolkit to compile and\ndebug our code base.\nNext week we will dive into the binary number system and compare and contrast\nit with decimal and hexadecimal so we have a proper framework of understanding\nto move forward.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1720, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aa3abb29-990b-48e2-9669-17472934c93d": {"__data__": {"id_": "aa3abb29-990b-48e2-9669-17472934c93d", "embedding": null, "metadata": {"page_label": "164", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19a3cddd-b69d-4224-8dc3-77d5419f97cb", "node_type": "4", "metadata": {"page_label": "164", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "68270a23e495ea92ceba029901e6241ada54a9ac5ccf4b52ecfb845ea831ab99", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n164Part 11 - Firmware Boot Procedures\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s take a moment to talk about what happens when we first power on our\nRaspberry Pi device.\nAs soon as the Pi receives power, the graphics processor is the first thing to run\nas the processor is held in a reset state to which the GPU starts executing\ncode. The ROM reads from the SD card and reads bootcode.bin to which gets\nloaded into memory in C2 cache and turns on the rest of the RAM to which\nstart.elf  then loads.\nThe start.elf is an OS for the graphics processor and reads config.txt to which\nyou can mod. The kernel.img then gets loaded into 0x8000  in memory which is\nthe Linux kernel.\nOnce loaded, kernel.img turns on the CPU and starts running at 0x8000 in\nmemory. \nIf we wanted, we could create our own kernel.img  to which we can hard code\nmachine code into a file and replace the original image and then reboot. Keep in\nmind the ARM word size is 32 bit long which go from bit 0 to 31. \nAs stated, when kernel.img  is loaded the first byte, which is 8-bits, is loaded into\naddress 0x800 .\nLets open up a hex editor and write the following:\nFE FF FF EA\nSave the file as kernel.img  and reboot.\n\u201cOk nothing happens, this sucks!\u201d\nActually something did happen, you created your first bare-metal firmware! Time\nto break out the champagne! \nWhen the Pi boots, the below code when it reached kernel.img loads the\nfollowing:\nFE FF FF EA\n@ address 0x8000, 0xfe gets loaded.\n@ address 0x8001, 0xff gets loaded.\n@ address 0x8002, 0xff gets loaded.\n@ address 0x8003, 0xea gets loaded.\n\u201cSo what the hell is really going on?\u201d\nThis set of commands simply executes an infinite loop.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1854, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0b157baf-77b4-43a0-9dba-265884c852a4": {"__data__": {"id_": "0b157baf-77b4-43a0-9dba-265884c852a4", "embedding": null, "metadata": {"page_label": "165", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5af4028c-2f07-4ddc-ad0e-429067d7c9b9", "node_type": "4", "metadata": {"page_label": "165", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "cb8dfd90aef5d4cf0c6f9617c3a4b579f65dc4d353d676cd35b5ad6533d975f5", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n165Review the datasheet:\nhttps://www.raspberrypi.org/wp-content/uploads/2012/02/BCM2835-ARM-\nPeripherals.pdf\nThe above code has 3 parts to it:\n1)Conditional \u2013 Set To Always\n2)Op Code \u2013 Branch\n3)Offset \u2013 How Far To Move Within The Current Location\nCondition \u2013 bits 31-28: 0xe or 1110\nOp Code \u2013 bits 27-24: 0xa or 1010\nOffset \u2013 bits 23-0 -2\nI know this may be a lot to wrap your mind around however it is critical that you\ntake the time and read the datasheet linked above. Do not cut corners if you truly\nhave the passion to understand the above. READ THE DATASHEET!\nI will go through painstaking efforts to break everything down step-by-step\nhowever there are exercises like the above that I am asking you to review the\ndatasheet above so you learn how to better understand where to look when you\nare stuck on a particular routine or set of machine code. This is one of those times\nI ask you to please read and research the datasheet above!\n\u201cI\u2019m bored! Why the hell does this crap matter?\u201d\nGlad you asked! The single most dangerous malware on planet earth today is that\nof the root-kit variety. If you do not have a basic understanding of the above, you\nwill never begin to even understand what a root-kit is as you progress in your\nunderstanding.\nAnyone can simply replace the kernel.img  file with their own hacked version and\nyou can have total control over the entire process from boot.\nNext week we will dive into the Von Neumann Architecture.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1462, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ed9aad23-364b-426b-8d55-8c0561cd18e7": {"__data__": {"id_": "ed9aad23-364b-426b-8d55-8c0561cd18e7", "embedding": null, "metadata": {"page_label": "166", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "eef4b660-1bcd-415b-86ff-197d2ae1142f", "node_type": "4", "metadata": {"page_label": "166", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "5eca735862a777670c34d669f4494147e484947cfda6e74e6d7656431d0043ac", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n166Part 14 - Hello World\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nToday we begin our journey into the world of C++ and gaining a better\nunderstanding of how C++ interacts with our ARM processor.\nThe prior lessons in this series focus on the basics of the ARM processor and\ntouch upon its architecture and how everything ultimately translates down to\nAssembly Language and then ultimately opcodes into machine language.\nWe start with our first program in C++ which is our \u201cHello World\u201d program. Let\u2019s\ndive in and break each line down step-by-step and see how this language\nworks. We will call this example1.cpp  and save it to our device.\n#include <iostream> \n  \nint main(void) { \n    std::cout << \u201cHello World\u201d std::endl; \n  \n    return 0; \n} \nTo compile this we simply type:\ng++ example1.cpp -o example1 \nWe simply then type:\n./example1 \nSUCCESS! We see \u201cHello World\u201d printed to the standard output or terminal!\nLets break it down line by line:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1136, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aa0b7764-3808-47c1-89ba-20ef6d5acff8": {"__data__": {"id_": "aa0b7764-3808-47c1-89ba-20ef6d5acff8", "embedding": null, "metadata": {"page_label": "167", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "65cada6b-6362-4e3b-83b1-861a4eefe461", "node_type": "4", "metadata": {"page_label": "167", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "8af89425bbb7f367a25b351c9adfd351195800cc95b1c320a3a54daa26a30ab1", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n167#include <iostream> is referred to as a preprocessor statement. These\npreprocessor statements happen just before the compilation of the rest of the\ncode. The #include keyword will find a file called iostream  and take all of the\ncontents of that file and paste it into the existing code we just created. These files\nare also called header files. \nWe call iostream  because we need a declaration for a function called cout  and\nendl. The cout  function allows us to print text to the standard output or terminal\nand the endl function creates a new line after the text has been displayed.\nThe main section which is of type integer is the entry point into the main\napplication or binary. You will notice a void inside the () which indicates that it\ndoes not have any parameters which will be passed into the function.\nThe std indicates a namespace which is quite simply a mechanism to organize\ncode into logical groups in order to prevent name collisions when you are dealing\nwith multiple libraries.\nYou will see many examples where they declare a using namespace std; however\nI will NEVER utilize this approach as it can cause naming collisions in more\ncomplex applications.\nThe << operator is referred to as an overloaded operator. They are essentially a\nfunction very similar to printf  in the C language. We are simply moving the \u201cHello\nWorld\u201d string into the cout  function through the use of the << overloaded\noperator. We then push the endl which creates a new line to the console.\nThe final line is the return 0. Since our main function is of type int, we have to\nreturn something. In C++ 11 there is no need for this in the main function however\nis required for every other function. I will stick to tradition and simply include it.\nThe next stage is that we compile the file. The first thing that occurs is the entire\ncontents of the iostream header goes into the source file as we discussed. The\ncompile process is where the C++ code gets translated into machine code. The\nnext stage of compilation occurs when the rest of the lines of our existing code\nare parsed through. Essentially we have all of the contents of iostream into a new\nfile and then all of the contents of our existing file added to a single file.\nCompiling takes our text file the cpp file and converts it into an intermediate\nformat called an obj file. An abstract syntax tree is created which is a conversion\nof constant data, variables and instructions.\nOnce the tree is created the code is generated. This means we now have\nmachine code that our ARM CPU will execute. Every cpp file (translation units)\nwhich will have its own respective obj file associated with it. \nLinking takes our obj files, our compiled files, in addition to the C++ Standard\nLibrary and finds where each symbol and function is and link them all together\ninto one executable.   \nThe concepts above may appear a bit confusing if you are new to programming\nhowever as you code and compile and later debug and hack in Assembly\nLanguage it will all become very clear and you will learn to master the processor.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3078, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a37745a2-28cd-46fa-b911-153710c31682": {"__data__": {"id_": "a37745a2-28cd-46fa-b911-153710c31682", "embedding": null, "metadata": {"page_label": "168", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c559472b-2e87-428d-bc3e-7597c4454608", "node_type": "4", "metadata": {"page_label": "168", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "94dde1f8a67319bd57ce7bac0a5590f245a8be4bf6acddf62f7b8fc312c6df8d", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n168Next week we will dive into Debugging Hello World.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 67, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9e7d944f-8da7-48a4-b6ec-e84c1a236c60": {"__data__": {"id_": "9e7d944f-8da7-48a4-b6ec-e84c1a236c60", "embedding": null, "metadata": {"page_label": "169", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6497b4f4-e01b-4ae6-9da0-134b510b77a5", "node_type": "4", "metadata": {"page_label": "169", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "e55413246f2c0b46c750fed9d299a7821f8e9b39a713c44fcb0cff45a6b69f62", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n169Part 15 - Debugging Hello World\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s review our code from last week.\nLet\u2019s debug! Let\u2019s fire up GDB which is the GNU Debugger to which we will break\ndown the C++ binary and step through it line-by-line in ARM Assembly.\nThis is the ARM disassembly that we are seeing. No matter what language you\nprogram in, it ultimately will go down to this level. \nThis might be a bit scary to you if you did not take my prior course on ARM\nAssembly. If you need to do a refresher, please link back to that series.\nYou are probably asking yourself why we are not debugging with the original\nsource code and seeing how it matches nicely to the assembly. The answer is\nwhen you are a professional Reverse Engineer, you do not get the luxury of\nseeing source code when you are reversing binaries. \nThis is a childishly simple example and we will continue through the series with\nvery simple examples so that you can learn effective techniques. We are using a\ntext-based debugger here so that you fully understand what is going on and to", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1254, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5083d0ef-e310-42a0-b0d9-561518b3eaf7": {"__data__": {"id_": "5083d0ef-e310-42a0-b0d9-561518b3eaf7", "embedding": null, "metadata": {"page_label": "170", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9813f3e9-cb06-4934-947d-d87edda5122f", "node_type": "4", "metadata": {"page_label": "170", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "0690e11b97a158dc783d899bec5005349cf4783e97904b707af42da3fb1d6f70", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n170also get some training if you had to ever attach yourself to a running process\ninside a foreign machine you will know how to properly debug or hack.\nI will focus SOLELY on this method rather than using a nice graphical debugger\nlike IDA or the like so that you are able to manipulate at a very low-level.\nWe start with loading the link register into r11 and adding 4 to the stack pointer\nand then adding it to r11. This is simply a routine which will allow the binary to\npreserve the link register and setting up space on the stack.\nWe notice memory address 0x10750  being loaded from memory to the register\nr1. Let\u2019s do a string examination and see what is located at that address.\nVoila! We see our string. \u201cHello World!\u201d  located at that memory address. \nLet\u2019s set a breakpoint at main+16.\nLet\u2019s take a look at our register values.\nLet\u2019s now take a look at what is inside the r1 register and then step through the\nbinary.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 941, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5aaac651-9c2c-4597-b187-872628595745": {"__data__": {"id_": "5aaac651-9c2c-4597-b187-872628595745", "embedding": null, "metadata": {"page_label": "171", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3ddf4d6c-e3fb-4fba-8c30-3fe894a68d2b", "node_type": "4", "metadata": {"page_label": "171", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "ae9d9f3f33e11a6fdf65df6f16980f0b776c50205ec83514343fcc72913180c0", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n171\nWe see the \u201cHello World!\u201d  string now residing inside of r1 which resides at\nmemory address 0x10848 . Finally let\u2019s continue through the binary.\nUnderstanding assembly and step-by-step debugging allows you to have\ncomplete and ultimate control over any binary! More complex binaries can cause\nyou hours, days or weeks to truly Reverse Engineer however the techniques are\nthe same just more time consuming.\nReverse Engineering is the most sophisticated form of analysis in advanced\nComputer Engineering. There are many tools that a professional Reverse\nEngineer uses however each of those tools have a usage and purpose however\nthis technique is the most sophisticated and comprehensive.\nNext week we will dive into Hacking Hello World.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 753, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8f4e13a5-025b-4fce-b50a-2d388e0eabf2": {"__data__": {"id_": "8f4e13a5-025b-4fce-b50a-2d388e0eabf2", "embedding": null, "metadata": {"page_label": "172", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dcf177a1-50e4-4102-add4-50c616ac2c99", "node_type": "4", "metadata": {"page_label": "172", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "82c7709b9460afaad61094b20f78da76331cef76fb0d8d2a577005ab9376ac3e", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n172Part 16 - Hacking Hello World\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s review our code from two weeks ago.\nLet\u2019s debug once again.\nLet\u2019s once again examine the contents of the string at memory address 0x10750\nand continue through the execution of the program.\nAs you can see it holds the \u201c Hello World! \u201d string and when we continue through it\necho\u2019s back to the terminal as such.\nLet\u2019s hack! Let\u2019s now overwrite the value inside of the memory address with the\nstring, \u201c Hacked World! \u201d and continue execution.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 710, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ce978c82-ff62-42e7-a210-848313406b86": {"__data__": {"id_": "ce978c82-ff62-42e7-a210-848313406b86", "embedding": null, "metadata": {"page_label": "173", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b8e96488-bb9f-4877-90b2-1acae4c81228", "node_type": "4", "metadata": {"page_label": "173", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "86eb009a89e9a75de6f2f5316699424705c0289b61f78f845ba12b77af3085b6", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n173\nWoohoo! Our first hack! As you can see as you understand Assembly you have\nABSOLUTE control over the entire binary no matter what language it is written\nin. In this very simple example we were able to hack the value inside the memory\naddress of 0x10750  to which when executed it echoed, \u201c Hacked World! \u201d to the\nterminal or standard output.\nLet\u2019s again run the binary and do a disassembly.\nLet\u2019s now do the same procedure however lets si 3x and examine the string\ninside of r1. We see that it contains, \u201c Hello World! \u201d as it has been successfully\nldr (load from memory into the register) at main+12 .\nLet\u2019s now set r1 to \u201c Hacked World! \u201d and continue execution. As you can see we\nnow hacked it coming out of the register rather than in memory. You can clearly\nbegin to see there are a number of ways to hack anything and here is a simple\nexample of two such ways.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 884, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a9a9da3c-a213-4a4e-ba11-a29801257c7b": {"__data__": {"id_": "a9a9da3c-a213-4a4e-ba11-a29801257c7b", "embedding": null, "metadata": {"page_label": "174", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "10729b2b-a139-430e-998a-80635752c27e", "node_type": "4", "metadata": {"page_label": "174", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "65dde86f81b0693c83f0639838b34735e2b313a94c357131e97c6fa48fa31b6e", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n174\nReverse Engineering is all about understanding how a program executes and\nhijacking execution flow and changing values to suit our purpose! Today you took\nyour first step into this amazing journey!\nNext week we will dive into constants.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 254, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "efd01070-d37d-47a1-931f-c8e8a77e5692": {"__data__": {"id_": "efd01070-d37d-47a1-931f-c8e8a77e5692", "embedding": null, "metadata": {"page_label": "175", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0d3f265c-0c64-4d8d-8400-4795d86fca9b", "node_type": "4", "metadata": {"page_label": "175", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "4b778382e717d6d978db344a6dd49ede27dba88924932dcae29663e1fd4bb4dc", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n175Part 17 - Constants\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nSo far we have created, debugged and hacked a simple string echo to the\nstandard terminal. We will expand upon that example by adding a constant.\nA constant in C++ is a value that will not change throughout program execution\n(unless hacked). It is used such that you have a declaration early in the code so\nthat if your future program architecture ever changes you can redefine the\nconstant in one place rather than having to update code all through your code\nbase.\nIt is standard practice to code our constants in all CAPS so that when we see it\nreferenced somewhere in the code we know that value is a constant.\nWe start with our second program in C++ which is our \u201cConstant\u201d program. Let\u2019s\ndive in and break each line down step-by-step and see how this language\nworks. We will call this example2.cpp  and save it to our device.\n#include <iostream> \n  \nint main(void) { \n            cons tint YEAR = 2017; \n  \n            std::cout << YEAR << std::endl; \n  \n            return 0; \n} \nTo compile this we simply type:\ng++ example2.cpp -o example2 \nWe simply then type:\n./example2 \nSUCCESS! We see \u201c 2017 \u201d printed to the standard output or terminal!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1404, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4db3f962-b80c-4a70-bcc4-accef7c5de4f": {"__data__": {"id_": "4db3f962-b80c-4a70-bcc4-accef7c5de4f", "embedding": null, "metadata": {"page_label": "176", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ae7d2d18-26f7-4185-99d1-09a2ef51a338", "node_type": "4", "metadata": {"page_label": "176", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "2d4e63b4234dfae4e2dcf31dec7ce0ddee60edfd8e6d2cbc114d4c796b062be5", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n176Let\u2019s break it down:\nWe utilize the const keyword to indicate a constant to which we assign it the\ninteger value of 2017.\nWe then utilize the cout function to print it to the standard output or terminal and\nadd a new line with the endl function.\nThat\u2019s it! Very simple.\nNext week we will dive into Debugging Constants.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 335, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2ca616ce-ffac-4351-9015-59e8f3f8980b": {"__data__": {"id_": "2ca616ce-ffac-4351-9015-59e8f3f8980b", "embedding": null, "metadata": {"page_label": "177", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19cc4910-a4a8-440a-a755-239d81760fd1", "node_type": "4", "metadata": {"page_label": "177", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "641c5e7ff796c325c1d6670c1511671a3c78b462fa69ade02c5375e82f345444", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n177Part 18 \u2013 Debugging Constants\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s review last week\u2019s code.\nLet\u2019s debug!\nAs we can see the value in the memory address 0x10730 is equal to 2017 . Let\u2019s\ncontinue and watch the value print to the standard output (terminal) as it did last\nweek when we ran it.\nWe can see very clearly that we move the value from memory into r1 and then we\nbranch to our cout  function to print to the terminal. At this stage you should feel a\nlittle more comfortable with understanding what the assembly is doing above.\nNext week we will dive into Hacking Constants.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 782, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1a5cba9d-4077-463c-ae88-f226f63cc4c1": {"__data__": {"id_": "1a5cba9d-4077-463c-ae88-f226f63cc4c1", "embedding": null, "metadata": {"page_label": "178", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d2345f86-05c0-400f-82d9-fa39af657042", "node_type": "4", "metadata": {"page_label": "178", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "fe1fc3b480f80ea1152f1aaebd45dfe55c4eeb29595ceeaebf643aabbad0980d", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n178Part 19 \u2013 Hacking Constants\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s review our original code.\nLet\u2019s hack!\nAs we can see the value in the memory address 0x10730 is equal to 2017 . Let\u2019s\nchange that value in memory to 1981 . Let\u2019s continue and watch the value turn to\n1981 ! Successful hack!\nLet\u2019s hack a second way! Re-start the program and set a breakpoint at main+28\nand continue to the breakpoint.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 600, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fe54b985-75e2-4908-a635-ef36258fe453": {"__data__": {"id_": "fe54b985-75e2-4908-a635-ef36258fe453", "embedding": null, "metadata": {"page_label": "179", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a9ed3e69-0b6e-4e6e-88d7-299f022888e1", "node_type": "4", "metadata": {"page_label": "179", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "1d2b8123bbad275f9596935f2c1d3cbbe76f5da06852e6945b956d1c288b1abe", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n179\nLet's continue and we see the value in r1 is 2017 . Let\u2019s change the value in r1 to\n1981 . We continue and see the program successfully hacked to 1981 !  \nNext week we will dive into Character Variables.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 221, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "63793ccb-a9db-4760-8c20-dd25af0afb13": {"__data__": {"id_": "63793ccb-a9db-4760-8c20-dd25af0afb13", "embedding": null, "metadata": {"page_label": "180", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c1d54729-4153-4549-b2b9-8eb18b3f02b9", "node_type": "4", "metadata": {"page_label": "180", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "767b37d654af6dca1888e0dc3dd43f2ba97cbc59e30658ef4ad82d68cb0e0564", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n180Part 20 \u2013 Character Variables\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe next stage in our journey is that of character variables. Unlike the strings we\nhave dealt with thus far, a character only takes up one byte of data.\nKeep in mind, when we deal with any character data, we deal with literally two hex\ndigits which are the ASCII code that represents an actual character that we see\non our respective terminals.\nRemember that each hex digit is 4 bits in length. Therefore two hex digits are 8\nbits in length or a byte long. \nTo recap, each character translates down to an ASCII code in hex which the\nprocessor understands. The value of n is 0x6e  hex or 110 decimal. You can\nreview any ASCII table to see where we derived this value. This will come in\nhandy in the next lesson.\nWe start with our third program in C++ which is our \u201cCharacter Variable\u201d\nprogram. Let\u2019s dive in and break each line down step-by-step and see how this\nlanguage works. We will call this example3.cpp and save it to our device.\n#include <iostream> \n \n  \n \nint main(void) { \n \n            char yes_no = \u2018n\u2019; \n \n  \n \n            std::cout << yes_no << std::endl; \n \n  \n \n            return 0; \n \n} \nTo compile this we simply type:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1402, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d5787a04-728c-46f0-b221-fd36c2131a9a": {"__data__": {"id_": "d5787a04-728c-46f0-b221-fd36c2131a9a", "embedding": null, "metadata": {"page_label": "181", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9458737c-0f0e-469d-bcea-2798109337eb", "node_type": "4", "metadata": {"page_label": "181", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "139627fa6950878d7e67a4582a38ce47f805cd605b32ae735d8fdb031f041915", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n181g++ example3.cpp -o example3\nWe simply then type:\n./example3\nSUCCESS! We see \u201c n\u201d printed to the standard output or terminal!\nLet\u2019s break it down:\nWe utilize the char keyword to indicate a character variable to which we assign it\nthe value of n.\nWe then utilize the cout function to print it to the standard output or terminal and\nadd a new line with the endl function.\nThat\u2019s it! Very simple.\nNext week we will dive into Debugging Character Variables.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 469, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7279d589-4bfc-4ce1-b7f5-8d6be7026370": {"__data__": {"id_": "7279d589-4bfc-4ce1-b7f5-8d6be7026370", "embedding": null, "metadata": {"page_label": "182", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9e1b1421-1975-4f26-b926-23ade368dda2", "node_type": "4", "metadata": {"page_label": "182", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "f0df0885d220b805f31d65df152c27e0b3e76327da5c96945e0bec97568bb7cb", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n182Part 21 \u2013 Debugging Character Variables\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s review our code.\nLet\u2019s debug!\nWoah! This is confusing. I don\u2019t see any clear memory addresses being loaded\ninto a register to manipulate the data. \nLet\u2019s keep in mind that we are dealing with a single byte character variable. \nIf you remember from last week each character translates down to an ASCII code\nin hex which the processor understands. The value of n is 0x6e  hex or 110\ndecimal. You can review any ASCII table to see where we derived this value.\nWe do see 0x6e  at main+12  which is the character \u2018 n\u2019.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 794, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eba5058b-1d87-430f-8d0c-dd88b9f71f1e": {"__data__": {"id_": "eba5058b-1d87-430f-8d0c-dd88b9f71f1e", "embedding": null, "metadata": {"page_label": "183", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4b56867f-bf3b-4c7d-8bbe-20a19fe43243", "node_type": "4", "metadata": {"page_label": "183", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "0f4f72f11f346614c314e0c4b5c3540a773a63f840da1b64d42d5a2b05da1f32", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n183\nIf we step into a few times we notice the value has been placed into r3. When we\nprint the value in r3 we now see our \u2018 n\u2019 character.\nLet\u2019s continue.\nWe now see the \u2018 n\u2019 printed to the standard output as expected.\nIt is important that you understand this process and understand that each\ncharacter translates into an ASCII value to which the processor loads directly into\na respective register. Our previous experience we have seen a string loaded\ndirectly into a memory location and this is not the case here.\nNext week we will dive into Hacking Character Variables.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 585, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0f58556b-2f25-4cc0-b0a7-62072016738c": {"__data__": {"id_": "0f58556b-2f25-4cc0-b0a7-62072016738c", "embedding": null, "metadata": {"page_label": "184", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "da9d5d86-48b0-49a2-88fd-70a53be8d565", "node_type": "4", "metadata": {"page_label": "184", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "484fae226b9944d929f3be90dedb1a36770b42f2605a5fa88bb9d72818005896", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n184Part 22 \u2013 Hacking Character Variables\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s review our code.\nLet\u2019s hack!\nWe again see the direct value of 0x6e  moved into r3 at main+12  which is our \u2018 n\u2019.\nAfter stepping into 4 times and verify the value in r3 which we clearly see as \u2018 n\u2019.\nLet\u2019s hack the value in r3 to a \u2018 y\u2019 and then reexamine the value in r3. We can now\nclearly see it has been changed to \u2018 y\u2019.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 601, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ec9ed378-df60-4b70-baa1-4f0e586b2662": {"__data__": {"id_": "ec9ed378-df60-4b70-baa1-4f0e586b2662", "embedding": null, "metadata": {"page_label": "185", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "26910b55-aa06-4da6-b829-a77fd035d517", "node_type": "4", "metadata": {"page_label": "185", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "e8b2b77503c1ed207701dc12e4b17cbd6085a4116bdf257f903f6877e6d18111", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n185\nAs we continue we successfully see our hack worked! We see the value of \u2018 y\u2019\nprinting to the standard output.\nNext week we will dive into Boolean Variables.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 174, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "249cb330-3f72-432e-bce7-5bdd2e59a2bd": {"__data__": {"id_": "249cb330-3f72-432e-bce7-5bdd2e59a2bd", "embedding": null, "metadata": {"page_label": "186", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a142d709-6fdc-444e-94c0-f2213e0f59f6", "node_type": "4", "metadata": {"page_label": "186", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "65fc97bf47e735790ac03702ac19dd793313b2807555fe9b807ce57b37467fac", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n186Part 23 \u2013 Boolean Variables\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe next stage in our journey is that of Boolean variables. The name goes back to\nthe great George Boole to which all modern computer science has derived. \nAt the lowest level a value is either 0 or 1, false or true, + < 5 volts or +5 volts, etc.\nLet\u2019s examine our code.\n#include <iostream> \n \n  \n \nint main(void) { \n \n            bool isHacked = false; \n \n  \n \n            std::cout << isHacked << std::endl; \n \n  \n \n            return 0; \n \n} \nTo compile this we simply type:\ng++ example4.cpp -o example4 \n \n./example4 \nSUCCESS! We see 0 printed to the standard output or terminal!\nLet\u2019s break it down:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 867, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "835f3bb8-087a-43c2-8981-767a444eb25d": {"__data__": {"id_": "835f3bb8-087a-43c2-8981-767a444eb25d", "embedding": null, "metadata": {"page_label": "187", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "16646532-c8ef-4726-a9d6-4f9155c08986", "node_type": "4", "metadata": {"page_label": "187", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "9a986586506eb325056049795f4ba2b02bb4be969b71687fa6c8ddeb7090bc24", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n187We create a boolean variable called isHacked to which we assign a value of\nfalse  or 0. When we run the binary we clearly see the value 0 that successfully\nwas echoed to the standard output.\nNext week we will dive into Debugging Boolean Variables.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 264, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "68111e1b-f77b-4ba6-b461-0ee2ff5215e5": {"__data__": {"id_": "68111e1b-f77b-4ba6-b461-0ee2ff5215e5", "embedding": null, "metadata": {"page_label": "188", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c48001d3-1653-405f-a21f-3b93fc025d96", "node_type": "4", "metadata": {"page_label": "188", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "f48bdfd8044504b02c8fd088300cf6ec8b7dd60b639c66d24f3ceb111b382b59", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n188Part 24 \u2013 Debugging Boolean Variables\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s re-examine our code.\nLet\u2019s debug.\nLet\u2019s step 4 times and disassemble.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 348, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d3a440c5-3af9-4c1a-8831-08274f04c25c": {"__data__": {"id_": "d3a440c5-3af9-4c1a-8831-08274f04c25c", "embedding": null, "metadata": {"page_label": "189", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "159e1f98-9ea7-49da-801b-4ae5028ce89f", "node_type": "4", "metadata": {"page_label": "189", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "67de700bbc321651eff347d9511dba2f94edd09a7c7370a80c51784682e75634", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n189\nLet\u2019s examine what is now in r3.\nAs we can clearly see the value in isHacked  is 0 or false  which makes sense\nbased on our c++ source code.\nI know these lessons may seem trivial however Reverse Engineering is all about\nbreaking things down in their most basic components. Reverse Engineering is\nabout patience and logical flow. It is critical that you take the time and work\nthrough all of these examples with a Raspberry Pi device so that you can have a\nproper appreciation for how the process actually works.\nNext week we will dive into Hacking Boolean Variables.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 584, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7c135e93-c602-4db3-99fd-438a65a71a83": {"__data__": {"id_": "7c135e93-c602-4db3-99fd-438a65a71a83", "embedding": null, "metadata": {"page_label": "190", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6881ea90-7077-4357-a901-df4361968cc2", "node_type": "4", "metadata": {"page_label": "190", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "3305964f8acd2955d97dfbf1ec94a88a330a03e22247d0bcdb38991bb4b2455b", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n190Part 25 \u2013 Hacking Boolean Variables\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s re-examine our code.\nLet\u2019s hack!\nLet\u2019s break at main, run and disas in addition to step into four times.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 381, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "108c682a-73b8-4468-b458-79213beae740": {"__data__": {"id_": "108c682a-73b8-4468-b458-79213beae740", "embedding": null, "metadata": {"page_label": "191", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2435f0f8-f5f0-442b-b1c2-8da18b5b33dd", "node_type": "4", "metadata": {"page_label": "191", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "0d59f80318384afaad2ca358287e57a2bd25e0973b7fd14ef4543d31a178bee1", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n191\nWe see that 0 or FALSE  is moved into r3 at main+12.\nVery simply we set r3 to 1 or TRUE  and continue execution to which we notice\nthat the Boolean variable isHacked  is now TRUE .\nIt\u2019s that simple folks! These elementary examples will help build your mental\nlibrary of examples of how to approach everything in code and understanding how\nto take control of code execution no matter what!\nNext week we will dive into Integer Variables.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 453, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ded54989-e7d9-456f-adeb-ce9b082e2115": {"__data__": {"id_": "ded54989-e7d9-456f-adeb-ce9b082e2115", "embedding": null, "metadata": {"page_label": "192", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d37d7220-a050-48e2-816f-5fa7aa46f342", "node_type": "4", "metadata": {"page_label": "192", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "b2d0c276cd284fbc47a6bd3c4d9a646beb7f6c2a7b01aba83278d66d41dfcb6b", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n192Part 26 \u2013 Integer Variables\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe next stage in our journey is that of Integer variables. \nA 32-bit register can store 2^32 different values. The range of integer values that\ncan be stored in 32 bits depends on the integer representation used. With the two\nmost common representations, the range is 0 through 4,294,967,295 (2^32 \u2212 1)\nfor representation as an (unsigned) binary number, and \u22122,147,483,648 (\u22122^31)\nthrough 2,147,483,647 (2^31 \u2212 1) for representation as two's complement.\nKeep in mind with 32-bit memory addresses you can directly access a maximum\nof 4 GB of byte-addressable memory.\nLet\u2019s examine our code.\n#include <iostream> \n \n  \n \nint main(void) { \n \n            int myNumber = 777; \n \n  \n \n            std::cout << myNumber << std::endl; \n \n  \n \n            return 0; \n \n} \nTo compile this we simply type:\ng++ example5.cpp -o example5\n./example5", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1097, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "27407ba2-109a-4d98-aa9a-7140a8fd9c0d": {"__data__": {"id_": "27407ba2-109a-4d98-aa9a-7140a8fd9c0d", "embedding": null, "metadata": {"page_label": "193", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "15782b06-5ff9-4a48-952e-0addcbd1b912", "node_type": "4", "metadata": {"page_label": "193", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "ba0ac1b9d82d57e614b13b62c971bbcf2abe077e2d7b48311548aa2b16f37699", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n193SUCCESS! We see 777 printed to the standard output or terminal!\nLet\u2019s break it down:\nWe assign the integer 777 directly into the variable myNumber and then print it\nout to the terminal with the c++ cout  function.\nNext week we will dive into Debugging Integer Variables.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 287, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f2228ea2-912b-443b-87ae-16d703a114d6": {"__data__": {"id_": "f2228ea2-912b-443b-87ae-16d703a114d6", "embedding": null, "metadata": {"page_label": "194", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8168d032-fdd7-4b99-a39b-ffa2afe2a5bb", "node_type": "4", "metadata": {"page_label": "194", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "ae08008e352c8b38322c5d16849b61b23254685dac204d1d96acbafcc26cdb57", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n194Part 27 \u2013 Debugging Integer Variables\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s review our code. I again want to include the below information from last\nweek\u2019s lesson to emphasize what is going on regarding integers.\nA 32-bit register can store 2^32 different values. The range of integer values that\ncan be stored in 32 bits depends on the integer representation used. With the two\nmost common representations, the range is 0 through 4,294,967,295 (2^32 \u2212 1)\nfor representation as an (unsigned) binary number, and \u22122,147,483,648 (\u22122^31)\nthrough 2,147,483,647 (2^31 \u2212 1) for representation as two's complement.\nKeep in mind with 32-bit memory addresses you can directly access a maximum\nof 4 GB of byte-addressable memory.\nLet\u2019s debug!\nWe see at main+12 the address at 0x10730 loading data into r3. Let\u2019s take a\ncloser look.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1023, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "80f9d850-8ec0-46b5-b4ad-8df23f5f8133": {"__data__": {"id_": "80f9d850-8ec0-46b5-b4ad-8df23f5f8133", "embedding": null, "metadata": {"page_label": "195", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "43597e43-cfe8-4e5e-b2ea-5baa95b2a0f7", "node_type": "4", "metadata": {"page_label": "195", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "1aedf84a411464b062edf3c30927ca03978ec9fb99c04f99a34351e2ccda6713", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n195When we examine the data inside 0x10730  we clearly see the integer 777\npresent. When we continue we see 777 echoed back to the terminal which makes\nsense as we utilized the cout  function within c++.#linux #arm #asm #cplusplus\n#reverseengineering\nNext week we will dive into Hacking Integer Variables.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 319, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5ac98ee6-84e7-4ac2-ba82-3d42a07efb62": {"__data__": {"id_": "5ac98ee6-84e7-4ac2-ba82-3d42a07efb62", "embedding": null, "metadata": {"page_label": "196", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "93b9c1c5-b1d9-480d-bddf-4831a93cd2a7", "node_type": "4", "metadata": {"page_label": "196", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "2e3f2d56636e4aa60f8eab8ca9ca27588d4b79623160d7dedbbffa8bdaf79c1d", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n196Part 28 \u2013 Hacking Integer Variables\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s review our code.  \nLet\u2019s hack!\nLet\u2019s take a look again inside the memory location of 0x10730 .\nAs we can clearly see the integer value of 777 appears and when we continue it\nechoes out to the terminal the value of 777 which corresponds with our c++\nfunction cout .\nLet\u2019s hack the value inside of 0x10730  and set the value to 666 and then\nreexamine the value inside 0x10730  and continue.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 665, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cd97d70f-8002-49db-a2db-8e0687d46e7a": {"__data__": {"id_": "cd97d70f-8002-49db-a2db-8e0687d46e7a", "embedding": null, "metadata": {"page_label": "197", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3986fde8-d903-4a14-8056-cfe33e452cba", "node_type": "4", "metadata": {"page_label": "197", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "82b16726e8d1e4962d436c01efb9563cc9124faf714dae191b95adde6efdfd88", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n197Success! As we can see we hacked the value to 666 as we continue we see it\nechoed out to stdout.\nNext week we will dive into Float Variables.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 158, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "72618787-33d6-4c8a-8201-98ef58e77c1c": {"__data__": {"id_": "72618787-33d6-4c8a-8201-98ef58e77c1c", "embedding": null, "metadata": {"page_label": "198", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "abb25073-cd6b-4285-b4c6-669c9a2ee06b", "node_type": "4", "metadata": {"page_label": "198", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "4ddaad4e72aaabdc401dfc3c50fb08becc6a1341771cb7b488467c69c88458dc", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n198Part 29 \u2013 Float Variables\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe next stage in our journey is that of Floating-Point variables. \nA floating-point variable is different from an integer as it has a fractional value\nattached to which we designate with a period.\nLet\u2019s examine our code.\n#include <iostream> \n \n  \n \nfloat main(void) { \n \n            int myNumber = 1337.1; \n \n  \n \n            std::cout << myNumber << std::endl; \n \n  \n \n            return 0; \n \n} \nTo compile this we simply type:\ng++ example6.cpp -o example6\n./example6\nSUCCESS! We see 1337.1 printed to the standard output or terminal!\nLet\u2019s break it down:\nWe assign the floating-point variable  directly into the variable myNumber and\nthen print it out to the terminal with the c++ cout  function.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 961, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8ad1ccc3-af7b-41f7-9ff8-76b184ac0162": {"__data__": {"id_": "8ad1ccc3-af7b-41f7-9ff8-76b184ac0162", "embedding": null, "metadata": {"page_label": "199", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f91eed8a-fdf9-4df0-a1b4-8ca4f602780a", "node_type": "4", "metadata": {"page_label": "199", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "b8df395c4d0ea3a1123746c8a576d69b5f5ed723fd31c1e259c7642525dcbe12", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n199Thus far we have a good understanding of the ARM registers however next week\nwe will introduce the registers within the math co-processor that work with\nfloating-point variables. The registers you have worked with up to now only store\nwhole numbers or integers and at the Assembly level, any fractional value must\nbe manipulated through the math co-processor registers.\nNext week we will dive into Debugging Float Variables.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 441, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f0c430a1-ffe3-4edc-91e9-82f46cacadc6": {"__data__": {"id_": "f0c430a1-ffe3-4edc-91e9-82f46cacadc6", "embedding": null, "metadata": {"page_label": "200", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ad3ceefa-1a91-40f6-9834-cebc42547b76", "node_type": "4", "metadata": {"page_label": "200", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "d8b4ce2adcfcc2d59d5bbd92cff3065900823b2925ce7b7db77a988eedbcac5c", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n200Part 30 \u2013 Debugging Float Variables\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s re-examine our code.\n#include <iostream> \n \n  \n \nint main(void) { \n \n            float myNumber = 1337.1; \n \n  \n \n            std::cout << myNumber << std::endl; \n \n  \n \n            return 0; \n \n} \nLet\u2019s debug!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 487, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6079ff8b-dfff-4bce-91d8-f6a76f6c5deb": {"__data__": {"id_": "6079ff8b-dfff-4bce-91d8-f6a76f6c5deb", "embedding": null, "metadata": {"page_label": "201", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9369680e-5f35-488a-9d0f-8346c054c7aa", "node_type": "4", "metadata": {"page_label": "201", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "4cd2bed1faa5e48623e17a2bd5cfe4ccd6b49805b3e06d9b79a6eff4985e1161", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n201\nLet\u2019s break on main+20  and continue to that point.\nLet\u2019s examine what value is inside r11-8 . We clearly see it is 1337.09998  which\napproximates our value in our original c++ code. Keep in mind a float has roughly\n7 decimal digits of precision and that is why we do not see 1337.1  so please\nremember that as we go forward. \nWe can also see this value in high memory.\nLet\u2019s break on main+28  and continue.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 425, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4d02f1aa-16f7-4910-9131-66ed773a772d": {"__data__": {"id_": "4d02f1aa-16f7-4910-9131-66ed773a772d", "embedding": null, "metadata": {"page_label": "202", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3f9ca530-b9c6-41b8-b347-0a9394467fbc", "node_type": "4", "metadata": {"page_label": "202", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "173e241df946b3c9688987e779d43ed6aa33015e2cd0ee953d94ab74758db2c8", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n202We see a strange new instruction. We see vldr and the value within r11, #8  being\nmoved into  s0. So what is s0? We have a math co-processor which has a series\nof additional registers that work with decimal or floating-point numbers. Here we\nsee an example of such to which the value of 1337.09998 is being moved into\ns0. The vldr instruction loads a constant value into every element of a single-\nprecision or double-precision register such as  s0.\nWe can only see these special registers if we do a info registers all command as\nwe do below.\nBelow we see the value now being moved into s0.\nNext week we will dive into Hacking Float Variables.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 661, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "321705b9-7014-4628-b0b0-d31d79f57078": {"__data__": {"id_": "321705b9-7014-4628-b0b0-d31d79f57078", "embedding": null, "metadata": {"page_label": "203", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "758e5edd-187c-415d-9408-078cb2349960", "node_type": "4", "metadata": {"page_label": "203", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "477df9c65fb954b7ed1828c9213e58726692254cb57f0c46af3e88c37c96278e", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n203Part 31 \u2013 Hacking Float Variables\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s re-examine our code.\n#include <iostream> \n \n  \n \nint main(void) { \n \n            int myNumber = 1337.1; \n \n  \n \n            std::cout << myNumber << std::endl; \n \n  \n \n            return 0; \n \n} \nLet\u2019s review last week\u2019s tutorial.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 505, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3053d496-c607-4fe2-94e8-08fd6f736ce1": {"__data__": {"id_": "3053d496-c607-4fe2-94e8-08fd6f736ce1", "embedding": null, "metadata": {"page_label": "204", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8b8092dd-b6c3-4ac2-a878-fba5b499fd1d", "node_type": "4", "metadata": {"page_label": "204", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "dc2971639e2285065d809dabd2e0aa515246419192238c91652f0803d92b8079", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n204\nLet\u2019s break on main+20  and continue to that point.\nLet\u2019s examine what value is inside r11-8 . We clearly see it is 1337.09998  which\napproximates our value in our original c++ code. Keep in mind a float has roughly\n7 decimal digits of precision and that is why we do not see 1337.1  so please\nremember that as we go forward.\nWe can also see this value in high memory.\nLet\u2019s break on main+28  and continue.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 424, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e6ad0444-ea8a-4da5-8941-a3362ae09818": {"__data__": {"id_": "e6ad0444-ea8a-4da5-8941-a3362ae09818", "embedding": null, "metadata": {"page_label": "205", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c7a11c9c-9f8c-421c-a080-55ce33d33d25", "node_type": "4", "metadata": {"page_label": "205", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "f9f140483fef55f1e96c09640dcd55df70c2b25a3cf77d9f24c71a09b5f4f3b2", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n205We see a strange new instruction. We see vldr and the value within r11, #8  being\nmoved into  s0. So what is s0? We have a math co-processor which has a series\nof additional registers that work with decimal or floating-point numbers. Here we\nsee an example of such to which the value of 1337.09998 is being moved into\ns0. The vldr instruction loads a constant value into every element of a single-\nprecision or double-precision register such as  s0.\nWe can only see these special registers if we do a info registers all command as\nwe do below.\nBelow we see the value now being moved into s0.\nLet\u2019s hack!\nLet\u2019s now look at the registers and see what has transpired.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 681, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "61bf6468-b8d4-43eb-b0d7-6f45b523b6d7": {"__data__": {"id_": "61bf6468-b8d4-43eb-b0d7-6f45b523b6d7", "embedding": null, "metadata": {"page_label": "206", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "889cd5dc-9090-4e65-b17d-9c5ac8c95733", "node_type": "4", "metadata": {"page_label": "206", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "af510a0a4fef9cbf78f93da9b126c95e183c5c64bf25a0e64af8d68a6799874a", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n206\nAs you can see we have hacked the value (less the precision issue of the float\nvariable accurate up to 6 decimal places)!\nFinally as we continue we see our hacked value echoed back out to the terminal\nwhen the c++ cout function executes.\nNext week we will dive into Double Variables.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 301, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2d65353c-b922-4c43-a418-fb640bb3ec21": {"__data__": {"id_": "2d65353c-b922-4c43-a418-fb640bb3ec21", "embedding": null, "metadata": {"page_label": "207", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "370785f7-98b7-4135-8c1c-c0a7b6b08831", "node_type": "4", "metadata": {"page_label": "207", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "113c0c5be05161c985e28971eab8e3053cd0a415d07db486e1bd9a14d4b12764", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n207Part 32 \u2013 Double Variables\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe next stage in our journey is that of double-precision floating-point variables. \nA double-precision floating-point variable is different from a floating-point variable\nas it is 64-bits wide and 15-17 significant digits of precision.\nLet\u2019s examine our code.\n#include <iostream> \n \n  \n \nint main(void) { \n \n            double myNumber = 1337.77; \n \n  \n \n            std::cout << myNumber << std::endl; \n \n  \n \n            return 0; \n \n} \nTo compile this we simply type:\ng++ example7.cpp -o example7\n./example7\nSUCCESS! We see 1337.77 printed to the standard output or terminal!\nLet\u2019s break it down:\nWe assign the floating-point variable  directly into the variable myNumber and\nthen print it out to the terminal with the c++ cout  function.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1004, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "27ffe949-4c47-4137-8c4d-7d8c33c8bdf4": {"__data__": {"id_": "27ffe949-4c47-4137-8c4d-7d8c33c8bdf4", "embedding": null, "metadata": {"page_label": "208", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2f76dde9-f6f2-4fc9-a1fb-d7eda5976711", "node_type": "4", "metadata": {"page_label": "208", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "75a1d6b0cb417452f0a0a0daac6b3439ac55e3355046b5c194546354e86d6825", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n208Next week we will dive into Debugging Double Variables.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 72, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "331f30b8-a679-4340-9271-864f45dcdda6": {"__data__": {"id_": "331f30b8-a679-4340-9271-864f45dcdda6", "embedding": null, "metadata": {"page_label": "209", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f2a293eb-782a-4c23-adb8-bdaa1fc239e2", "node_type": "4", "metadata": {"page_label": "209", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "b00786326f28b58246bbcfda6f2d38e098d9480f49e721731c1908e4e07d6c8d", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n209Part 33 \u2013 Debugging Double Variables\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s review our code.\nint main(void) { \n \n            double myNumber = 1337.77; \n \n  \n \n            std::cout << myNumber << std::endl; \n \n  \n \n            return 0; \n \n} \nLet\u2019s debug!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 458, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "85e848a9-7da3-440a-abe9-458a4c7682d8": {"__data__": {"id_": "85e848a9-7da3-440a-abe9-458a4c7682d8", "embedding": null, "metadata": {"page_label": "210", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "55d7d7a5-df40-4b07-82f1-bea72fde5715", "node_type": "4", "metadata": {"page_label": "210", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "84186a36a5532ca0ef6cc4ad766b23cf0421313852f307697fdab9c7daeb1f7e", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n210Let\u2019s set a breakpoint at main+24  and continue.\nWe see the strd r2, [r11, #-12]  and we have to fully understand that this means\nwe are storing the value at the offset of -12 from register r11 into r2. Let\u2019s now\nexamine what exactly resides there.  \nVoila! We see 1337.77  at that offset location or specifically stored into 0x7efff230\nin memory.\nLet\u2019s step into twice which executes the vldr d0, [r11, #-12]  as we understand\nthat 1337.77  will now be loaded into the double precision math co-processor d0\nregister. Let\u2019s now print the value at that location below.\nFinally let\u2019s continue and watch the value echo to the terminal. This completes our\ncout  c++ function.\nNext week we will dive into Hacking Double Variables.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 742, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5cf21112-e887-4568-8030-0858b007ce30": {"__data__": {"id_": "5cf21112-e887-4568-8030-0858b007ce30", "embedding": null, "metadata": {"page_label": "211", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed8a4230-ea99-4466-a53f-cc58706ccf72", "node_type": "4", "metadata": {"page_label": "211", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "367ac9130078f372bdc7e2c478f9e0827deac667b781363208ad50591295b422", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n211Part 34 \u2013 Hacking Double Variables\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s review our code.\nint main(void) { \n \n            double myNumber = 1337.77; \n \n  \n \n            std::cout << myNumber << std::endl; \n \n  \n \n            return 0; \n \n} \nLet\u2019s debug!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 456, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e91f7031-6ee6-41bf-af29-0d966671b43a": {"__data__": {"id_": "e91f7031-6ee6-41bf-af29-0d966671b43a", "embedding": null, "metadata": {"page_label": "212", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1d341cfd-fcf9-406e-af1f-fc04de798b59", "node_type": "4", "metadata": {"page_label": "212", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "f4b0f12254c6ca80f12b0664d961526293a3561c0a05774a557818a6bac15175", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n212Let\u2019s set a breakpoint at main+24  and continue.\nWe see the strd r2, [r11, #-12]  and we have to fully understand that this means\nwe are storing the value at the offset of -12 from register r11 into r2. Let\u2019s now\nexamine what exactly resides there.  \nVoila! We see 1337.77  at that offset location or specifically stored into 0x7efff230\nin memory.\nLet\u2019s step into twice which executes the vldr d0, [r11, #-12]  as we understand\nthat 1337.77  will now be loaded into the double precision math coprocessor d0\nregister. Let\u2019s now print the value at that location below.\nLet\u2019s hack the d0 register!\nNow let\u2019s reexamine the value inside d0.\nLet\u2019s continue.\nSuccessfully hacked!\nNext week we will dive into the SizeOf Operator.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 738, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "567253c2-1975-4ee0-8fcb-82a6cae8f112": {"__data__": {"id_": "567253c2-1975-4ee0-8fcb-82a6cae8f112", "embedding": null, "metadata": {"page_label": "213", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2b42418c-01ff-4b46-aef9-166ea7e7d5c3", "node_type": "4", "metadata": {"page_label": "213", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "287f88850eb926df619d8b7a799f28ecc3fbac3d657fa62b92c1163fa030ffaa", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n213Part 35 \u2013 SizeOf Operator\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe next stage in our journey is that of the SizeOf operator. \nLet\u2019s examine our code.\n#include <iostream> \n \n  \n \nint main(void) { \n \n            int myNumber = 16; \n \n            int myNumberSize = sizeof(myNumber); \n \n  \n \n            std::cout << myNumberSize << std::endl; \n \n  \n \n            return 0; \n \n} \nTo compile this we simply type:\ng++ example8.cpp -o example8\n./example8\nWe see 4 printed to the screen.\nLet\u2019s break it down:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 699, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "66aea261-9950-42d0-ab48-095e355e5184": {"__data__": {"id_": "66aea261-9950-42d0-ab48-095e355e5184", "embedding": null, "metadata": {"page_label": "214", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a7a94fea-ef59-4a13-95e4-c04e7c6e2076", "node_type": "4", "metadata": {"page_label": "214", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "46f28268364321b5d110ea0575de3b7beede6f2dffb418037de715e134f6212e", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n214We create a variable myNumber = 16  to which we create another variable\nmyNumberSize  which holds the value of the size of myNumber . We see that\nwhen we execute our code it shows 4 therefore we see that the SizeOf operator\nindicates an integer is 4 bytes wide.\nNext week we will dive into Debugging SizeOf Operator.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 333, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "998a32cd-1cb1-485b-9216-682e31a8acf1": {"__data__": {"id_": "998a32cd-1cb1-485b-9216-682e31a8acf1", "embedding": null, "metadata": {"page_label": "215", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "04daa350-43f6-4096-b2b8-84737a0322e7", "node_type": "4", "metadata": {"page_label": "215", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "39008704db81ac39b03292c697c6b4081be819e6ee5940685a437baeae4abba8", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n215Part 36 \u2013 Debugging SizeOf Operator\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s re-examine our code.\n#include <iostream> \n \n  \n \nint main(void) { \n \n            int myNumber = 16; \n \n            int myNumberSize = sizeof(myNumber); \n \n  \n \n            std::cout << myNumberSize << std::endl; \n \n  \n \n            return 0; \n \n} \nRemember that we create a variable myNumber = 16  to which we create another\nvariable myNumberSize  which holds the value of the size of myNumber . We see\nthat when we execute our code it shows 4 therefore we see that the SizeOf\noperator indicates an integer is 4 bytes wide.\nLet\u2019s debug and break on main.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 831, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8e6be289-721d-4da3-90c7-6a0d21979d37": {"__data__": {"id_": "8e6be289-721d-4da3-90c7-6a0d21979d37", "embedding": null, "metadata": {"page_label": "216", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "025b35af-060b-4805-ae71-7307b2f611ac", "node_type": "4", "metadata": {"page_label": "216", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "c786b62ff72201e620380572b2bb4d9a85969f0814bbbc1959eecde293d88cb4", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n216\nLet\u2019s break on main+20  as we can see the value of 4 being moved into r3.\nLet\u2019s examine what is going on at main+16  as we can see that we are storing into\nthe value of $r11-8  that which exists in r3 which in our case is 16. This makes\nsense as when we examine our original code the value of myNumber  was in fact\n16. We can see this here when we examine the value inside $r11-8 .\nAs we can see above the value inside $r11-12  is 4 as that represents the value\nthat SizeOf  is returning as the integer 16 is in fact 4 bytes wide.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 548, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ad0007b1-97a1-48a4-841b-85fb92bfae5f": {"__data__": {"id_": "ad0007b1-97a1-48a4-841b-85fb92bfae5f", "embedding": null, "metadata": {"page_label": "217", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6b26081e-3f1c-4b0d-b17c-5bcfc05ea427", "node_type": "4", "metadata": {"page_label": "217", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "70ee8c58bfcee3eda79a7012834917a63af2ddb5a10ea193c5a5d2679c46ab1d", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n217\nFinally when we continue execution we in fact see the value 4 echoed to the\nterminal.\nNext week we will dive into Hacking SizeOf Operator.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 156, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "57fe7e36-8fa3-41de-b860-6aa16035e370": {"__data__": {"id_": "57fe7e36-8fa3-41de-b860-6aa16035e370", "embedding": null, "metadata": {"page_label": "218", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "34e16a2e-e2b0-4af1-ab79-ffcf138a3011", "node_type": "4", "metadata": {"page_label": "218", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "069d86f576bb59e1998522f9463f7481971c5689787035e2eb9d3687fc74ffc2", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n218Part 37 \u2013 Hacking SizeOf Operator\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s re-examine our code.\n#include <iostream> \n \n  \n \nint main(void) { \n \n            int myNumber = 16; \n \n            int myNumberSize = sizeof(myNumber); \n \n  \n \n            std::cout << myNumberSize << std::endl; \n \n  \n \n            return 0; \n \n} \nRemember that we create a variable myNumber = 16  to which we create another\nvariable myNumberSize  which holds the value of the size of myNumber . We see\nthat when we execute our code it shows 4 therefore we see that the SizeOf\noperator indicates an integer is 4 bytes wide.\nLet\u2019s review last week\u2019s code as we start with debugging and breaking on main.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 877, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f5a3951c-d70d-44b6-b1c7-227d77e113c6": {"__data__": {"id_": "f5a3951c-d70d-44b6-b1c7-227d77e113c6", "embedding": null, "metadata": {"page_label": "219", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7b9337fc-3ebc-4659-9456-630f5e050f8d", "node_type": "4", "metadata": {"page_label": "219", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "0eaa52c9f160d6f5f2ed7125bdaaec648fc7bbaf131ce6d2dbf458f2ef78f545", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n219\nLet\u2019s break on main+20  as we can see the value of 4 being moved into r3.\nLet\u2019s examine what is going on at main+16  as we can see that we are storing into\nthe value of $r11-8  that which exists in r3 which in our case is 16. This makes\nsense as when we examine our original code the value of myNumber  was in fact\n16. We can see this here when we examine the value inside $r11-8 .\nAs we can see above the value inside $r11-12  is 4 as that represents the value\nthat SizeOf  is returning as the integer 16 is in fact 4 bytes wide.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 548, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "77a05354-927b-43d1-bae5-8eb4e85e7d2e": {"__data__": {"id_": "77a05354-927b-43d1-bae5-8eb4e85e7d2e", "embedding": null, "metadata": {"page_label": "220", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb45a8c0-1ae8-4ffb-8b03-52c6d539e5a8", "node_type": "4", "metadata": {"page_label": "220", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "41536114c7d3e3462bd23d9a38f67de027c151d7cb1be8401af056f778ce6fe6", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n220\nFinally when we continue execution we in fact see the value 4 echoed to the\nterminal.\nLet\u2019s hack!\nWe run and break on main+28 .\nWe see the value in r3 is 4 which is expected.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 192, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "13d1cc46-c947-4c38-aa07-056a39e651a8": {"__data__": {"id_": "13d1cc46-c947-4c38-aa07-056a39e651a8", "embedding": null, "metadata": {"page_label": "221", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dadc8972-4a78-4eab-a29c-dcfe03395c79", "node_type": "4", "metadata": {"page_label": "221", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "7829f05ee48d12099e72e34454ee10e9efa630fbf3ab71cd3ba4012f6db0ad0e", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n221\nWe break on main+36 .\nWe see the value in r1 is 4 which should make logical sense as the value was\nstored from r3 into r11-12  and then back to r1.\nLet\u2019s hack the value in r1!\nSuccess! We have hacked the machine!\nNext week we will dive into the Pre-Increment Operator.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 286, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b03da278-5577-4ede-ac0a-14db75846ea0": {"__data__": {"id_": "b03da278-5577-4ede-ac0a-14db75846ea0", "embedding": null, "metadata": {"page_label": "222", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d5db09f8-3b98-4834-982f-e6e8b65acfbb", "node_type": "4", "metadata": {"page_label": "222", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "2fd26ee8579c1ffd3e543141f2783d21651c0194152a024ca86229d7bdaa380c", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n222Part 38 \u2013 Pre-Increment Operator\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe next stage in our journey is that of the pre-increment operator. \nLet\u2019s examine our code.\n#include <iostream> \n \n  \n \nint main(void) { \n \n            int myNumber = 16; \n \n            int myNewNumber = ++myNumber; \n \n  \n \n            std::cout << myNewNumber << std::endl; \n \n  \n \n            return 0; \n \n} \nTo compile this we simply type:\ng++ example9.cpp -o example9\n./example9\nWe see 17 printed to the screen.\nLet\u2019s break it down:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 706, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b40a9cbb-2d9d-4faa-b7f2-022306004e9c": {"__data__": {"id_": "b40a9cbb-2d9d-4faa-b7f2-022306004e9c", "embedding": null, "metadata": {"page_label": "223", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "84d77eb5-683c-4857-b34b-c184f2f8c4c3", "node_type": "4", "metadata": {"page_label": "223", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "01d6d3b152689aa3c0aa81b719909d3bb21ba6b6f254f6dd53ddfbcae4a5fb2e", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n223We create a variable myNumber = 16  to which we create another variable\nmyNewNumber  which pre-increments the value of myNumber . We see that\nwhen we execute our code it shows 17.\nWhen we pre-increment the value of the variable is incremented before assigning\nit to another variable. For example myNumber  is 16 so it gets incremented before\nbeing assigned to myNewNumber  so therefore we get 17.\nNext week we will dive into Debugging Pre-Increment Operator.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 475, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d623090a-56ac-408d-a5b5-c0905b4142b2": {"__data__": {"id_": "d623090a-56ac-408d-a5b5-c0905b4142b2", "embedding": null, "metadata": {"page_label": "224", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "56a6db1e-9c32-4d6b-af81-310b55a26aae", "node_type": "4", "metadata": {"page_label": "224", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "f194b6819bfe82955aaed96a706db9c87084bc49270432bb5cdca33b31a71ed3", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n224Part 39 \u2013 Debugging Pre-Increment\nOperator\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s re-examine our code.\n#include <iostream> \n \n  \n \nint main(void) { \n \n            int myNumber = 16; \n \n            int myNewNumber = ++myNumber; \n \n  \n \n            std::cout << myNewNumber << std::endl; \n \n  \n \n            return 0; \n \n} \nTo compile this we simply type:\ng++ example9.cpp -o example9\n./example9\nWe see 17 printed to the screen.\nLet\u2019s break it down:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 649, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "420e9713-7ce7-4e3a-b8c2-06815b657d26": {"__data__": {"id_": "420e9713-7ce7-4e3a-b8c2-06815b657d26", "embedding": null, "metadata": {"page_label": "225", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c4d55d9b-0b56-4766-ac1f-959856f3e1ae", "node_type": "4", "metadata": {"page_label": "225", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "15d8b8290097b8b11dded2ce2a88442f7ddbddbcbf71acfa8d4f30a738374e1f", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n225We create a variable myNumber = 16  to which we create another variable\nmyNewNumber  which pre-increments the value of myNumber . We see that\nwhen we execute our code it shows 17.\nWhen we pre-increment the value of the variable is incremented before assigning\nit to another variable. For example myNumber  is 16 so it gets incremented before\nbeing assigned to myNewNumber  so therefore we get 17.\nLet\u2019s debug.\nWe do our normal start in gdb and break on main. Take note at main+24  we are\nmoving the value of 1 into r3. We then see at main+28  we are storing that value\nat r11-8  to which we will set a breakpoint and continue.\nAs we evaluate the value in r3 at this stage we see 17. Remember back in our\noriginal code that the value in the myNumber  variable was 16. We can see that\nthe pre-increment operator was successful to increment the value 1 to give us 17.\nWe see that when we continue through the code the value 17 is successfully\nechoed to the terminal as expected.\nNext week we will dive into Hacking Debugging Pre-Increment Operator.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1062, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "86d84a26-9d33-4cd5-b1ef-27043c2ff185": {"__data__": {"id_": "86d84a26-9d33-4cd5-b1ef-27043c2ff185", "embedding": null, "metadata": {"page_label": "226", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ef4b1ce3-8b25-47bd-973f-ec0145ff078f", "node_type": "4", "metadata": {"page_label": "226", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "39fb8e05844bf06da0b59eb3fae84d5d872092aa244cf9d116c55153c62c1a61", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n226Part 40 \u2013 Hacking Pre-Increment\nOperator\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s one again re-examine our code.\n#include <iostream> \n \n  \n \nint main(void) { \n \n            int myNumber \n= 16; \n \n            int \nmyNewNumber = ++myNumber; \n \n  \n \n            std::cout \n<< myNewNumber << std::endl; \n \n  \n \n            return 0; \n \n} \nTo compile this we simply type:\ng++ example9.cpp -o example9\n./example9\nWe see 17 printed to the screen.\nLet\u2019s break it down:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 660, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4f58e685-1bd5-4078-90bf-e50349e1d038": {"__data__": {"id_": "4f58e685-1bd5-4078-90bf-e50349e1d038", "embedding": null, "metadata": {"page_label": "227", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5e02453c-5bdd-49ef-b999-783ee23e976f", "node_type": "4", "metadata": {"page_label": "227", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "154c682ebafbb61c1427c8ce31b1ecb7d7546c828a0cd86d745e9422771c9d91", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n227We create a variable myNumber = 16  to which we create another variable\nmyNewNumber  which pre-increments the value of myNumber . We see that\nwhen we execute our code it shows 17.\nWhen we pre-increment the value of the variable is incremented before assigning\nit to another variable. For example myNumber  is 16 so it gets incremented before\nbeing assigned to myNewNumber  so therefore we get 17.\nLet\u2019s debug.\nWe do our normal start in gdb and break on main. Take note at main+24  we are\nmoving the value of 1 into r3. We then see at main+28  we are storing that value\nat r11-8  to which we will set a breakpoint and continue.\nAs we evaluate the value in r3 at this stage we see 17. Remember back in our\noriginal code that the value in the myNumber  variable was 16. We can see that\nthe pre-increment operator was successful to increment the value 1 to give us 17.\nWe see that when we continue through the code the value 17 is successfully\nechoed to the terminal as expected.\nLet\u2019s re-run the program.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1018, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "532b0dea-9c45-481e-8450-cf19df965d2a": {"__data__": {"id_": "532b0dea-9c45-481e-8450-cf19df965d2a", "embedding": null, "metadata": {"page_label": "228", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "81f74d8c-edce-4444-b5fa-17ef4bacc9e7", "node_type": "4", "metadata": {"page_label": "228", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "67d6eb1a50a7d055beef3bd32f3a5affb6007caa3f26e5e8e25ee9ea4c430bfb", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n228\nLet\u2019s hack! Here were review the value in r3 which we know to be 17. Let\u2019s hack it\nto something else.\nSuccess! As we can see when we continue we now see the hacked value echoing\nto the terminal.\nNext week we will dive into the Post-Increment Operator.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 269, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bcb5f70a-2368-422c-b5a8-c384976175e9": {"__data__": {"id_": "bcb5f70a-2368-422c-b5a8-c384976175e9", "embedding": null, "metadata": {"page_label": "229", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7f8732ba-f0d8-44b3-b267-2ebf834b5173", "node_type": "4", "metadata": {"page_label": "229", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "1b603ea3684eadcb05bf1424265dbd0191b07a09d04b7b69133a0977ed6c443f", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n229Part 41 \u2013 Post-Increment Operator\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s dive into our code.\n#include <iostream> \n \nint main(void) { \n    int myNumber = 16; \n    int myNewNumber = ++myNumber; \n \n    std::cout << myNewNumber << std::endl; \n \n    return 0; \n} \nTo compile this we simply type:\ng++ example10.cpp -o example10\n./example10\nWe see 16 and 17 printed to the screen.\nLet\u2019s break it down:\nWe create a variable myNumber = 16  to which we create another variable\nmyNewNumber  which post-increments the value of myNumber . We see that\nwhen we execute our code it shows 16 as the value of myNewNumber  and 17 as\nthe value of myNumber as myNewNumber  does not get incremented as only\nmyNumber  get incremented as it is a post operator.\nWhen we post-increment the value of the variable is incremented after assigning it\nto another variable. For example myNumber  is 16 so it gets incremented after\nbeing assigned to myNewNumber  so therefore we get 17.\nNext week we will dive into Debugging Post-Increment Operator.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1217, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "44b4deaa-6828-49d4-a738-8692d884d71d": {"__data__": {"id_": "44b4deaa-6828-49d4-a738-8692d884d71d", "embedding": null, "metadata": {"page_label": "230", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f0d1a831-b5c0-4790-bbf5-0af750aff8f9", "node_type": "4", "metadata": {"page_label": "230", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "8a817aa8952c90e558312f8641931e5877d3ee8a1c747c42e0fec027d967e62f", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n230Part 42 \u2013 Debugging Post-Increment\nOperator\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s re-examine our code.\n#include <iostream> \n \nint main(void) { \n    int myNumber = 16; \n    int myNewNumber = ++myNumber; \n \n    std::cout << myNewNumber << std::endl; \n \n    return 0; \n} \nWe create a variable myNumber = 16  to which we create another variable\nmyNewNumber  which post-increments the value of myNumber . We see that\nwhen we execute our code it shows 16 as the value of myNewNumber  and 17 as\nthe value of myNumber  as myNewNumber  does not get incremented as only\nmyNumber  get incremented as it is a post operator.\nWhen we post-increment the value of the variable is incremented after assigning it\nto another variable. For example myNumber  is 16 so it gets incremented after\nbeing assigned to myNewNumber  so therefore we get 17.\nLet's debug.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1043, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b9728bf8-e487-4a3f-b579-629daab85a31": {"__data__": {"id_": "b9728bf8-e487-4a3f-b579-629daab85a31", "embedding": null, "metadata": {"page_label": "231", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8b9fea36-38fe-4b72-908c-43ecfd8e5939", "node_type": "4", "metadata": {"page_label": "231", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "d823c29b77e75bf53075d3b0f37ff5163a20d0cca4629bea6140eaeffda1a5ac", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n231\nLet's break on *main+28 and continue.\nAs we can see the value in r3 is 16 and the value in r2 is 17. We can see that as\nthey are loaded from memory into the registers in *main+12  directly by the mov\ninstruction and *main+24  we add 1 into r3 and then put that value into r2.\nAs we continue we can see the cout c++ function called which echos out the\nvalues to the terminal (standard output) as expected.\nNext week we will dive into Hacking Post-Increment Operator.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 483, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "25ab635e-ac75-435f-b3d5-e7f53be5f7d4": {"__data__": {"id_": "25ab635e-ac75-435f-b3d5-e7f53be5f7d4", "embedding": null, "metadata": {"page_label": "232", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb262049-039a-4759-a52c-85ad39e9bf45", "node_type": "4", "metadata": {"page_label": "232", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "76e28ef4cc0d11e5f8cc84cdf1479a727d67ff99c8a1c7aa1d21a9cfcc4220e2", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n232Part 43 \u2013 Hacking Post-Increment\nOperator\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet\u2019s re-examine our code.\n#include <iostream> \n \nint main(void) { \n    int myNumber = 16; \n    int myNewNumber = ++myNumber; \n \n    std::cout << myNewNumber << std::endl; \n \n    return 0; \n} \nWe create a variable myNumber = 16 to which we create another\nvariable myNewNumber  which post-increments the value of myNumber . We see\nthat when we execute our code it shows 16 as the value\nof myNewNumber  and 17 as the value of myNumber as myNewNumber  does\nnot get incremented as only myNumber  get incremented as it is a post operator.\nWhen we post-increment the value of the variable is incremented after assigning it\nto another variable. For example myNumber  is 16 so it gets incremented after\nbeing assigned to myNewNumber  so therefore we get 17.\nLet's debug.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1039, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b38e36e4-3af5-410c-b7d1-84f1ec242269": {"__data__": {"id_": "b38e36e4-3af5-410c-b7d1-84f1ec242269", "embedding": null, "metadata": {"page_label": "233", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "eeeba120-aa3a-4c63-806a-33a2f08d6794", "node_type": "4", "metadata": {"page_label": "233", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "e4b774a0fd4754ede19f0be3b66cf587a2bd7429c713a43009f9ed72d00d3418", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n233\nLet's break on *main+28  and continue.\nAs we can see the value in r3 is 16 and the value in r2 is 17. We can see that as\nthey are loaded from memory into the registers in *main+12  directly by\nthe mov instruction and *main+24  we add 1 into r3 and then put that value\ninto r2.\nLet's hack this baby!\nWe know we can now set the value of r3 to our heart's desire!\nAs we continue we see the c++ cout  function echo our new hacked value to the\nscreen!\nNext week we will dive into the Pre-Decrement Operator.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 520, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f9fefa79-2ca1-407c-9359-120b8f8f1322": {"__data__": {"id_": "f9fefa79-2ca1-407c-9359-120b8f8f1322", "embedding": null, "metadata": {"page_label": "234", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "170995b1-f029-4565-8de0-05e5b9c6ac00", "node_type": "4", "metadata": {"page_label": "234", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "c28fa3b038f978965e442e491745c00ca890f5a532c269a293c8b82ba603ca1a", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n234Part 44 \u2013 Pre-Decrement Operator\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet's take a look at our pre-decrement operator example. The pre-decrement\noperator decrements a given value before the action gets assigned.\nLet's examine our code.\n#include <iostream> \n \nint main(void) { \n    int myNumber = 16; \n    int myNewNumber = --myNumber; \n \n    std::cout << myNewNumber << std::endl; \n    std::cout << myNumber << std::endl; \n \n    return 0; \n} \nAs we compile and run we see 15 echoed out to the terminal.\nThe value of myNumber was 16 and when it is assigned with the pre-decrement\noperator we see that the new value is 15 as it is assigned into myNewNumber .\nNext week we will dive into the Debuggin Pre-Decrement Operator.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 919, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c38f149a-2812-4f48-94fa-e0bde46f6908": {"__data__": {"id_": "c38f149a-2812-4f48-94fa-e0bde46f6908", "embedding": null, "metadata": {"page_label": "235", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a79977bc-b150-4958-be80-78950ced4b59", "node_type": "4", "metadata": {"page_label": "235", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "64e19e1af57d1b07fe2d31f9da96891f20cdef475574ac0f89aed8cc67ecaeba", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n235Part 45 \u2013 Debugging Pre-Decrement\nOperator\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet's re-examine our code.\n#include <iostream> \n \nint main(void) { \n    int myNumber = 16; \n    int myNewNumber = --myNumber; \n \n    std::cout << myNewNumber << std::endl; \n    std::cout << myNumber << std::endl; \n \n    return 0; \n} \nWe remember when we compile we get 15.\nLet's debug.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 563, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "720a7da9-6076-4db8-8ea6-deb1ef715523": {"__data__": {"id_": "720a7da9-6076-4db8-8ea6-deb1ef715523", "embedding": null, "metadata": {"page_label": "236", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ccb32679-d893-4cc9-b5ec-033554de4b70", "node_type": "4", "metadata": {"page_label": "236", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "8c6a986a991cb7e3b45aa64951dc3d938d79e69da8c4e15ede59e1779650257b", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n236\nLet's break.\nAs we can see r3 holds 15. Keep in mind hacking this value may not be the final\nplace it may be stored. Remember this for next week and re-examine the debug\ncode above to see if you can figure it out.\nAs we can see r1 holds 15 as well. Keep in mind the above statement.\nAs we continue we see our cout function echoing 15 for both areas as expected.\nNext week we will dive into the Hacking Pre-Decrement Operator.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 443, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "951a4fd0-f5ea-43b7-b1ca-d05ae176342d": {"__data__": {"id_": "951a4fd0-f5ea-43b7-b1ca-d05ae176342d", "embedding": null, "metadata": {"page_label": "237", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "867a46cd-14e1-4363-91fc-d70614f8eb2a", "node_type": "4", "metadata": {"page_label": "237", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "44060e99af97ee78f8ee664ffb833ef76401ecfe0e36d9aea60d2a569128514e", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n237Part 46 \u2013 Hacking Pre-Decrement\nOperator\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet's re-examine our code.\n#include <iostream> \n \nint main(void) { \n    int myNumber = 16; \n    int myNewNumber = --myNumber; \n \n    std::cout << myNewNumber << std::endl; \n    std::cout << myNumber << std::endl; \n \n    return 0; \n} \nWe remember when we compile we get 15.\nLet's debug.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 561, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cc6385de-97bd-4cb0-942f-7499c95e7dad": {"__data__": {"id_": "cc6385de-97bd-4cb0-942f-7499c95e7dad", "embedding": null, "metadata": {"page_label": "238", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87169bae-a25d-4717-a9be-dbe35e25c8a3", "node_type": "4", "metadata": {"page_label": "238", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "3dd5d6860a5b589458f37e72a335177ce4ff4d45bdedd85c4790a8d4fe317bd6", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n238\nLet's break.\nLet's review what is inside r3 and hack it.\nNow as we continue we see it did not successfully hack why is that?\nWe re-run the binary and break and see the value here at r1 hold 15.\nWhen we continue we see 15 which we don't want.\nNow we break again and print the value.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 299, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "936e1c85-2c3e-497f-acff-0bb1853cf994": {"__data__": {"id_": "936e1c85-2c3e-497f-acff-0bb1853cf994", "embedding": null, "metadata": {"page_label": "239", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d6f21654-3c29-4f42-8415-1d16289fd63d", "node_type": "4", "metadata": {"page_label": "239", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "c0c9110577a6ef6aa0220dd4b41fbc8cf7a6e9184c258659051189d71f68b122", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n239\nThis time we set r1 and we can see we have successfully hacked!\nThis is your first experience with really breaking down the registers and seeing\nwhere things are stored and how it can affect outcome. Take time and run this\nyourself so you really have a firm handle on this.\nNext week we will dive into the Post-Decrement Operator.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 348, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b920ae24-cf4b-415a-a802-322e337b6429": {"__data__": {"id_": "b920ae24-cf4b-415a-a802-322e337b6429", "embedding": null, "metadata": {"page_label": "240", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1fce4eea-82bd-4a92-9934-0a77b61133a5", "node_type": "4", "metadata": {"page_label": "240", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "8e68bc703f0bafc9ec792fef112ba62966890b60a0fd8735377795b4b82524d9", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n240Part 47 \u2013 Post-Decrement Operator\nThis week we will address the post-decrement operator. Let's examine our code.\n#include <iostream> \n \nint main (void ) { \n    int myNumber = 16; \n    int myNewNumber = myNumber--; \n \n    std::cout  << myNewNumber << std::endl ; \n    std::cout  << myNumber << std::endl ; \n \n    return  0; \n} \nAs we compile we see 16 and 15 printed out respectively.\nWe see that in this scenario myNewNumber  does get decremented as\nmyNumber-- takes the value of 16 and reduces it to 15.\nNext week we will dive into the Debugging Post-Decrement Operator.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 588, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4b8516a5-5c4e-47f1-a208-bf6603cf38f0": {"__data__": {"id_": "4b8516a5-5c4e-47f1-a208-bf6603cf38f0", "embedding": null, "metadata": {"page_label": "241", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "454ad110-dcb4-4211-9fc3-a8557ceaed01", "node_type": "4", "metadata": {"page_label": "241", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "f51f2a448a31207952f5ad6631667e06f55da4d1db27667c693862b865681948", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n241Part 48 \u2013 Debugging Post-Decrement\nOperator\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet's re-examine our code.\n#include <iostream> \n \nint main(void) { \n    int myNumber = 16; \n    int myNewNumber = myNumber--; \n \n    std::cout << myNewNumber << std::endl; \n    std::cout << myNumber << std::endl; \n \n    return 0; \n} \nWe see our very simple C++ code above to which we are doing nothing more\nthan assigning a number into a variable to which we init another int variable and\nassign the original variable to which it is post-decremented. We then output each\nvalue to the terminal.\nLet's debug.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 785, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "76397a0b-8032-48f9-b022-5c4af1a96670": {"__data__": {"id_": "76397a0b-8032-48f9-b022-5c4af1a96670", "embedding": null, "metadata": {"page_label": "242", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "351aa71f-bdd1-4452-b692-f1c7e0b67a00", "node_type": "4", "metadata": {"page_label": "242", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "005f22cb0b452fb91c30a90087b0deb064fcfdf9d14b15168ce40eaf4baa8fa8", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n242\nIt is clear that the value for the post-decrement operator gets loaded into r1 at\nmain+68 so let's break at main+72 .\nWe can clearly see that r1 does in fact hold the value of 15 to which was\ndecremented from our original value.\nNext week we will dive into Hacking Post-Decrement Operator.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 307, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "42d5a687-df79-418d-81a5-8a23a3867182": {"__data__": {"id_": "42d5a687-df79-418d-81a5-8a23a3867182", "embedding": null, "metadata": {"page_label": "243", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "10a55ca1-b5c7-4b19-b96a-c70e29826cf4", "node_type": "4", "metadata": {"page_label": "243", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "c3368767d874005f3ebd45594c8e822a39b6a156ef4603f559ff3167661a7ba4", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n243", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 17, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a7024aa7-9410-4ee6-b820-10645ff20815": {"__data__": {"id_": "a7024aa7-9410-4ee6-b820-10645ff20815", "embedding": null, "metadata": {"page_label": "244", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "90784f8a-b074-4135-9ac9-29da240c9f3b", "node_type": "4", "metadata": {"page_label": "244", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "e87d6a1ffbad10c073b887dbff9060a19b7c7410b195110b9e071a7eb8006ac8", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n244Part 49 \u2013 Hacking Post-Decrement\nOperator\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet's once again review our code.\n#include <iostream> \n \nint main(void) { \n    int myNumber = 16; \n    int myNewNumber = myNumber--; \n \n    std::cout << myNewNumber << std::endl; \n    std::cout << myNumber << std::endl; \n \n    return 0; \n} \nLet's review last week's debug.\nAs we can see here the value in r1 at main+68  is 15. Let's hack!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 615, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3d78fc5c-a36c-40e3-a6d4-b6231d6d6942": {"__data__": {"id_": "3d78fc5c-a36c-40e3-a6d4-b6231d6d6942", "embedding": null, "metadata": {"page_label": "245", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b355de7d-aefd-467a-9aea-7109ee1624d3", "node_type": "4", "metadata": {"page_label": "245", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "d0ff70068e70e62e079dde95f7a4b40066be2c329c027987ba612e9e5d89dd8c", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n245Once again we have manipulated and changed program execution to our own\nbidding. With each of these bite-size lessons you continue to get a better grasp on\nthe processor and how it interfaces with the binary.\nI hope this series gives you a solid framework for understanding the ARM\nprocessor. This concludes the series. Thank you all for coming along on the\njourney!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 383, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5b240d69-0f5a-4bec-b3ed-e1315ccf9586": {"__data__": {"id_": "5b240d69-0f5a-4bec-b3ed-e1315ccf9586", "embedding": null, "metadata": {"page_label": "246", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "270c9221-8ba3-409b-b4c0-5fbcd1abd59c", "node_type": "4", "metadata": {"page_label": "246", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "f5e88e87fd040db5f8ae5d69eb276a1de8af071dc00dd01e952a5859f23dbd92", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n246The x64 Architecture\nLet's dive in rightaway!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 62, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bbc83638-a25a-489a-a240-bd117513e90b": {"__data__": {"id_": "bbc83638-a25a-489a-a240-bd117513e90b", "embedding": null, "metadata": {"page_label": "247", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "642cd54d-9ac8-4260-8e6a-e4e67a5a45c1", "node_type": "4", "metadata": {"page_label": "247", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "5a7f179042b08f1e2f87df6cb1b04161b88ae93094b12faeee44de9aa749b83d", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n247Part 1 \u2013 The Cyber Revolution\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nI often wonder when I see all the latest hacks on a variety of networks, computers\nand IoT devices how many people really have even the most basic understanding\nof what goes on down to the microprocessor level.\nFor years I have published x86 and ARM Assembly and Reverse Engineering\ntutorials with the intent of opening up the eyes of the public to better understand\nwhat Assembly Language is in addition to the notion that there is actually more\nthan just the decimal number system.\nToday we have drones, AI, IoT and smart devices that the public rarely\nunderstands what the true impact is on their privacy or security.\nEverything is Cyber. No matter what you do or where you go or where you live or\nwhere you work you will be forced to engage \"The Cyber Revolution\".\nThis tutorial series is your opportunity to learn FREE OF CHARGE the very basics\nof x64 Assembly. Naturally you might ask what is x64 Assembly and why would I\npossibly want to understand the basics of it let alone Reverse Engineering?\nJust about every computer and server today including the cloud runs on an x64\nbased chipset. Just about every phone, IoT and tablet device runs on an ARM\nchip (with a number of exceptions). Our last tutorial series dove deep into the\nARM chip so if you would like to dive in please review the archives here on my\nLinkedIn profile.\nUnderstanding x64 will give you a better idea of the very infrastructure that\nsupports just about everything we do. You do not have to have any computer\nscience skills to take this FREE course. Simply a few minutes of your time once a\nweek will do.\nLet's dive in!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1863, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ff75d4f2-74fe-42e8-b665-893fdfbe4670": {"__data__": {"id_": "ff75d4f2-74fe-42e8-b665-893fdfbe4670", "embedding": null, "metadata": {"page_label": "248", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fee739f0-25b2-41a9-bb08-c3e0d61d92a6", "node_type": "4", "metadata": {"page_label": "248", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "ed4ff7d0a3320ef6d5bed7d3137538a2365d49c8f6b99241eee48377fb8218bc", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n248Part 2 - Transistors\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nTo understand modern computing we have to go down to the most basic\nlevel. Our journey starts with the transistor. \nA transistor is nothing more than a complex relay as it is a switch that can be\nopen or closed by applying an electrical charge. This charge is made possible by\nthe use of a control wire. The control wire is attached to a material that can\nconduct or resist electricity to which on the other end there are two electrodes\nattached to such a material. This is the concept of a semiconductor. The control\nwire attaches to a gate electrode where if you change the electrical charge of the\ngate the conductivity of the semiconductor material can be manipulated. Think of\na simple kitchen faucet to which you can turn water on or off. The concept is quite\nsimilar.\nQuite simply the flow of electricity represents a 1 and the lack of such an\nelectricity flow represents a 0. This is a boolean on or off architecture to which we\nneed to take a deeper dive into the binary number system at a later time.\nI deliberately try to keep these lessons short so that it draws the largest audience\nto take just a few minutes each week to properly grasp some complicated\narchitectures.\nNext week we will touch on logic gates and discuss how the combination of such\ngates make up the core of how the processor works. We will only discuss them on\na high level as it would be an entire additional course in electrical engineering to\nreally get into how the processor is made to which we will stick to the basics and\nspend more of our time on how to program the chip.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1816, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0bb07de6-a81e-4ed1-ab7d-985c1b23a0aa": {"__data__": {"id_": "0bb07de6-a81e-4ed1-ab7d-985c1b23a0aa", "embedding": null, "metadata": {"page_label": "249", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5a55874c-63ee-4b63-a0cb-ada5a1ac4428", "node_type": "4", "metadata": {"page_label": "249", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "851287ce577378f33768b4c6dda122a4b0320e88984fef50e5fc480ff6692cf6", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n249After some basics about the processor and an introduction to the binary and\nhexadecimal number systems we will build our very own bootable operating\nsystem.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 173, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "49d28b2e-0821-441f-9486-99e7e7082fc6": {"__data__": {"id_": "49d28b2e-0821-441f-9486-99e7e7082fc6", "embedding": null, "metadata": {"page_label": "250", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9e05084a-48f5-4b8f-86c6-7a611894a8e8", "node_type": "4", "metadata": {"page_label": "250", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "afeb851cd7cbbc24147f619b5f83b6de89fbd307e188d8e10669ae5fb3c95457", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n250Part 3 - Logic Gates\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nIn our last tutorial we spoke briefly about binary to which we represent as either\ntrue or false. In binary, true is equal to 1 and false is equal to 0. Computers are\nultimately built on this very simple concept to which at the core we have four\npossible logic gates which can be combined in an infinite amount of sequences.\nLet\u2019s start with the AND Gate below.\nIn an AND Gate there are two binary values to which outputs 1 only if both binary\nvalues are 1. \nThe NOT Gate  is represented below.\nIn a NOT Gate it simply takes a single binary value and negates it.\nThe OR Gate  is represented below.\nIn an OR Gate only one of the inputs has to be 1 in order to output a 1.\nThe XOR Gate  is represented below.\nIn an XOR Gate if both inputs are either 0 or 1 the output is 0.\n\"The Why...\" Ok so why am I going over this? What does this have to do with\nunderstanding Assembly or Reverse Engineering? Well... At the very CORE of all\nprocessors are these simple logic gates that when combined together form\ncomplex instructions. I could spend literally years showing you this in practice", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1336, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bc13754c-61b9-493f-b96a-dc838a29f894": {"__data__": {"id_": "bc13754c-61b9-493f-b96a-dc838a29f894", "embedding": null, "metadata": {"page_label": "251", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2308e06f-0282-43a0-86ea-72c45cc04c45", "node_type": "4", "metadata": {"page_label": "251", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "6f2f0fa3ba8ddf90ec3316e271d1e6329db73d3bc169baa48e161d9dd6206820", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n251however I will leave that for another to pick up the charge. What is important is\nthat you get a basic understanding of what is going on here when we ultimately\nsee instructions such as AND, OR, XOR, etc when we code in Assembly and\nmore importantly when we Reverse Engineer.\nStay tuned! We will be building our own very SIMPLE Operating System shortly!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 370, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6951bdca-2746-4e02-9876-d50b0b960190": {"__data__": {"id_": "6951bdca-2746-4e02-9876-d50b0b960190", "embedding": null, "metadata": {"page_label": "252", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "294f5bab-f416-4e7d-b314-be0ff1e042e6", "node_type": "4", "metadata": {"page_label": "252", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "70695682bdb8ec95c8d8442eee825a84adbc4ee22535c6da02c9da13604177fe", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n252Part 4 - Number Systems\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nIt really all breaks down to 1 and 0. No matter how sophisticated the future\nframeworks evolve they all including interpreted languages ultimately use a JVM\nor the like and go down to Assembly then Machine Code then binary.\nWhy would we need to even talk about number systems? Why is it relevant to our\nseries here? The answer is simple. In addition to everything going down to 1 and\n0, the instructions and memory in addition to the processor registers all utilize\nanother number system called hexadecimal. \nLet\u2019s discuss binary! At the core of the microprocessor are a series of binary\nnumbers which are either +5V (on or 1) or 0V (off or 0). Each 0 or 1 represents a\nbit of information within the microprocessor. A combination of 8 bits results in a\nsingle byte.\nBefore we dive into binary, let's examine the familiar decimal. If we take the\nnumber 2017, we would understand this to be two thousand and seventeen.\nLet\u2019s take a look at the binary system and the basics of how it operates.\nIf we were to convert a binary number into decimal, we would very simply do the\nfollowing. Let's take a binary number of 0101 1101 and as you can see it is 93\ndecimal.\nAdding the values in the value column gives us 0 + 64 + 0 + 16 + 8 + 4 + 0 + 1 =\n93 decimal.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1510, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "77a32342-501c-419b-a75e-cfc60cac1384": {"__data__": {"id_": "77a32342-501c-419b-a75e-cfc60cac1384", "embedding": null, "metadata": {"page_label": "253", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5efe42d4-9337-4c4e-a794-20c759bf8204", "node_type": "4", "metadata": {"page_label": "253", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "df8ae7a8771de620ae9c95c0fcef1a8c545c043aa313a2660083494bd20e2cd0", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n253If we were to convert a decimal number into binary, we would check to see if a\nsubtraction is possible relative to the highest order bit and if so, a 1 would be\nplaced into the binary column to which the remainder would be carried into the\nnext row. Let\u2019s consider the example of the decimal value of 120 which is 0111\n1000 binary.\n1)Can 128 fit inside of 120: No, therefore 0.\n2)Can 64 fit inside of 120: Yes, therefore 1, then 120 \u2013 64 = 56.\n3)Can 32 fit inside of 56: Yes, therefore 1, then 56 \u2013 32 = 24.\n4)Can 16 fit inside of 24: Yes, therefore 1, then 24 \u2013 16 = 8.\n5)Can 8 fit inside of 8: Yes, therefore 1, then 8 \u2013 8 = 0.\n6)Can 4 fit inside of 0: No, therefore 0.\n7)Can 2 fit inside of 0: No, therefore 0.\n8)Can 1 fit inside of 0: No, therefore 0.\nWhen we want to convert binary to hex we simply work with the following table.\nLet's convert a binary number such as 0101 1111 to hex. To do this we very\nsimply look at the table and compare each nibble which is a combination of 4 bits.\nKeep in mind, 8 bits is equal to a byte and 2 nibbles are equal to a byte.\nTherefore 0101 1111 binary = 0x5f hex. The 0x notation denotes hex.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1152, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "69e16a5f-25cb-4de5-bad8-c6f55edce4f9": {"__data__": {"id_": "69e16a5f-25cb-4de5-bad8-c6f55edce4f9", "embedding": null, "metadata": {"page_label": "254", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2eb7fd83-07ad-4e7e-98c6-6d9cc2930630", "node_type": "4", "metadata": {"page_label": "254", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "0ba55c962c4838d9979ee8e5e03aca9976beea54c85b3c5ad1e0a8f1149b3c34", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n254To go from hex to binary it\u2019s very simple as you have to simply do the opposite\nsuch as:\nIt is important to understand that each hex digit is a nibble in length therefore two\nhex digits are a byte in length.\nTo convert from hex to decimal we do the following:\nTherefore we can see that 80 + 15 = 95 which is 0x5f hex.\nFinally to convert from decimal to hex. Let's take the number 850 decimal which is\n352 hex.\n\u201cWhy the hell would I waste my time learning all this crap when the computer\ndoes all this for me!\u201d\nAs I mentioned above, it is vital you have a good understanding of these two\nadditional number systems if you are truly to grasp and master reverse\nengineering at its core. There are some amazing tools that help the RE process\nhowever the better understanding that you have of these will help you as you\ngrow.\nI am not suggesting you memorize the above, nor am I suggesting that you do a\nthousand examples of each. All I ask is that you take the time to really understand\nthat literally everything and I mean everything goes down to binary bits in the\nprocessor.\nWhether you are creating, debugging or hacking an Assembly, Python, Java, C,\nC++, R, JavaScript, or any other new language application that hits the street,\nultimately everything MUST go down to binary 0 and 1 to which represent a +5V\nor 0V.\nWe as humans operate on the base 10 decimal system. Let\u2019s expand our mind to\nbase 2 binary and base 16 hexadecimal!\nNext week we will dive into binary addition! Stay tuned!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1504, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "37cbd83d-ef88-44cb-a0b9-31f06924031e": {"__data__": {"id_": "37cbd83d-ef88-44cb-a0b9-31f06924031e", "embedding": null, "metadata": {"page_label": "255", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "540a7c8c-3359-45a3-ba93-d62ab6670116", "node_type": "4", "metadata": {"page_label": "255", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "c2260a1e888d08f7846a675c548b446cc25836c8bf215e4d139ec319d98a0687", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n255Part 5 - Binary Addition\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nBinary addition can occur in one of four different fashions:\nKeep in mind the (1) means a carry bit. It very simply means an overflow.\nLets take the following 4-bit nibble example:\nWe see an obvious carry in the 3rd bit. If the 8th bit had a carry then this would\ngenerate a carry flag within the CPU.\nLet\u2019s examine an 8-bit number:\nIf we had:\nHere we see a carry bit which would trigger the carry flag within the CPU to be 1\nor true. We will discuss the carry flag in later tutorials. Please just keep in mind\nthis example to reference as it is very important to understand.\nNext week we will dive into binary subtraction! Stay tuned!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 895, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f4efa6f3-b105-4004-94d8-648a9fc67e86": {"__data__": {"id_": "f4efa6f3-b105-4004-94d8-648a9fc67e86", "embedding": null, "metadata": {"page_label": "256", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6f8ed505-4a7c-47a3-b447-5e3848b8e830", "node_type": "4", "metadata": {"page_label": "256", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "c0f2ae9291dc785cf86f86427412c7b68fc630601b251e3d6e3f7ae46b160cc8", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n256Part 6 - Binary Subtraction\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nBinary subtraction is nothing more than adding the negative value of the number\nto be subtracted. For example 8 + - 4, the starting point would be zero to which\nwe move 8 points in the positive direction and then four points in the negative\ndirection yielding a value of 4.\nWe represent a sign bit in binary to which bit 7 indicates the sign of number where\n0 is positive and 1 is negative.\nThe above would represent -2.\nWe utilize the concept of twos compliment which inverts each bit and then finally\nadding 1.\nLets example binary 2.\nInvert the bits.\nAdd 1.\nLet\u2019s examine a subtraction operation:\nSo what is the (1) you may ask, that is the overflow bit. In future tutorials we will\nexamine what we refer to as the overflow flag and carry flag.\nNext week we will dive into word lengths! Stay tuned!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1063, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c1858b87-da6d-4ff9-b6ee-76bf2b258528": {"__data__": {"id_": "c1858b87-da6d-4ff9-b6ee-76bf2b258528", "embedding": null, "metadata": {"page_label": "257", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d04a66d6-b7e9-470b-bfe3-a0004e269f4b", "node_type": "4", "metadata": {"page_label": "257", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "9cd1bb58ca493282b795b27a8c4e3f46b8a55e4e33e3fb2be4b90cfa71963f83", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n257Part 7 - Word Lengths\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nBefore we dive into the architecture lets talk about how we define various bits and\nhow they are structured within the processor.\nIn both x64 and x86, we define a byte as 8 bits. We define a word as 16 bits. We\ndefine a double word as 32 bits and a quadword as 64 bits. Finally we define a\ndouble quadword as 128 bits. \nIntel processors store bytes as what we refer to as \"little endian,\" meaning lower\nsignificant bytes are stored in lower memory addresses. Lets give an example of\na simple 16-bit or 2 byte value. On disk - 0xAABB. When it goes into memory it is\nstored as 0xBBAA as I hope this provides a good visual as this concept can be\nquite confusing.\nKeep in mind, 8 bits make up a byte. 4 bits are also called a nibble which are\nequivalent to one hex digit.\nNext week we will dive into general architecture! Stay tuned!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1086, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6c8087b3-e61a-4408-a8cd-060eb0ad0681": {"__data__": {"id_": "6c8087b3-e61a-4408-a8cd-060eb0ad0681", "embedding": null, "metadata": {"page_label": "258", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a26a072a-e716-4be4-ada9-161492540f98", "node_type": "4", "metadata": {"page_label": "258", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "4cf3007d6d3c933cd85a58b0f139b9ee134cc491baadc51c689b1c4326fe5a98", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n258Part 8 - General Architecture\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe x64 architecture is a backwards-compatible extension of the x86 platform. It\nprovides a legacy 32-bit mode, which is identical to x86, and a new 64-bit\nmode. You can review my legacy x86 tutorial if you would like to get more\ninformation right here on LinkedIn.\nThe term \"x64\" includes both AMD 64 and Intel64. The instruction sets are similar.\nx64 extends x86's 8 general-purpose registers to be 64-bit, and adds 8 new 64-bit\nregisters. The 64-bit registers have names beginning with \" r\", so for example the\n64-bit extension of eax is called rax. The new registers are named r8 through r15.\nThe lower 32 bits, 16 bits, and 8 bits of each register are directly addressable in\noperands. This includes registers, like esi, whose lower 8 bits were not previously\naddressable. The following table specifies the assembly-language names for the\nlower portions of 64-bit registers.\nThe table below breaks out each bytes distinction.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1195, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8daa420a-f48b-4ecd-9c60-451bdbdf4aec": {"__data__": {"id_": "8daa420a-f48b-4ecd-9c60-451bdbdf4aec", "embedding": null, "metadata": {"page_label": "259", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "40764a95-80c7-4e80-b313-df2ae0f1f01d", "node_type": "4", "metadata": {"page_label": "259", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "5d3c7f22718f2d24d96a6e3d4d3be0dd754351fdf26ad02c27a582c4fe260363", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n259Operations that output to a 32-bit subregister are automatically zero-extended to\nthe entire 64-bit register. Operations that output to 8-bit or 16-bit subregisters are\nnot zero-extended (this is compatible x86 behavior).\nThe high 8 bits of ax, bx, cx, and dx are still addressable as ah, bh, ch, dh, but\ncannot be used with all types of operands.\nThe instruction pointer, eip, and flags  register have been extended to 64 bits ( rip\nand rflags , respectively) as well.\nThe x64 processor also provides several sets of floating-point registers:\nEight 80-bit x87 registers.\nEight 64-bit MMX registers. (These overlap with the x87 registers.)\nThe original set of eight 128-bit SSE registers is increased to sixteen.\nNext week we will dive into calling conventions! Stay tuned!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 790, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dce03b6a-5735-4761-b726-94af4216cf76": {"__data__": {"id_": "dce03b6a-5735-4761-b726-94af4216cf76", "embedding": null, "metadata": {"page_label": "260", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2ad09026-2543-4b73-abb0-6f0345c5a3f0", "node_type": "4", "metadata": {"page_label": "260", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "50b9c4d0851a54d0acb162227ea32cc6f8d9955b063c31102b18329d27d9f8b4", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n260Part 9 - Calling Conventions\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe x64 processor uses what we refer to as __fastcall. \nThe __fastcall calling convention specifies that arguments to functions are to be\npassed in registers, when possible. This calling convention only applies to the x86\narchitecture.\nThe first two DWORD or smaller arguments that are found in the argument list\nfrom left to right are passed in ecx and edx registers; all other arguments are\npassed on the stack from right to left.\nCalled function pops the arguments from the stack.\nAt sign (@) is prefixed to names; an at sign followed by the number of bytes (in\ndecimal) in the parameter list is suffixed to names.\nNo case translation performed.\nHere is a simple breakdown to illustrate:\nIf you have two parameters you are passing from a function, for example int x and\nint y and it is a QWORD, x will go into rcx and y will go into  rdx. \nIf you have five parameters you are passing for example int a, int b, int c, int d, int\ne and it is a WORD in length, a will go into cx, b into dx, c into r8w, d into r9w\nand e into the stack.\nNext week we will dive into boolean instructions! Stay tuned!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1361, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "abc8eb1f-5fb4-4809-9b0d-17825d30894f": {"__data__": {"id_": "abc8eb1f-5fb4-4809-9b0d-17825d30894f", "embedding": null, "metadata": {"page_label": "261", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "843855e2-700a-4c20-9eba-c68410037e6c", "node_type": "4", "metadata": {"page_label": "261", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "792c35afecf747732493efc7a91f54346cb3c908a35dbb03481722ce7f32497f", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n261Part 10 - Boolean Instructions\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThere are four boolean instructions to which exist are AND, OR, XOR and\nNOT. Earlier in this tutorial we briefly discussed gates which took advantage of the\nsame logic down to the metal. We will see this logic throughout our reversing so it\nis important to understand what it does down at the individual bit level.\nAND = If the first number has a 0 and the second number has a 0, the result is 0.\nAND = If the first number has a 0 and the second number has a 1, the result is 0.\nAND = If the first number has a 1 and the second number has a 0, the result is 0.\nAND = If the first number has a 1 and the second number has a 1, the result is 1.\nex: 0 0 1 0 0 0 1 0 \nex: 0 1 1 0 1 1 1 0\nex:\u2014\u2014\u2014\u2014\u2014\u2014\u2014\nex: 0 0 1 0 0 0 1 0\nOR = If the first number has a 0 and the second number has a 0, the result is 0.\nOR = If the first number has a 0 and the second number has a 1, the result is 1.\nOR = If the first number has a 1 and the second number has a 0, the result is 1.\nOR = If the first number has a 1 and the second number has a 1, the result is 1.\nex: 0 0 1 0 0 0 1 0 \nex: 0 1 1 0 1 1 1 0\nex:\u2014\u2014\u2014\u2014\u2014\u2014\u2014\nex: 0 1 1 0 1 1 1 0\nXOR = If the first number has a 0 and the second number has a 0, the result is 0.\nXOR = If the first number has a 0 and the second number has a 1, the result is 1.\nXOR = If the first number has a 1 and the second number has a 0, the result is 1.\nXOR = If the first number has a 1 and the second number has a 1, the result is 0.\nex: 0 0 1 0 0 0 1 0 \nex: 0 1 1 0 1 1 1 0\nex:\u2014\u2014\u2014\u2014\u2014\u2014\u2014\nex: 0 1 0 0 1 1 0 0\nNOT = If the first number has a 0 the second number becomes 1.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1839, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d0cce357-f836-4093-a37c-a9fcd518f649": {"__data__": {"id_": "d0cce357-f836-4093-a37c-a9fcd518f649", "embedding": null, "metadata": {"page_label": "262", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "993aeedb-94e7-4792-8b1f-ca64fe71b5af", "node_type": "4", "metadata": {"page_label": "262", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "adc6613122c59c8b71f378439854d2806e6410b06099b01f945b14b18cb755e8", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n262NOT = If the first number has a 1 the second number becomes 0.\nex: 0 0 1 0 0 0 1 0 \nex:\u2014\u2014\u2014\u2014\u2014\u2014\u2014\nex: 1 1 0 1 1 1 0 1\nNext week we will dive into pointers! Stay tuned!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 181, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "53b83fa1-fe8e-417b-a529-fe4748d907c9": {"__data__": {"id_": "53b83fa1-fe8e-417b-a529-fe4748d907c9", "embedding": null, "metadata": {"page_label": "263", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e600a8c5-57f8-4c3b-833d-a3f7164c8bf5", "node_type": "4", "metadata": {"page_label": "263", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "8bc6456e83288b32cb9a479f155462dcce436bb2dec3cbb860c6a1210021461d", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n263Part 11 - Pointers\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nx64 utilizes the flat memory model to which we have one large array of addresses\nthat exist within the processor. \nA pointer is nothing more than the address of a specific value in memory. Let\u2019s\ntake an example:\nmov rax, 0x10\nIn this example we are moving 10 hex into the rax register.\nTo get the value inside rax at 0x10,  you would use the following syntax:\nmov rbx, word ptr [rax] \nLet\u2019s assume the value inside memory 0x10  was 0x20  therefore rax points to the\nvalue inside 0x10  which when you dereference by [rax]  contains  0x20 . 0x20  is\nthe value inside of the register rax.\nWe are moving a word value pointed inside of rax  into rbx.\nIf we do:\nmov word ptr [rax], 0x66\nThis will put the value of 0x66  into the memory location at 0x10 . We know that the\nvalue inside 0x10 memory location was 0x20  so therefore the new value inside\nthe memory at 0x10  will be 0x66.\nThis can get confusing however when we get into code over the coming months\nthis will become more apparent. \nNext week we will dive into load effective address! Stay tuned!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1304, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "480c8fca-316e-4c46-bf8b-5e3f5e717c22": {"__data__": {"id_": "480c8fca-316e-4c46-bf8b-5e3f5e717c22", "embedding": null, "metadata": {"page_label": "264", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6aefcbde-b3d0-44c2-a3c2-02c8b4d8d91c", "node_type": "4", "metadata": {"page_label": "264", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "64d4370969a6fd0bc7ec7b7e02a2e7ae3a1eda697dfcc371103d669a215eaaa1", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n264Part 12 - Load Effective Address\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nWhen a binary executes in RAM the OS will unmap the code into a data segment\nwhere it finds free space in memory. \nLoad Effective Address loads a given memory address as a pointer to any given\nvariable. For example:\nlea rbx, my_var\nThis will load the address of my_var  into rbx. \nIn C++, a pointer actually adds what the user would see as one if something was\nincremented however it is actually moving it 2 bytes forward under the hood\nassuming it is a word in length or 16 bits or 2 bytes. Same thing.\nIn Assembly every single byte is addressable. For example:\nlea rax, my_var\ninc rax\nmov word ptr [rax], rbx\nLet\u2019s say the value of 0x20  is in rbx. This above instruction will place the value of\n0x20  into a non-word boundary which will result in an error. You would have to\nincrement rax by 2 to ensure that does not happen.\nNext week we will dive into the data segment! Stay tuned!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1154, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1bbeb388-01ad-44f3-acf2-369747198c45": {"__data__": {"id_": "1bbeb388-01ad-44f3-acf2-369747198c45", "embedding": null, "metadata": {"page_label": "265", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "951b1218-579c-4be5-981e-272b7bad7db7", "node_type": "4", "metadata": {"page_label": "265", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "6db7c608b0ab799e2557b5d5c9e9d4dd984ea60a66d72ad704ca28dc80df60a2", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n265Part 13 - The Data Segment\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe data segment allocates memory on the heap in memory rather than the stack\nas they are not local variables they are known throughout the entire binary. \nThe sizes of data are as follows:\n1)byte - We use the db notation which is obviously 1 byte or 8 bits.\n2)word - We use dw and it is 2 bytes in length.\n3)double word - We use dd to assign and they are 4 bytes long.\n4)quad word - We use dq which is 8 bytes long.\n5)xmm word - We use xmmword which is 16 bytes long.\n6)ymm word - We use ymmword which is 32 bytes long.\nThere are SSE math registers which are separate from the CPU which hold the\nfollowing:\n1)real4 - This is a single or what you would think of as a floating point numbers as\nthis is 4 bytes long.\n2)real8 - This is a double floating point as this is 8 bytes long.\nFinally there are arrays which can be single or multidimensional arrays where you\ncan allocate against a db, dw, dd, dq, xmmword or ymmword.\nWe will see this in code when we get more advanced into the series however its\ncritical that you understand the variables within a function are local and go to the\nstack as they do not last throughout the program. These variables which are part\nof the data segment are not local they are global and go to the heap.\nThe stack - local vars - grows down in memory so they start at a high memory\naddress and grow down. The heap - global vars - grows from a lower memory\naddress and grows up. \nIf you have questions please ask them in the comments as it is critical you get this\nconcept down when we start to build our very basic operating system.\nNext week we will dive into SHL! Stay tuned!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1872, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c08aaabf-4abd-466a-b7e6-b5f1bfc2124e": {"__data__": {"id_": "c08aaabf-4abd-466a-b7e6-b5f1bfc2124e", "embedding": null, "metadata": {"page_label": "266", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "59c3732a-95df-4169-acaf-c59fad353b37", "node_type": "4", "metadata": {"page_label": "266", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "85303c0490e0477f70b7da67da9d17bddcca7a124973517121c0de767d2c7ed7", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n266Part 14 - SHL Instruction\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe SHL command stands for shift left.\nLet\u2019s assume the register al holds 01010101b  which is an 8-bit binary value. Let\u2019s\nassume the instruction is shl al, 2 . Below is what transpires as we see the values\nmove two bits to the left.\n  00010101\n00010101\nTherefore the new value will be:\n10100000\nNext week we will dive into SHR! Stay tuned!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 601, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f93042bd-2c4a-43e9-bf51-9f62b87dd0ff": {"__data__": {"id_": "f93042bd-2c4a-43e9-bf51-9f62b87dd0ff", "embedding": null, "metadata": {"page_label": "267", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "343cd142-4f29-4a92-b05a-91f5913820ce", "node_type": "4", "metadata": {"page_label": "267", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "db977f7fb34c0c3358a3f919c8f616aecea8b6b94f06a5c5310995138ea0ff77", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n267Part 15 - SHR Instruction\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe SHR command stands for shift right.\nLet\u2019s assume the register al holds 00010100b which is an 8-bit binary value. Let\u2019s\nassume the instruction is shr al, 2 . Below is what transpires as we see the values\nmove two bits to the left.\n00010100\n  00010100\n00000101\nNext week we will dive into ROL! Stay tuned!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 568, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d985c5fb-43fd-4713-9070-a8f2aeeb79aa": {"__data__": {"id_": "d985c5fb-43fd-4713-9070-a8f2aeeb79aa", "embedding": null, "metadata": {"page_label": "268", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0d04d272-9099-4ffd-a076-30ca8ddd3cda", "node_type": "4", "metadata": {"page_label": "268", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "c8da26887f907293f5c39879f5878f4a65df0096e4e319be70104bcaddd6c755", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n268Part 16 - ROL Instruction\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe ROL command stands for rotate left.\nIn our simple x64 example on an Ubuntu Linux machine above we see we mov 1\ninto al and rotate left by 1 bit.\nThe binary representation is 00000001b . If we ROL  1 bit the value simply\nbecomes 00000010b  as demonstrated below.\nWe first compile and link by:\nnasm -f elf64 -o test.o test.asm\nld -o test test.o\nWe can see here in the debugger that al starts with 1 and when we rotate left it\ngoes to 10b.\nYou can ROL with additional bits as well. The logic would remain the same as the\nbits will rotate left just as we demonstrated above.\nNext week we will dive into ROR! Stay tuned!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 880, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c48c0f0d-c7b7-4ba6-90cf-0414ec759279": {"__data__": {"id_": "c48c0f0d-c7b7-4ba6-90cf-0414ec759279", "embedding": null, "metadata": {"page_label": "269", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c3d1d5f6-03c0-473c-928e-58d74ec0d193", "node_type": "4", "metadata": {"page_label": "269", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "ec74bf645cb49ad07c9b92301a22b5c77ef815a54ae917ce15e194fbe0bd465a", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n269Part 17 - ROR Instruction\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThe ROR command stands for rotate right.\nIn our simple x64 example on an Ubuntu Linux machine above we see we mov\n1 into al and rotate right by 1 bit.\nThe binary representation is 00000001b . If we ROR  1 bit the value simply\nbecomes 10000000b  as demonstrated below.\nWe first compile and link by:\nnasm -f elf64 -o test.o test.asm\nld -o test test.o\nWe can see here in the debugger that al starts with 1 and when we rotate right it\ngoes to 10000000b .\nNext week we will dive into Boot Sector Basics! Stay tuned!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 771, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "de43675a-513c-4e3f-a2ea-be377273e083": {"__data__": {"id_": "de43675a-513c-4e3f-a2ea-be377273e083", "embedding": null, "metadata": {"page_label": "270", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7d6b4382-e6b3-423e-b614-058f39db9754", "node_type": "4", "metadata": {"page_label": "270", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "6016ff5d6b11eb21ee0cce29fd031239d1c43add08df3a197e965c920791fe5d", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n270Part 18 - Boot Sector Basics [Part 1]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nOver the next few tutorials we are going to write a very basic x86 Operating\nSystem to which we will use QEMU which is a full system emulator or OS\nemulator. You could also install VirtualBox and ultimately convert our boot loader\nto an ISO if you so choose.\nAt the very core of a computer booting is what we refer to as the boot loader. The\nboot loader physically reads the first sector or sector 0 from your HD or other\nmedia to ultimately bootstrap an OS.\nWhen the computer boots it reads the first sector which is exactly 0x200 bytes\n(hex) or 512 bytes in decimal.\nThe system that is reading this boot loader is what is referred to as BIOS which is\na basic input output system and it loads in 16-bit mode. It does this to be\ncompatible with older processors. Modern processors immediately switch to what\nwe refer to as UEFI which is a more sophisticated IO system however we will\nfocus on the very basics here with BIOS.\nNext week we will discuss what exactly goes on when BIOS reads the boot\nsector.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1277, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5d76cf17-c4eb-4919-ac56-bb0e21a5fe08": {"__data__": {"id_": "5d76cf17-c4eb-4919-ac56-bb0e21a5fe08", "embedding": null, "metadata": {"page_label": "271", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0813ba98-e715-43a1-87d3-12dc99996a6a", "node_type": "4", "metadata": {"page_label": "271", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "6b6a83b5559ef71d090ee47beb00f3ade930106a314bd22c8b573c93571f171d", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n271Part 19 - Boot Sector Basics [Part 2]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nWe are at the stage where we are going to start integrating real-world code. If you\ndo not have an active linux desktop I would suggest you get Virtualbox and\nUbuntu on either your Windows or Mac. I have a prior tutorial that will walk you\nthrough this process below. For some reason I am not able to embed the link so\nplease just copy and paste it into your browser.\nhttps://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-\nengineering-kevin-m-thomas-16/\nYou will additionally need a text editor for the terminal. I use VIM. You will find a\nlink to set that up as well below.\nhttps://www.linkedin.com/pulse/assembly-language-basic-malware-reverse-\nengineering-kevin-m-thomas-17/\nIn addition you will have to install nasm so you may simply type:\nsudo apt-get install nasm\nNASM is the assembler we will use and we will focus on the intel syntax. First go\ninto the terminal and fire up Vim and type the following:\nRemember to type 'i' to insert and then 'esc' and 'wq' to go into command mode\nand save your file.\nThe above line simply sets an infinite loop and does nothing more. The loop label\nis created to which we simply jmp back to itself. This code in itself will compile\nhowever it will not run in an OS as it does not trigger what we refer to as the\nmagic number to which BIOS looks to understand this is the end of your boot\nsector. We will cover more on that in future lectures.\nWe type the above command assuming you saved your file in vim as\nbootsector.asm . This will create a binary file to which we will examine the\ncontents within a hex editor. A hex editor is an application that examines each\nbyte of data that is compiled into a file. We will see that our assembly instructions\nabove will ultimately get translated down to their raw opcode values. The\nprocessor only understands raw opcodes which are simply operation codes.\nBelow is a link to a table identifying the opcodes. I saved you the effort of\nreferencing the intel dataset as it is literally thousands of pages and several\nvolumes:\nhttp://ref.x86asm.net/coder64.html\nLet's use a hex editor like ghex and open up our bin file.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2390, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "722f3815-30a2-4d43-86d2-70f929a3af29": {"__data__": {"id_": "722f3815-30a2-4d43-86d2-70f929a3af29", "embedding": null, "metadata": {"page_label": "272", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c17cba82-fdcf-42cc-bd32-28973fec44ab", "node_type": "4", "metadata": {"page_label": "272", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "90f497488caef0de0c19a263c1f2a4dbab36f17dca7fc125f82cdb9029ce456a", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n272\nWe see EB FE  which are hex bytes and each letter is a nibble (a nibble is 4 bits\nor half a byte). Both EB FE  make up two full bytes. Keep in mind the processor\nreads from disk in reverse byte order such that FE gets read first and then EB.\nThis process is called little endian and is how the x64 processor works.\nIf you review the table to which I provided the link you will see that FE represents\nan INC or increment by one. This is our loop value.\nNext you will find that EB stands for JMP which is our jump instruction above.\nThis is alot of information if you are new to assembly. Take it step-by-step and\nfollow along with me in a real linux OS and with each lesson you will get a better\nunderstanding of the basics.\nNext week we will build upon this lesson by adding some simple data to our\nbinary.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 824, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "941def26-af38-4503-875d-d1b1c739d2a6": {"__data__": {"id_": "941def26-af38-4503-875d-d1b1c739d2a6", "embedding": null, "metadata": {"page_label": "273", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a4e80fbf-a641-4394-b76c-5baaa3567f9e", "node_type": "4", "metadata": {"page_label": "273", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "378bf015e6bbf5ee0cda04aac8e4b2524355f4c881576a9f9a1d5f92a8a1e4b4", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n273Part 20 - Boot Sector Basics [Part 3]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nFor those of you that are familiar with assembly these next several weeks/months\nmight seem like we are progressing very slowly however the aim is to help those\nwith little understanding of hardware to get a better understanding of the very\nsystems that power the cloud.\nThe vast majority of AWS and Azure as well as many other cloud services utilize\nx64 based operating systems. Understanding what happens when these systems\nboot is of significant value and that is why we are going to go thorough a very\nslow process looking at each piece of a boot sector when a machine loads.\nLet's examine our source code. Follow along in Vim or Nano.\nLast week we learned the opcodes for line 1 and 2 to which we do not have to\nreview. Today we add a byte of data into our code. Notice this is a hexadecimal\nnumber and will match our binary upon inspection. In future lessons we will see\nhow it looks when we do decimal and other systems.\nLet's compile. If you do not have NASM installed please ensure you type sudo\napt-get install nasm .\nLet's look at our binary in a hex editor. I use GHex as I keep to the GNU tradition\nas we will in future lessons use the GNU debugger called GDB. These are all on\nyour Linux systems as I am using Ubuntu for these tutorials.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1524, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "48c7b9d6-112f-433d-8fe4-f7f25c13711b": {"__data__": {"id_": "48c7b9d6-112f-433d-8fe4-f7f25c13711b", "embedding": null, "metadata": {"page_label": "274", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4afcd299-6eea-48de-b3db-0747e4248ee4", "node_type": "4", "metadata": {"page_label": "274", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "c294dc7ff0018b32a6a303e8a9c1e05a1213e9e77c26e7d7dc0002b58ffcd34d", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n274We saw last week that the EB and FE correspond to our INC and JMP\ninstructions. If this is unclear please re-read last weeks lecture. We see the 3rd\nbyte as 10. Remember this is hexadecimal so the value in decimal would be 16.\nNext week we will keep adding to our code and progress in our OS development\nseries.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 328, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4011f973-40c9-4fc3-92d7-331650cb0f1b": {"__data__": {"id_": "4011f973-40c9-4fc3-92d7-331650cb0f1b", "embedding": null, "metadata": {"page_label": "275", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "df0dc31f-34a3-44ed-a28d-dd1308b86de7", "node_type": "4", "metadata": {"page_label": "275", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "901cde2a526a187e3e5e40f0ffb5bfdb85e3476b77f04c798f37995935259c1c", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n275Part 21 - Boot Sector Basics [Part 4]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nToday we continue our Boot Sector Basics. Let's examine the code:\nWe add a string to our code as seen above and compile.\nLet's examine the binary in a hex editor.\nClosely examine the above. We see our original code which we do not have to\nreview however now we see a series of numbers, hex numbers that represent\nASCII characters. We see that each letter corresponds with a letter. When we say\nthat ultimately everything goes down to 0 and 1 this is a proof of concept. As you\ncan see EB is selected above and we can see those hex values ultimately go to\n11101011  in binary.\nHomework: Google and research the ASCII conversion table and do some\nresearch on your own and better understand how hex values represent\ncharacters.\nNext week we take it to the next level. Stay tuned!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1049, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cda301fa-a34c-4631-a998-960d9ae503fb": {"__data__": {"id_": "cda301fa-a34c-4631-a998-960d9ae503fb", "embedding": null, "metadata": {"page_label": "276", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3c916744-f3c3-470a-870f-29129777ced4", "node_type": "4", "metadata": {"page_label": "276", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "d30dc9d7ef0cd8412f995354abc8a504f4269f1b435a8bb9d9438e053a2a220a", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n276Part 22 - Boot Sector Basics [Part 5]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nWe begin by looking at some simple additions to our code. What we will\naccomplish today is to create a simple operating system that does literally nothing\nbut boot. We will use QEMU as an emulator as I am too lazy to set up VirtualBox\nor VMWare however you can easily port the .bin to an .iso if you chose and boot\nfrom either.\nWe are simply adding a padding algorithm on line 7 that simply examines how\nmany bytes are left after we subtract 200h or 512 and then it pads the remaining\nbytes with zeros. At the end you will see what we refer to as the magic number\nwhich is 0xaa55  as this is a signature that the cpu is looking for to identify a boot\nsector. Remember this code is at sector 0 when it boots as there is no file system\nso if it finds the successful signature it will attempt to boot it.\nWe build the binary with the code above. Now let's look at the code in the hex\neditor.\nAs you can see it pads out the remaining bytes up to 200h or 512 with 0's as we\nanticipated. Below is the remainder of the binary.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1292, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2831ce2a-05c2-4e3e-aa10-f9b656ab5abe": {"__data__": {"id_": "2831ce2a-05c2-4e3e-aa10-f9b656ab5abe", "embedding": null, "metadata": {"page_label": "277", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9d16f2b0-8037-4ada-8b47-38900155cd86", "node_type": "4", "metadata": {"page_label": "277", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "d0321cbcf421a1e963408c3136b6669c79e2ca03fdc03c110155b3ebebd5d708", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n277\nAs you can see at the very end we have 55 AA . We remember that our processor\nis little endian so when we code it it was aa 55  and which is in it's mapped format.\nWhen it goes into the cpu it reverses the byte order. This is critical that you\nunderstand this.\nNext week we will simply do nothing more than launch our new operating system.\nStay tuned.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 369, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5c8975fc-4bb7-4837-bbeb-9d95fbaa2451": {"__data__": {"id_": "5c8975fc-4bb7-4837-bbeb-9d95fbaa2451", "embedding": null, "metadata": {"page_label": "278", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "16207582-c809-4102-9dea-820fb6055a2f", "node_type": "4", "metadata": {"page_label": "278", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "7602a7ecaf88c7331ef42bd7d4b7087fe22130c4a696396cb8a870c968a88836", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n278Part 23 - Boot Sector Basics [Part 6]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThis week we will focus on how to use QEMU which is an emulator to boot our\nsimple new OS.\nType the above to obtain qemu specifically for x86 systems.\nRun the emulator with our binary.\nYou will see the following. Keep in mind it does nothing but an infinite loop jump\nwhich we discussed in detail in previous lessons. This however is the most basic\nx86 OS one can create.\nIt simply looks for the signature which we spoke of last week (if this does not\nmake sense please review last weeks lecture) and if it is exactly 200h bytes and it\nis placed at the first sector of the boot medium the process will be successful.\nIf you are interested there are different emulators for different architectures.\nNext week we will discuss memory addressing so that we can set up a stack\nwithin our simple os.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1066, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6eddefbe-aa5e-476b-8d6c-d203c24ae1cb": {"__data__": {"id_": "6eddefbe-aa5e-476b-8d6c-d203c24ae1cb", "embedding": null, "metadata": {"page_label": "279", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "16d3cd0c-56d0-4784-96fc-5312d8e81934", "node_type": "4", "metadata": {"page_label": "279", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "fe02f1d4d6877c1a19a810ed825c6230c62206cd60b5d414fb6a77422f4289d9", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n279Part 24 - Boot Sector Basics [Part 7]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nWe need to discuss memory at this point. Before we can discuss setting up a\nsimple stack in our bootloader we must understand how memory is allocated in\nthe bootsector.\n1)0x0 = Interrupt Vector Table - This is where our interrupt table exists at the\nvery base of memory. This is where all of our interrupt calls exist.\n2)0x400 = BIOS Data Area  - This stores variables about the state of the bootable\ndevice.\n3)0x7c00 = Loaded Boot Sector  - This has our machine code that will be loaded\ninto RAM by the bootloader firmware (note: firmware is simply code that runs\nbefore an OS runs like what we are doing).\n4)0x7e00 = Free  - This is your stack area that you can develop in.\n5)0x9fc00 = Extended BIOS Data Area  - Holds data from disk track buffers and\nother connected devices as remember there is no file system as of yet.\n6)0xa0000 = Video Memory  - BIOS maps your video memory here at boot.\n7)0xc0000 = BIOS  - Where BIOS officially resides.\n8)0x100000 = Free  - Additional space you can develop in.\nThis is critical that you understand how memory is laid out at boot. In our next\nlesson we will create a simple stack at 0x7e00 .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1406, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b6345458-1e34-4f60-861c-6d1dee6c01eb": {"__data__": {"id_": "b6345458-1e34-4f60-861c-6d1dee6c01eb", "embedding": null, "metadata": {"page_label": "280", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ae92e79-39c0-458e-b53b-0853a70456ec", "node_type": "4", "metadata": {"page_label": "280", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "92b4e6172cbab8892cd029cf5628ab4dae0c583b001f0d4ceffe97a292c82fff", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n280Part 25 - Boot Sector Basics [Part 8]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nToday we will put all the pieces together. We will create our custom OS that does\nnothing but boot-up, set a video mode and then only accept numeric digits in the\nconsole. This is the final tutorial in this mini-series of Boot Sector Basics.\nLet's examine our code:\nThe first thing we do is move to the programable area of the boot sector code at\naddress 0x7c00. We then set the stack base and identify the area for our stack\nand set the base pointer into the stack pointer.\nWe then call our video mode function where we set a 640x200 greyscale console.\nWe then call our get character input function that will only allow digits 0 to 9 as\nyou can see 0x30 is the hex ascii value for 0 and 0x39 is the hex ascii value of 9.\nIf the user types anything else in the console literally nothing will enter into the\nconsole. This is the absolute control you have in Assembly.\nLets compile and run:\nWe then see the qemu console:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1191, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4d2362ad-1d81-4962-8cde-abd8020d0733": {"__data__": {"id_": "4d2362ad-1d81-4962-8cde-abd8020d0733", "embedding": null, "metadata": {"page_label": "281", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f41310d6-7946-4155-a0bf-976309109cf0", "node_type": "4", "metadata": {"page_label": "281", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "2e6144c6569d5163826e6614fc1e4f0b38603a8539086caa376355a3ce473ec5", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n281\nAs you can see I am only able to type numeric digits in our OS. Try it for yourself.\nWrite the code and compile and run in the qemu editor. If you do not have qemu\ninstalled I show you in detail how to install it in the last two tutorials.\nTake the time to really review what I am doing here as it is critical to understand\nthat this is how your computer boots before going into 32 then 64-bit mode.\nNext week we will simply discuss the high-level concept of how your computer\nbridges a 64-bit OS.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 515, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "69003810-39d4-4ab9-adc2-737825ddccd2": {"__data__": {"id_": "69003810-39d4-4ab9-adc2-737825ddccd2", "embedding": null, "metadata": {"page_label": "282", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "33446fa5-defd-4156-9121-b09e5250fc3d", "node_type": "4", "metadata": {"page_label": "282", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "2ff24269b1546523b115ab4bde653e4e9e615887e596ff1244f0e195bae92651", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n282Part 26 - Boot Sector Basics [Part 9]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nBefore we dive into x64 Assembly I want to talk very briefly about what we refer to\nas long mode.\nWhen the computer boots it needs to enable what we refer to as the A-20 line. In\nearly architectures, processors had 20 address lines which were A-0 to A-19 to\nwhich could access 2 to the power of 20 bytes of information. The A-20 line is an\nexternal memory reference containing a 16-bit offset address added to a 16-bit\nsegmented number which shifts 4 bits to get the additional access.\nThis process combined with the Global Descriptor Table allows you to work with\nyour Control Register to to execute a far jump to enter protected mode which is\n32-bits.\nLong mode which is 64-bit mode which we are all familiar with in our modern\narchitectures extend the address space to access 0xFFFFFFFFFFFFFFFF.\nThis topic alone can take weeks to explain however I wanted to at a very high\nlevel touch base on the fact that the processor needs to bridge to 32-bit mode and\nthen finally to 64-bit through setting the A-20 line, working with the control register\nand GDT in combination with paging.\nI took several months to get to this point so that you have a basic understanding\nof Assembly as we will start to get into actual 64-bit Assembly in the following\ntutorials and then our C++ tutorial to which we will reverse engineer each code\nblock into 64-bit Assembly.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1627, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9ed78069-36e8-4c70-8653-f66d81102966": {"__data__": {"id_": "9ed78069-36e8-4c70-8653-f66d81102966", "embedding": null, "metadata": {"page_label": "283", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a00087eb-6758-4019-b62e-5f306a4ac6bd", "node_type": "4", "metadata": {"page_label": "283", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "a94b95c1588231d6cb06607f3c4d8095978a24318a01daa9fe24052eea7c8e2f", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n283Part 27 - x64 Assembly [Part 1]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nToday we begin our actual x64 code basics. Over the next few weeks I will create\nvery simple examples so we get a grasp of the x64 architecture. Let's start with a\nbasic code block:\nWe begin by declaring the .data  section to which all of our global data is stores. If\nwe had a string or some other form of hard coded data it would go in that block. In\nour example we will leave it empty.\nThe .text section declares where the entry point of the program will begin in our\ncase we use _start  or you can use main .\nWe simply move the value of decimal 16 or hex 10 into the 64-bit RAX register.\nWe will see in a moment that the processor will use only the lower EAX when we\ndebug in GDB.\nThe last piece is just a simple exit routine which we move 60 into RAX and then\nsyscall. It simply returns operation back to the OS.\nLet's compile and link:\nLet's debug in GDB:\nLet's set the debugger for intel syntax and set a break on start:\nAs we can see 16 decimal or hex 10 is about to be moved into EAX but as we can\nsee it has not been completed until we step forward.\nNow we can view our registers.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1357, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2607b256-6a7b-44e7-b656-300c94633cf4": {"__data__": {"id_": "2607b256-6a7b-44e7-b656-300c94633cf4", "embedding": null, "metadata": {"page_label": "284", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c560e609-4c8b-4ff9-9b91-c0c7fdc003fe", "node_type": "4", "metadata": {"page_label": "284", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "f2568311467384e78f68f023589c541c258139a2c1c6d3a4e520a7efbb3143ea", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n284\nWe can see that RAX holds decimal 16 or hex 10 successfully.\nWe will spend several weeks on these simple examples so you can get\ncomfortable with how the processor operates and its internal workings.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 217, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9271593a-3c48-458f-aa97-557f66be2325": {"__data__": {"id_": "9271593a-3c48-458f-aa97-557f66be2325", "embedding": null, "metadata": {"page_label": "285", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "89e35911-5734-4e84-a756-47c137f0e6c6", "node_type": "4", "metadata": {"page_label": "285", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "7aefa65a9e82ed483616df898e2c76470051416483f7837af1cab84eefb1b497", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n285Part 28 - x64 Assembly [Part 2]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet's continue with another example:\nAs we can see we are moving 0x10  into RAX  and adding 0x05  into RAX .\nWe compile and let's disassemble.\nAs you can see as expected we see our code in debug.\nWe step twice and then...", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 488, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "51243320-c090-455c-8df9-a00ac2b2f3ee": {"__data__": {"id_": "51243320-c090-455c-8df9-a00ac2b2f3ee", "embedding": null, "metadata": {"page_label": "286", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "44f49278-3598-40d6-ba46-8a68a34ffbd7", "node_type": "4", "metadata": {"page_label": "286", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "1c109497e75daa6c4b3919e4094ebb6d125913b1c99d4168e44de3cd27696ef0", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n286We see 0x15 or 21 decimal moved into RAX . Take the time to carefully try these\nvery simple examples as we go forward.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 135, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "49211604-c82c-475a-9707-792a6d36e36d": {"__data__": {"id_": "49211604-c82c-475a-9707-792a6d36e36d", "embedding": null, "metadata": {"page_label": "287", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4d4c0c77-bf81-44f4-bf3e-5cbb656360a9", "node_type": "4", "metadata": {"page_label": "287", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "84dde9febcc5453053f0f24500251de50714906e41134f395a2ba67ddfd30d48", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n287Part 29 - x64 Assembly [Part 3]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nToday we continue our tutorial with a simple subtract example. Let's examine the\nsource code:\nLet's compile and run the debugger:\nLet's run and disassemble:\nAs we can see very we load 16 or 0x10  hex into EAX and then subtract 5 from it\nin the next instruction.\nWe step twice and then look at the resulting value in RAX .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 588, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fdece64e-9947-442f-bdf7-0ac71abd0e72": {"__data__": {"id_": "fdece64e-9947-442f-bdf7-0ac71abd0e72", "embedding": null, "metadata": {"page_label": "288", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "10ccc054-1a10-427a-8018-5e762ce0abaa", "node_type": "4", "metadata": {"page_label": "288", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "e407e765452df6bfc22030fbfcfcbd1012fffe1f1bc585e6208a0fe434e72b9c", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n288\nAs we can see the result is 0xb hex or 11 decimal as expected. It is important that\nyou try these simple examples to get a grasp of what happens when we start to\ndebug C++ code in future tutorials.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 215, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a1cf2b02-c148-48b0-97bb-2696f8be61ab": {"__data__": {"id_": "a1cf2b02-c148-48b0-97bb-2696f8be61ab", "embedding": null, "metadata": {"page_label": "289", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "34bb6a88-b7be-43aa-88ec-0a2d59832487", "node_type": "4", "metadata": {"page_label": "289", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "1e6f579c87b2d8522cea34ddebc22be60dc067dce7fc87681314cebd0837dcad", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n289Part 30 - x64 Assembly [Part 4]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nToday we will code our simple, \"hello world\" program in x64 Assembly.\nWe simply create a string in the .data section and add a return character at the\nend of the statement. We then perform a simple write call which utilizes the OS's\ninterrupt vector table to spit out our string in the standard output or terminal.\nWe will compile and run below:\nAs we can see \" Hello World !\" has been echoed to the terminal. Next week we\nwill debug this simple program in GDB.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 728, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "90ccb634-9b7c-47a5-afd2-ba8cb27bb42f": {"__data__": {"id_": "90ccb634-9b7c-47a5-afd2-ba8cb27bb42f", "embedding": null, "metadata": {"page_label": "290", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1512e8d2-7b8f-4d72-8cb6-4de1b6471276", "node_type": "4", "metadata": {"page_label": "290", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "d13302889d91a25139346ff060b15a176ddc2b0f061e3a876caf62003bf83cf7", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n290Part 31 - x64 Assembly [Part 5]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nThis lecture will be a bit longer than most however it is important that you all take\nthe time to really code and practice the topics discussed below. Let's review our\ncode:\nLet's compile and run:\nAs we can see from last week we successfully created our simple \"Hello World\"\nprogram successfully.\nIn prior lessons I touched upon the x64 register set however I will review again\nwith this table:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 661, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c9ebae01-ac67-4dbc-81d4-af5b63502aec": {"__data__": {"id_": "c9ebae01-ac67-4dbc-81d4-af5b63502aec", "embedding": null, "metadata": {"page_label": "291", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4cc44e54-30e5-4414-be87-dc3dad1e7f04", "node_type": "4", "metadata": {"page_label": "291", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "5833b434f98de4336bc56ddb1c4c14f39fb6cd5527fb9697d30b69f2a03e3fc5", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n291\nIn prior lessons we described what these registers basic functionality consists of\nhowever it is important to understand the 64-bit to 8-bit slices of the registers.\nRegisters hold temporary memory. This is the key takeaway here.\nWe have three sections in Linux-based assembly which consist of a:\n.data = consist of data definitions\n.bss = consist of variable data allocation\n.text = actual code\nIn our example above we used the label of text not to be confused with the .text\nsection. Our compiler will take all of our labels and determine an actual mapped\nmemory location and replace each label with the memory in the actual binary file.\nIt is important to understand that each string character is a byte in length which is\nrepresented by two hex digits. There is an ascii table that you can Google that will\nshow you all of these values. Each hex digit is a nibble or 4-bits long. For example\nour 'H' is 0x48  and ' e' is 0x65 . Let's look at our binary in a hex editor to illustrate.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1005, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "10177115-ef35-4bd5-a545-8ae0ba1379c6": {"__data__": {"id_": "10177115-ef35-4bd5-a545-8ae0ba1379c6", "embedding": null, "metadata": {"page_label": "292", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "94fa673c-c35a-4c4b-8f0c-d438fc2a2ba0", "node_type": "4", "metadata": {"page_label": "292", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "9c3c47e4b88c82c309a20900eaf8ae352778191eacdb55b66cd280a256d66361", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n292\nIn last week's lecture's comments, Aaron pointed out something that is very\ncritical that you understand when looking at Assembly in an Operating System vs\nFirmware such as the code we created for our Operating System in our prior\nlectures.\nAaron carefully pointed out in the comments last week that a SYSCALL is\ncompletely dependent on the operating system. System calls will differ depending\non the OS because each OS has a different Kernel and each have their own\nvector interrupt tables which have an ID associated with them with a\ncorresponding number value.\nA SYSCALL is nothing more then when a binary requests a service from a\nrespective kernel to which will take arguments or a list of inputs. It is important to\nunderstand in x64 that System Call arguments or inputs correspond to specific\nregisters:\nThere are 328 SYSCALLS in a traditional linux kernel. As we see above in our\ncode we use both the SYS_WRITE and SYS_EXIT . Let's illustrate:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 969, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "26d21766-c1b6-4b86-bf56-e04eb1712bc5": {"__data__": {"id_": "26d21766-c1b6-4b86-bf56-e04eb1712bc5", "embedding": null, "metadata": {"page_label": "293", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8baa1f8b-715a-4b8f-94a8-05c9587abe44", "node_type": "4", "metadata": {"page_label": "293", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "b84ecfe78ab8d519921f990a08d4af43712fce78c431665ff9e03e87456e8605", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n293\nPlease take a moment to look at our code above to see how this works. In\nSYS_WRITE  we load 1 into RAX  which is our SYSCALL. We load 1 into RDI\nwhich is our first argument which represents our standard output (0 = standard\ninput & 2 = standard error). Our second argument is loaded into RSI which is our\ntext label to which when compiled will have an actual memory address as you will\nsee this in a debugger. Finally our third argument will hold the string length which\nis 13 in our case and loaded into RDX . As an exercise I want you to write out how\nSYS_EXIT  does the same and keep in mind there is only 1 argument there.\nPLEASE REVIEW the code above to firmly understand this before moving on!\nIn addition we have our _start label to which our respective operating system will\nlook for otherwise it will throw an error when it seeks to find an entry point to our\ncode. The global declaration tells the linker the actual address of the data.\nNext week we will debug the binary in GDB.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1007, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "33e96c0e-f8fb-4067-92b5-ee77cd7c53a4": {"__data__": {"id_": "33e96c0e-f8fb-4067-92b5-ee77cd7c53a4", "embedding": null, "metadata": {"page_label": "294", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1d75198f-372c-4b0e-8cc6-2cf9088c675a", "node_type": "4", "metadata": {"page_label": "294", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "f5f36d56684fdd3e43a7d9f5e1817882deaf8e6eea37aee77fc3661583e400d4", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n294Part 32 - x64 Assembly [Part 6]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet's review our code.\nCompile...\nDebug...\nLet's evaluate what is inside the memory address of 0x6000d8.\nAs we can see \" Hello World \" with the return character will then be moved into our\nRSI register.\nNext week we will examine this a bit closer.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 514, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0fdeaf95-5a43-41d0-ba67-832c127578f4": {"__data__": {"id_": "0fdeaf95-5a43-41d0-ba67-832c127578f4", "embedding": null, "metadata": {"page_label": "295", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b6712f88-c3d8-45d7-ab1e-d836c23ac4c4", "node_type": "4", "metadata": {"page_label": "295", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "e678198c3f7edf17859faf3c8e2eedf0c60890a70f1eb9a0a72d6bfcfa871eb0", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n295Part 33 - x64 Assembly [Part 7]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet's again review our source code.\nLet's compile...\nAs we have seen before it produces our string.\nWe debug and see the string being moved into 0x6000d8  and then RSI.\nJust to verify we can see the string at the aforementioned address. NOW FOR A\nBIT OF FUN :)...\nHere we demonstrate we have the power to simply hack and redefine the string in\nmemory. We are simply setting a char byte length and setting a new string.\nAs we can see we have successfully altered the string in memory.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 750, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ee72daf3-5277-48c1-bc86-bd136139f504": {"__data__": {"id_": "ee72daf3-5277-48c1-bc86-bd136139f504", "embedding": null, "metadata": {"page_label": "296", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1394664c-11d0-46b1-9a5a-a2edf0d93051", "node_type": "4", "metadata": {"page_label": "296", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "9a8cfccfdc6faf6995d12305f3d4c1168eba8a07a76cc9b2addde5e1b4a38ba7", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n296\nWe continue and run through the binary and see that our hack continues through\nRSI.\nFinally we see when we run the binary we have successfully hacked it's\noperation. This is a very simple example however shows the power of truly\nunderstanding assembly at this level. GUI debugger tools will also provide this\nfunctionality however I like to use the command line tools so that they could be\nused on every environment.\nThe purpose of these tools is to UNDERSTAND how this is done and what to look\nfor when you are professionally reversing in real-time. You need to understand\nhow an attacker can alter memory and/or instructions. We need more professional\nRE's to help defend infrastructures throughout the world and hopefully these\ntutorials motivate you toward a career in such.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 796, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "953064b0-7768-4f8a-9ecb-ed83d0024ba9": {"__data__": {"id_": "953064b0-7768-4f8a-9ecb-ed83d0024ba9", "embedding": null, "metadata": {"page_label": "297", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "11b8c5d0-58c7-4100-99f8-600acfb8e955", "node_type": "4", "metadata": {"page_label": "297", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "aca3766fab5ac765c8c19b8ceed8ffd2a8dd5ab84c37066b4577dcd7fc301378", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n297Part 34 - x64 C++ 1 Code [Part 1]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nToday we start our RE with the C++ language. The vast majority of malware is\nwritten in C++ and walking through simple code examples over the coming\nmonths and breaking them down in a debugger will give you a real hands-on\napproach to learning true RE.\nWe will use Kali Linux going forward with Radare 2. You can get VirtualBox and\ndownload the Kali Linux x64 Appliance to follow along.\nLet's start with the C++ 1 code example:\nHere we simply create a main function and use the C++ output stream library to\noutput the text \"Hello World\" with a new line at the end to the terminal. Let's\ncompile and link:\nLet's run in the terminal:\nAs we can see \"Hello World\" successfully echoed to the terminal.\nNext week we will introduce Radare 2 and debug the code and examine what it\nlooks like in x64 Assembly.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1069, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2e4d8eb4-d9eb-47f7-a9d8-f918b0d0f044": {"__data__": {"id_": "2e4d8eb4-d9eb-47f7-a9d8-f918b0d0f044", "embedding": null, "metadata": {"page_label": "298", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "26071537-5165-4d2b-bc60-b09088365ecc", "node_type": "4", "metadata": {"page_label": "298", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "05e452a73a4292c14de5dcb38773cff4d954742ad0971d16cc697b17101043e7", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n298Part 35 - x64 C++ 2 Debug [Part 2]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet's review our code:\nCompile:\nRun:\nFor literally years I have been using GDB as the debugger of choice. The reason\nis that it is on every Linux based system which runs just about every IoT and\nServer in the world. In addition, there are versions for Windows.\nI have struggled hard with this but have decided to introduce another terminal\nbased debugger called Radare 2. The reason I like Radare 2 so much is that it is\nstill terminal based yet more robust with its feature set. If you are running a Kali\nLinux VM like I am here you can simply the below.\nLet's open up our binary for write mode and simply analyze the binary.\nOk, there is a lot going on here. Let's break it down. First, we open up Radare 2 in\nwrite mode by typing ' r2 -w ./1 ' and then use the ' aaa' command to analyze the\nbinary. We then use ' s sym.main ' to seek to the main routine of the binary which\nis our entry point. We then do a ' pdf' command to disassemble the binary.\nWe see what we refer to as the prologue where we push rbp the stack base\npointer onto the stack. We then move rsp into rbp for safe keeping and then we\nreserve 0x10  hex bytes or 16 decimal bytes on the stack to make room for our\nstring.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1459, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7aabe7c5-12c5-4659-beaf-e3169f7c4a66": {"__data__": {"id_": "7aabe7c5-12c5-4659-beaf-e3169f7c4a66", "embedding": null, "metadata": {"page_label": "299", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "24de856e-631a-428b-9398-e7a5cc725bc1", "node_type": "4", "metadata": {"page_label": "299", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "d0f18b1cf15b077afbdb328ef8dc2444f250748d786b4035362b9d047d1bfcdd", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n299If none of this makes sense please go back to the beginning of the tutorial series\nto review basic assembly and the registers as it is CRITICAL you understand this\nbefore we move forward.\nWe can clearly see the qword of ' Hello World\\n ' at memory address 0x2005  and\nthen we see our C++ library call for the output stream which is cout to display our\nstring to the terminal.\nLet's examine 0x2005  to verify that our string is at that location:\nNext week we will hack the value and modify the binary. I highly encourage you all\nto install VirtualBox which is free and get the Kali Linux VirtualBox image and\ninstall Vim as well.\nThere are tutorials on all of this in my prior series. Stay tuned for the hack next\nweek!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 735, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f5827238-94af-43e6-915b-912fde09b870": {"__data__": {"id_": "f5827238-94af-43e6-915b-912fde09b870", "embedding": null, "metadata": {"page_label": "300", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "82c78b69-9b2e-45ba-9d0e-da5e42592138", "node_type": "4", "metadata": {"page_label": "300", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "90c0270186721c9bf6d305e0981fe8fc836703723d5c5ea99377a5ff9ae92d14", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n300Part 36 - x64 C++ 3 Hacking [Part 3]\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet's review our code:\nCompile:\nRun:\nLet's remember this line above when we compare against our hacked binary.\nLet's open up our binary for write mode and simply analyze the binary.\nOk, there is a lot going on here. Let's break it down. First, we open up Radare 2 in\nwrite mode by typing ' r2 -w ./1 ' and then use the ' aaa' command to analyze the\nbinary. We then use ' s sym.main ' to seek to the main routine of the binary which\nis our entry point. We then do a ' pdf' command to disassemble the binary.\nWe see what we refer to as the prologue where we push rbp the stack base\npointer onto the stack. We then move rsp into rbp for safe keeping and then we\nreserve 0x10  hex bytes or 16 decimal bytes on the stack to make room for our\nstring.\nIf none of this makes sense please go back to the beginning of the tutorial series\nto review basic assembly and the registers as it is CRITICAL you understand this\nbefore we move forward.\nWe can clearly see the qword of ' Hello World\\n ' at memory address 0x2005  and\nthen we see our C++ library call for the output stream which is cout  to display our\nstring to the terminal.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1393, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fbb92792-9372-42f6-bef0-3a31ac3ba565": {"__data__": {"id_": "fbb92792-9372-42f6-bef0-3a31ac3ba565", "embedding": null, "metadata": {"page_label": "301", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c0e6c853-a4f2-4fbb-8fea-7c38ac6788ba", "node_type": "4", "metadata": {"page_label": "301", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "6af2346003028e83a23e34d7738cec1dfc8139962383230ba670abbd55b5e4e3", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n301Let's examine 0x2005  to verify that our string is at that location:\nNOW TIME FOR THE HACK!\nLet's hack the value to something like:\nNow let's see what is now inside memory value @ 0x2005 !\nBOOM! As we can see we have hacked the value and when we quit Radare 2 it\nwill write it and modify our binary as such.,\nAs you can see we have hacked the binary! This is very basic but now you have\nan elementary level of understanding of Reverse Engineering a C++ binary.\nNext week we will continue our journey into C and step-by-step reverse\nengineering.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 561, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9d11723a-6c79-4bdf-88fe-e1d73b32d904": {"__data__": {"id_": "9d11723a-6c79-4bdf-88fe-e1d73b32d904", "embedding": null, "metadata": {"page_label": "302", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0159e441-da03-44a3-a510-08985a659182", "node_type": "4", "metadata": {"page_label": "302", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "4b04bf6ebfbc2afe1174c1a9e483e6cd6da3a74e384fc3d2ef0ee999f4de9cb4", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n302Part 37 - x64 C & Genesis Of Life\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nCongrats you wrote, compiled and hacked your first C++ program. For the rest of\nthis tutorial I am going to focus on the father of all programming languages from\n\"Hello World\" to web servers in the programming language to which ALL modern\nlanguages come from C.\nLike the variety of religions there are programming languages. Nonetheless there\nis the ROOT religion or language to which all spawn which is C. I am going to\nover the next several months teach you C and Reverse Engineer each binary so\nyou have a mastery over the MASTER language of all existence.\nWhen we need to develop in an agile environment we will of course use Java or\nPython or any of the other rapid development languages however if you are to\nmaster Cyber Engineering you MUST become ONE with the WORD to which in\ndigital and cyber terms is the C Programming Language.\nThink of C as if you are in church where Python or Java or C# you are in a secular\nenvironment. C will allow TOTAL and complete control over your program or\nenvironment where Java or Python will allow only partial control however they are\nNECESSARY languages in today's rapid development business logic\nenvironments.\nIn our next lesson we begin with the basic \"hello world\" program as we did in our\nprior lesson however we now will work with C. Remember Einstein - \" I want to\nknow God's thoughts, the rest are details. \" This is the difference between C\nand any other language you are sitting at the ROOT of engineering design for\nportable systems!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1759, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "448a37a5-e551-42ad-97f6-661564978a73": {"__data__": {"id_": "448a37a5-e551-42ad-97f6-661564978a73", "embedding": null, "metadata": {"page_label": "303", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "717e5f72-53a7-408d-a3ae-fc5b674b3c5a", "node_type": "4", "metadata": {"page_label": "303", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "8e685c6123b1cad7a3f183755688682ad05e8243b38ba4cfa4444092cdb17a87", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n303Part 38 - x64 Networking Basics\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nOk so what now? Where are we in the world? What is our purpose? What shall I\nfocus on? What shall I learn?\nThere are over 30 billion devices connected to the Internet today. Nonetheless,\nthe common thread in all basic architecture is the C programming language.\nWe have established that networking can be described in a very high-level\npseudo framework called the OSI Model which has 7 layers.\nPLEASE DO NOT THROW SAUSAGE PIZZA AWAY. Ok I am not insane, well, ok\nI am but this is a good standard agreed upon way to remember the layers in the\nOSI model which is our Open Systems Interconnection model.\n1)PHYSICAL LAYER  - Raw electrical layer which read voltages on an ethernet\ncable or reading the Wi-Fi RF (radio frequencies). Protocols associated: USB,\nDSL, ISDN, Infrared, etc...\n2)DATA LINK LAYER - Deals with how a message between notes starts and\nends called framing which has some error correction, detection and some flow\ncontrol. Protocols associated: Ethernet, VLAN, etc...\n3)NETWORK LAYER  - Transmits packets between nodes in different networks\nwhich involves routing. Protocols associated: IPX, NAT, ICMP, ARP, etc...\n4)TRANSPORT LAYER  - Reliably deliver data between two hosts which must\nsplit it up into chunks to send. Protocols associated: NetBIOS, TCP, UDP, etc...\n5)SESSION LAYER  - Adds checkpoint and resume in addition to term dialogues.\nProtocols associated: SMB, SOCKS, etc...\n6)PRESENTATION LAYER  - Where data structure for and presentation for an\napplication are created where we have encoding, serialization and encryption.\nProtocols associated: TLS, SSL, etc...\n7)APPLICATION LAYER  - Web browsers and apps that use web interfaces like\nemail, etc. Protocols associated: DHCP, DNS, HTTP, HTTPS, POP3, SMTP, FTP,\nTELNET, etc...\nAs we browse a website we start at the PHYSICAL and go to the APP and as it\nhits the server it is at the APP and goes back down to the PHYSICAL and back\nthrough the cycle.\nThis is an important series of concepts that you must understand in any basic\nnetworking. This is NOT a course in networking as we will touch BRIEFLY on\nthese concepts so I would suggest you find a free course on YouTube for\nnetworking if you are stuck. I want to get through some basic theory so we can\nwork with C networking apps.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2527, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "feb466da-7d75-4350-b39b-79c5aee0c9c7": {"__data__": {"id_": "feb466da-7d75-4350-b39b-79c5aee0c9c7", "embedding": null, "metadata": {"page_label": "304", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "30307e36-2c2c-4ea4-9cd1-6184fbb00acf", "node_type": "4", "metadata": {"page_label": "304", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "6323f97b1cc828f06104a458805620e0b1bbc7d4d45bc5d181dccc9781d0d4c2", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n304Part 39 - Why C?\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nSo... What does an x64 server or computer actually understand?\n0100010100100100101010 and many more...\nA small level above that we are at machine code which is a series of hex digits\nwhich translate into machine instructions and/or data.\nWith the C programming language, we created a construct to more easily create\nprograms to communicate with the hardware. C is the Grandfather of almost\nevery programming language in modern existence.\nC abstracts away the x64 binary of 010101000101001011 or machine code of\n0x90 0x45 0x22 0x22 or assembly mov rax, 0x222323123, etc...\nNext we create our first real C program!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 864, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5aae2267-789e-4657-bd74-fb13797d96bf": {"__data__": {"id_": "5aae2267-789e-4657-bd74-fb13797d96bf", "embedding": null, "metadata": {"page_label": "305", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "775e96f5-0592-46c7-a0c3-795e928ecfcc", "node_type": "4", "metadata": {"page_label": "305", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "00b2d21c8cd1d38cc9caa8a236d9d050e1852d4496d59d4e40e2ebb2841716c8", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n305Part 40 - Hacking Hello World!\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nOk it is time we look at the most basic C program, debug it and hack it. If we are\nto have mastery we must create and destroy in a single-step so that we have\nmastery over the domain.\nLet us fire up VIM and type out the following. We include our standard library and\ncreate a main function to which we use the library function of printf to echo a\nstring of chars and since the type of main is int meaning integer we return 0.\nLet us compile and see what happens when we run:\nAs we see like we did in our C++ example we see ' Hello World! ' echoed\nsuccessfully.\nLet's debug in Radare:\nThis is simple, we use aaa to analyze the binary and seek to main with s\nsym.main .\nLet's look at the assembly and analyze:\nAssembly! The definition of raw sexy!\nI went over this in detail in the previous lessons on Assembly but let us review.\n1)We push rbp which means we push the value currently in the base pointer onto\nthe stack.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1183, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "17939725-6432-44b4-af69-018a8733eda3": {"__data__": {"id_": "17939725-6432-44b4-af69-018a8733eda3", "embedding": null, "metadata": {"page_label": "306", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6d4097c7-b1fc-43c7-af49-89d817af2bc7", "node_type": "4", "metadata": {"page_label": "306", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "8d54453e99f320f169f14ea8ec238bb165332014c11c49f9b5aa6b14f7d5f461", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n3062)We lea rdi, qword str.Hello_World which means we load the effective address\nof the quad word of our string into the rdi register. So far should be simple for you\nto follow along.\n3)We then call sym.imp.puts  um wait! We used printf  what the hell! Well our\ncompiler optimizes our code and the compiler chose the puts  function in the stdio\nlibrary to echo the string to our terminal. Again easy enough.\n4)We clean out eax and then pop the original value in the rbp register back into\nrbp. If you are confused by this review the earlier part of the series please.\nWe know our string ' Hello World! ' lives at a pretty house in Arlington, VA at the\naddress of 0x2004  well ok, it's not Arlington, VA but it is in mapped memory (since\nwe are not technically debugging we are messing with mapped code meaning the\nsame values on disk).\nTo confirm we see the value at 0x2004  is 'Hello World! ' Let's hack that value to\nanything we want with the w command and write directly to that mapped memory\naddress.\nLet us re-examine who NOW lives in our Arlington, VA house!\nSuccess! We hacked the value and when we exit our debugger we see:\nWe have successfully altered the binary.\nThis is alot to digest here. If you are stumped ask questions in the comments\nPLEASE! Do not continue as I am here to help. It is CRITICAL you understand\nthese most basic things before we continue!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1384, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2edf6bc5-284f-484f-8141-6f88b8c052ba": {"__data__": {"id_": "2edf6bc5-284f-484f-8141-6f88b8c052ba", "embedding": null, "metadata": {"page_label": "307", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3c0d953e-7217-4326-9c0c-d2fab55efbda", "node_type": "4", "metadata": {"page_label": "307", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "3fe4b6a64fdd0e660a43cf244c0ec18bf66108d28a09e797bbf90e628cf0b7c4", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n307Part 41 - Hacking Variables!\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nIn C we have several data types to which we can create variables. I will use a few\nsimple examples:\nLet's compile and run:\nOk as we can see we have a character an integer and a double. These are some\nof the most basic data types in C to which we have created a series of variables\nas shown above.\nLet us load the binary into Radare:\nLet's disassemble at main:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 623, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4e2aa77a-84f7-464e-9b99-1d471571828a": {"__data__": {"id_": "4e2aa77a-84f7-464e-9b99-1d471571828a", "embedding": null, "metadata": {"page_label": "308", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0eb644d8-d73b-4d17-8822-d28b151ed9b0", "node_type": "4", "metadata": {"page_label": "308", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "6a1ceee1bff1f45ba9603ffd3469cb10d87b6d0721bcaa71b78a4d3ff32a97a1", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n308\nOk very simply we see 3 variable declarations defined up at the top in reverse\norder as they are local_1h which is our char a,  local_8h  which is our int b  and\nlocal_10h  which is our double c . You can also see the rbp base pointer\nallocating space for these variables. This is nice pseudo code that the debugger\nshows you up top.\nOk stay with me!\nWithin memory at 0x0000113d we see the instructions mov byte [local1_h],\n0x61  which is in our ascii table a lowercase ' a'. We know that [local1_h] is not real\ncode however what is going on under the hood is the fact that these variables are\npushed onto the stack in reverse order as we can see above. Therefore, if we\nwere to hack our code to something like mov byte [rbp-0x1], 0x62 what do you\nthink might happen? Very simple, we know that in reality the code at the mapped\nmemory address of 0x0000113d  what is really going on is mov byte [rbp-0x1],\n0x61 . Quite simply what we have just done is hack our value of ' a' to 'b'. This\nshould hopefully make sense to you.\nNow let us re-examine our binary:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1074, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bc9696ac-fc0b-4f11-b64a-997232c041f5": {"__data__": {"id_": "bc9696ac-fc0b-4f11-b64a-997232c041f5", "embedding": null, "metadata": {"page_label": "309", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "be019133-cb45-4b6e-8da0-fa5b37d79dcb", "node_type": "4", "metadata": {"page_label": "309", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "edec33dc3cd312412bbc9e1d002869d2d3a2dba1b798856c25950f35a617d7da", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n309\nAs we can clearly see at memory address 0x0000113d we in fact see ' b'. We\nhave successfully hacked this portion.\nWe exit out of Radare and re-run the binary and we can see we have successfully\nhacked the value.\nHOMEWORK TIME! I want you to with this knowledge now hack the int and the\ndouble . I want you to put your results in the comment sections below. It is VERY\nimportant that you type all of this out and actually explore the exercises so I am\nlooking forward to seeing your hacks in the comments!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 522, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "accf81fc-3eee-403b-952a-13328b973e52": {"__data__": {"id_": "accf81fc-3eee-403b-952a-13328b973e52", "embedding": null, "metadata": {"page_label": "310", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4eade037-4592-4204-9191-cd2996007fdb", "node_type": "4", "metadata": {"page_label": "310", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "b489f4cc2d1d675f850637d87643dcf1d7346f4a8a23aca8b8174a9997506cf3", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n310Part 42 - Hacking Branches!\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nLet's take a look at some branching logic:\nAs we can plainly see we init an int to 1 and if the variable is equal to 1 the first if\nstatement prints a response to standard output.\nLet's compile:\nLet's run:\nAs we can logically see the first branch is taken. Let's take it into Radare and look\naround at the assembly:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 578, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ed2e1b16-e1bc-4747-a0fc-20301e3c3f4a": {"__data__": {"id_": "ed2e1b16-e1bc-4747-a0fc-20301e3c3f4a", "embedding": null, "metadata": {"page_label": "311", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9958a76d-45b9-44c5-a5df-8c17aee15ffe", "node_type": "4", "metadata": {"page_label": "311", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "886596f70776a636f5712daa35e64df229bda2ccda878ce6075a02ee28550261", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n311We can see the branching logic with the aqua colored arrows. At 0x0000114a  we\nsee our first branch being loaded into rdi. Take note at 0x00001148  we see a jne\n0x1158 . At 0x00001158  we see our second branch being loaded into rdi.\nThe jne means jump if not equal. This means if what is being compared in\n0x00001144  is not equal to 1 (we see 1 being compared to what is in local_4h\nwhich we know is pseudo code for what is actually in rbp-0x4 . This should make\nsense as I went over this in detail last week if you are confused please revisit our\nlast lesson.\nTo hack we simply make the jne statement to je which is jump if equal which we\nknow the cmp or comparison is equal so it will now branch to \" A is NOT 1! \".\nWhen we exit Radare we can see we have hacked the binary successfully:\nStay tuned!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 818, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bd4181f8-0300-4b2e-bae6-e5caf1967de1": {"__data__": {"id_": "bd4181f8-0300-4b2e-bae6-e5caf1967de1", "embedding": null, "metadata": {"page_label": "312", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9c44ee0b-903f-414e-afed-b996eafdb5ad", "node_type": "4", "metadata": {"page_label": "312", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "df6a4acb0db6233c439d87bd95359d0830e31d53a28d50073a3534dfa655995d", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n312Part 43 - Hacking Pointers!\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will\ncover. https://github.com/mytechnotalent/Reverse-Engineering-Tutorial\nWe are at the end of the road. This is the final video in the x64 series. The final\ntopic is that of pointers.\nWhat are pointers? Let us start with an example.\nA pointer is nothing more than a memory address. When we compile we will\nclearly see where lottery_number lives in mapped memory (this is a running\nexample unlike our unmapped Radare examples).\nLet's add a true pointer to the example:\nWe see the same value:\nLet us experiment more:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 704, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "26a8b1d6-533e-4be7-9c9f-0ec99e730828": {"__data__": {"id_": "26a8b1d6-533e-4be7-9c9f-0ec99e730828", "embedding": null, "metadata": {"page_label": "313", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5dfcdcf2-40e9-4d6f-8c2a-c07f8c3c72c4", "node_type": "4", "metadata": {"page_label": "313", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "3a25f22ac2b2d692c6ea91907070a9f18199759bb60b3205e8fea8451a0e0c2e", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n313\nWe see the pointer address point to a new address:\nRemember pointers are memory addresses of other variables. Let's look at it\nanother way:\nLet us compile:\nWe deference by doing the following:\nThen we compile:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 227, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f4a973a8-1aae-4725-9a76-1f389726c80e": {"__data__": {"id_": "f4a973a8-1aae-4725-9a76-1f389726c80e", "embedding": null, "metadata": {"page_label": "314", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e3a68f3c-8dfc-4868-b72c-5f66d7695afd", "node_type": "4", "metadata": {"page_label": "314", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "f3745661c9360eea1a79f31098c048477cb7076c8ff1cf9aeeb64bee94fc9d50", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n314\nWe can see the deference pointer is equal to 777.\nWe can see the example with an array:\nLet's debug:\nThen we disassemble:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 139, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3f991e64-d8c8-41cd-8573-c3372afeae7f": {"__data__": {"id_": "3f991e64-d8c8-41cd-8573-c3372afeae7f", "embedding": null, "metadata": {"page_label": "315", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed176568-a807-4b1f-a151-d3c73299a01a", "node_type": "4", "metadata": {"page_label": "315", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "407d1211277ad57f6827f58a75a8c22f0d6e2a6b9f3b0a1b4816b5012cef4730", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n315\nLet's hack!\nLet's re-examine the binary:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 58, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d1ac9c80-c1e6-4bb5-a36e-20a63c7079e1": {"__data__": {"id_": "d1ac9c80-c1e6-4bb5-a36e-20a63c7079e1", "embedding": null, "metadata": {"page_label": "316", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9218787c-fb29-47e4-bec9-45e305275191", "node_type": "4", "metadata": {"page_label": "316", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "403c7cd9da53e19334a1753edabc829474f7a7e5a32c1fa5edd1bfe58b640ca7", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n316\nWe can see we hacked the value of 3 with 6.\nWe can see we have made the successful hack.\nI hope over the years through the literal hundreds of x86, ARM and x64 tutorials\nyou have a basic knowledge of how to do GOOD to protect critical infrastructures\nfrom malicious hands by understanding how the enemy works. Go and do GOOD\nwork!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 348, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3f28fc44-8ba8-4f9c-a0f2-edde1be5c16e": {"__data__": {"id_": "3f28fc44-8ba8-4f9c-a0f2-edde1be5c16e", "embedding": null, "metadata": {"page_label": "317", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "15bd502c-ab68-45ec-ad6f-65ab5106d56c", "node_type": "4", "metadata": {"page_label": "317", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "652af53e3ab2b2cefb0595dfc023e7b7403ad44a6ce2fd4743f6cac226f64240", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n317The 64-bit ARM Architecture\nLet's dive in rightaway!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 69, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "daea46d6-01a5-4686-ae91-6b3cfc463733": {"__data__": {"id_": "daea46d6-01a5-4686-ae91-6b3cfc463733", "embedding": null, "metadata": {"page_label": "318", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2630c9e4-f8e4-4a93-9b7a-03f4e04b73c2", "node_type": "4", "metadata": {"page_label": "318", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "3b03d410b8359d8bc92fa12953b1ea5142c3df14e3308ecfe21f71d4b190f71e", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n318Part 2 - Development Setup\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will cover.\nhttps://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we are going to set up our development environment. We will need the\nfollowing:\nRaspberry Pi 4 \n64GB MicroSD Card \nMicro SD Card Reader/Writer \nDownload 64-bit Kali Linux ARM Image \nDownload balenaEtcher \nFlash Kali Linux ARM Image \nOPTIONAL: Video [Load Kali RPI 4] \nHow To Install VIM \nGit Clone & Build Radare2 Software \nRaspberry Pi 4\nhttps://www.adafruit.com/product/4292\n64GB MicroSD Card\nhttps://www.sparkfun.com/products/16498\nMicro SD Card Reader/Writer\nhttps://www.walmart.com/ip/Iogear-GFR204SD-SD-MicroSD-MMC-Card-Reader-\nand-Writer/15522266\nDownload 64-bit Kali Linux ARM Image", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 848, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "de80cacb-1bcf-4349-acdf-98b741db0066": {"__data__": {"id_": "de80cacb-1bcf-4349-acdf-98b741db0066", "embedding": null, "metadata": {"page_label": "319", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e7736e3f-cb0b-44f9-b775-8f59f9173e5c", "node_type": "4", "metadata": {"page_label": "319", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "b5abf602647e0e28080379a0621345839bd64476716f07192336abe079160095", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n319Kali Linux RaspberryPi 2 (v1.2), 3 and 4 (64-Bit) (img.xz)\nhttps://www.offensive-security.com/kali-linux-arm-images\nDownload balenaEtcher\nhttps://www.balena.io/etcher\nFlash Kali ARM Image\nOPTIONAL: Video [Load Kali RPI 4]\nhttps://youtu.be/Jquf9BDm4iU\nHow To Install VIM\nhttps://www.simplified.guide/ubuntu/install-vim\nAfter obtaining all the necessary devices and software please watch the video on\nhow to set up your environment as Null Byte did an amazing job with a step-by-\nstep tutorial which will get you set-up in minutes.\nThe next step is to git clone and build the Radare2 software as this will we want\nthe latest version as the standard version built into Kali will not be sufficient for our\nneeds.\nGit Clone & Build Radare2 Software\nhttps://github.com/radareorg/radare2\ncd Documents \ngit clone https://github.com/radareorg/radare2.git \nsys/install.sh \nFinally we will be using a text editor to build our code. Kali has both the VIM and\nNano text editors built-in. We will be using VIM but you are free to use whatever\none you are comfortable with.\nIn our next lesson we will write our first C++ program which will be \"Hello World!\".", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1160, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c5acc1c9-6094-4aa5-a355-87a51e6563dc": {"__data__": {"id_": "c5acc1c9-6094-4aa5-a355-87a51e6563dc", "embedding": null, "metadata": {"page_label": "320", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e88052ab-082e-4d00-9c2c-1cd130aeeaf7", "node_type": "4", "metadata": {"page_label": "320", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "eeb19e21622570711b8df13613d78b50b99b3d96cf430f397d0ba0fbdeaf125e", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n320Part 3 - \"Hello World\"\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will cover.\nhttps://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we are going to start at the beginning and take a very simple C++ program\nthat does nothing more than use the stream insertion operator to send a string\nliteral to the stdout and then use the end line manipulator to flush the output\nbuffer.\nLet's start by creating a file 0x01_asm64_helloworld.cpp and type the following\ninto it.\n#include <iostream> \n \nint main() \n{ \n    std::cout << \"Hello World!\" << std::endl; \n    return 0; \n} \nLet's compile and link.\ng++ -o 0x01_asm64_helloworld 0x01_asm64_helloworld.cpp \nLet's run.\n./0x01_asm64_helloworld \nWe see the simple result.\nHello World! \nThese lessons are deliberately intended to be SHORT an SIMPLE. I know a\nnumber of you are more advanced however I really want to make this course as\nbeginner friendly as possible.\nIn our next lesson we will debug this very simple binary using our dev build of\nRadare2.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1111, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c334fe97-50b8-40c8-9123-fddeb97a2bfe": {"__data__": {"id_": "c334fe97-50b8-40c8-9123-fddeb97a2bfe", "embedding": null, "metadata": {"page_label": "321", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "393c1ba6-92d2-46d1-86d2-1bd3178fcf85", "node_type": "4", "metadata": {"page_label": "321", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "2b78a4c10247a6f3af27e0af46e2c03ea9dec31e3e23ac975028226eb834a5e8", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n321Part 4 - Debugging \"Hello World\"\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will cover.\nhttps://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we are going to debug our first program utilizing our dev build of Radare2.\nTo begin let's open up our binary in Radare2.\nradare2 ./0x01_asm_64_helloworld \nLet's take advantage of Radare2's auto analysis feature.\naaa \nThe next thing we want to do logically is fire up the program in debug mode so it\nmaps the raw machine code from disk to a running process.\nood \nNow that we have a running instance we can seek to the main entry point of the\nbinary.\ns main \nLet us take an initial examination by doing the following.\nv \nThe output from Radare2 is entirely too large to display in this course however as\nyou follow along in your own environment you will be able to follow along. We will\nkeep this convention throughout this course for better readability of the document.\nRemember there is a difference between an executable on disk and what resides\nwhen it is mapped. When it is on disk it is referred to as unmapped. We will look\nat that at the end of the lesson. For now we are looking at a mapped version as\nyou see it is an offset of the mapped code we will examine later.\nDo you notice that as your mapped memory values are different than mine? That\nis because of ALSR.\nAddress Space Layout Randomization (ASLR) is a security technique used in\noperating systems, first implemented in 2001. The current versions of all major\noperating systems (iOS, Android, Windows, macOS, and Linux) feature ASLR\nprotection.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1676, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5bad450f-d63e-4af0-a8ae-b1e21596634f": {"__data__": {"id_": "5bad450f-d63e-4af0-a8ae-b1e21596634f", "embedding": null, "metadata": {"page_label": "322", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "292715b5-8b0d-4b77-9470-65776f1104e3", "node_type": "4", "metadata": {"page_label": "322", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "69ca62fac42f5224ff55a94f39b4b057609e1fcb10de8156c065e50935d502f1", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n322ASLR is primarily used to protect against buffer overflow attacks. In a buffer\noverflow, attackers feed a function as much junk data as it can handle, followed\nby a malicious payload.\nWe notice in my mapped memory that at address 0x55629cab48  we see our\nstring  \"Hello World!\" . You will have a different offset as we discussed but will find\nthe same result.\nLet us get back to a console window by doing the following.\nq \nLet's verify our initial analysis.\n[0x55629ca9e4]> ps @0x55629cab48 \nHello World! \n[0x55629ca9e4]> \nWe can see that it is in fact true that at the mapped memory address of\n0x55629cab48  we see the string \"Hello World!\" .\nLet's also look at the hex view so we can see and better understand what is going\non at the machine code level.\npx @0x55629cab48 \nWe see our \"Hello World!\" string and we can again see that it exists starting at the\nmapped memory address of 0x55629cab48.\nWe see that our machine code instructions are 16 bytes long or 64-bits long as\nwe can see the first column start at 48 and end with 00.\nIt is VERY important we understand a few key things. First is the fact that a single\nhex digit is 4-bits wide or a nibble or a half of a byte. In our case 4 is a half of a\nbyte and 8 is the other half of the byte. Together they form a byte and in our case\na valid ascii char code.\nLet's visit the online ascii table.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1367, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "723166fa-3be5-4ff2-be1b-dbedcc7d2c53": {"__data__": {"id_": "723166fa-3be5-4ff2-be1b-dbedcc7d2c53", "embedding": null, "metadata": {"page_label": "323", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bacd6d88-3582-4e1f-9093-d142274fbe41", "node_type": "4", "metadata": {"page_label": "323", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "67a15b4133cb91b4bd4cf797dab72e38adb83c382b800bbc8ef7aa2089c45437", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n323http://www.asciitable.com\nSecond, we need to understand what the machine code translates to. Let's look\nup what 48 is in hex. We see that it is a capital 'H'. That maps perfectly as you\nsee in the right hand column of the image above we see a 0 and below it the letter\nH.\nObviously 65 hex is 'e' and so on and so forth. You can extrapolate the rest for\nyourself now that you have a basic understanding of what you are looking at.\nLet's now define a breakpoint on main and execute this binary to verify in fact that\nwhen we continue on from main it will print \"Hello World\"  to the stdout.\n[0x55629ca9e4]> db 0x55629ca9e4 \n[0x55629ca9e4]> \nLet us continue and verify our hypothesis. First we continue and break on main.\n[0x55629ca9e4]> dc \nhit breakpoint at: 0x55629ca9e4 \n[0x55629ca9e4]> \nNow we step again and since there are no other breakpoints we will conclude the\nexecution and verify our result in stdout.\n[0x55629ca9e4]> dc \nHello World! \n(59575) Process exited with status=0x0 \n[0x7fb146cb8c]> \nLet's exit Radare2.\nq \ny \ny \nLet us rerun Radare2 again and this time not run the binary and simply look at the\nunmapped binary that is on disk.\nradare2 ./0x01_asm_64_helloworld \nLet's auto analyze.\naaa \nLet's seek to main.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1243, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ece17e58-86b8-4aa4-9daa-b0cb1711d693": {"__data__": {"id_": "ece17e58-86b8-4aa4-9daa-b0cb1711d693", "embedding": null, "metadata": {"page_label": "324", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9240973c-ad34-4e57-91a9-49db4196d176", "node_type": "4", "metadata": {"page_label": "324", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "169e087c7892f3c1a94571ee5c49cd646998316990e1bd63c46f001f50b9abcc", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n324s main \nThen view.\nv \nNotice that we have \"Hello World!\"  this time at the unmapped memory address of\n0xb48 . You notice that when you ran the binary the executable had an offset to\nthis value but the LSB were 48 hex.\nI hope this lesson helps you to understand the basics of 64-bit ARM assembly\nand how to reverse it properly.\nIn our next lesson we will hack the value.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 386, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "957de0d6-9e96-4f29-bc9e-a8bfa8139df4": {"__data__": {"id_": "957de0d6-9e96-4f29-bc9e-a8bfa8139df4", "embedding": null, "metadata": {"page_label": "325", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8e9f712b-059a-4146-a231-29bbf41a4f00", "node_type": "4", "metadata": {"page_label": "325", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "94237b6a8083b18e0987a1e1e5eab202cf604e962cd3112a8028468034426e55", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n325Part 5 - Hacking \"Hello World\"\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will cover.\nhttps://github.com/mytechnotalent/hacking\\_c-\\_arm64\nIn the last lesson we spent a good deal of time really understanding what is going\non inside our binary. This laid the groundwork for an easy hack.\nLet's fire up radare2 in write mode.\nradare2 -w ./0x01_asm_64_helloworld \nLet's auto analyze.\naaa \nSeek to main.\ns main \nView disassembly.\nv \nWe see the memory addresses as they are on disk as we are not running the\nbinary as we discussed in the last lesson.\nWe see that at 0xb48  we very easily find our string.\nLet's get back to the terminal view.\nq \nLet's verify the string.\n[0x000009e4]> ps @0xb48 \nHello World! \n[0x000009e4]> \n \nLet's hack the string.\n[0x000009e4]> w Hacked World @0xb48 \nLet's verify the hack.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 920, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0f1c85f2-63b4-46ca-a3a1-5b9a72cfd8a1": {"__data__": {"id_": "0f1c85f2-63b4-46ca-a3a1-5b9a72cfd8a1", "embedding": null, "metadata": {"page_label": "326", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "68899b06-97fe-4c22-9f44-482b8eea1e51", "node_type": "4", "metadata": {"page_label": "326", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "3af8514b0025398a69726e10fbc2a61fe860f9a60d5e4d13ebb18a8d55862b72", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n326[0x000009e4]> ps @0xb48 \nHacked World \n[0x000009e4]> \nLet's quit radare2.\nq \nNow let's run our binary again!\n./0x01_asm_64_helloworld \nHacked World \nWe see that we very easily hacked the binary. These lessons will help you\nunderstand how an attacker creates a workflow so you can learn how to anticipate\nand better reverse engineer.\nIn our next lesson we will work with simple I/O.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 398, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "597db7ad-3034-43fe-b038-2cf518c87645": {"__data__": {"id_": "597db7ad-3034-43fe-b038-2cf518c87645", "embedding": null, "metadata": {"page_label": "327", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dba355d1-c99f-4f48-a736-eef544e03545", "node_type": "4", "metadata": {"page_label": "327", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "b7edcd33153ba9f7f47b9da141b964c339f390a2e455a8fee5d91dd1b999702c", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n327Part 6 - Basic I/O\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will cover.\nhttps://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we are going to look at a basic I/O C++ program that has some minimal\nvalidation.\nBefore I get into the brief lecture as I try to keep these short, I wanted to explain\nwhy I am not using the textbook straight cin examples that you see across the\nglobe.\nThe cin, standard input stream, which takes input from the keyboard is referred to\nas our stdin.\nWhat cin does is use whitespace, tab and newline as a terminator to the input\nstream. For example if you input 'abc' and hit a tab or put a whitespace or newline\nby hitting return the data to the right of it will be ignored.\nThe problem is if you read from cin again it will pick up the remaining data in the\nstream if you do not flush the input buffer.\nIf you had for example:\nstd::cin >> val1; \nstd::cin >> val2; \nIf the user enters 1 and then leaves a space and then 2 and presses enter, you\nhave no issue. 1 will be assigned into val1 and 2 will be assigned to val2 as they\nare chained.\nThe problem is what if you enter 'Hey Jude'  instead of an integer? What happens\nis it tries to read an integer and it goes into a failed state and from that point\neverything else it is extracting is unreliable.\nI did not mean to be long winded but I really wanted to emphasize why you would\nNEVER use cin by itself and I mean NEVER!\nLet's take a look at our basic i/o program that we will debug in the next lesson\nwith a very basic C++ program that validates input.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1657, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5f70cb97-368f-4373-8420-c69ed32ce5c4": {"__data__": {"id_": "5f70cb97-368f-4373-8420-c69ed32ce5c4", "embedding": null, "metadata": {"page_label": "328", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f9a90a67-302e-4f6a-bd7f-ab320dedb9f5", "node_type": "4", "metadata": {"page_label": "328", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "12f261d8cdec6d434258274ffc027b199bbb313f050c937b1182f9a4752d1d70", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n328#include <iostream> \n#include <sstream> \n#include <string> \n \nint main() \n{ \n    int age = 0; \n    bool valid = false; \n    char null = '\\0'; \n \n    while (!valid) \n    { \n        std::cout << \"Enter Age: \"; \n \n        // Get input as string \n        std::string line; \n        getline(std::cin, line); \n \n        // Init stringstream \n        std::stringstream is(line); \n \n        // Attempt to read a valid age from the \nstringstream and \n        // if a number can't be read, or there is more \nthan white \n        // space in the string after the number, then \nfail the read \n        // and get another string from the user and make \nsure the  \n        // dude is at least a year old and less than or \nequal to \n        // 100 years old \n        if (!(is >> age) || (is >> std::ws && \nis.get(null)) || age >= 100 || age <= 0) \n            std::cout << \"Dude be real!\" << std::endl; \n        else \n            valid = true ; \n    } \n \n    std::cout << \"Your are \" << age << \" years old, seems \nlegit!\" << std::endl; \n \n    return 0; \n} \nWe start by importing iostream , sstream  and string . So far nothing tricky.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1134, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a3ac708f-b072-412c-93f3-9c8102818279": {"__data__": {"id_": "a3ac708f-b072-412c-93f3-9c8102818279", "embedding": null, "metadata": {"page_label": "329", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b90dd89d-678a-4d3f-970a-2aa19f1b092c", "node_type": "4", "metadata": {"page_label": "329", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "a8b1c95afb36881d5ca1e4f4062a0118479aa337d93451faadf2614dd422ff6a", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n329We then prompt the user to enter their age. We then create a string object called\nline and take advantage of C++ getline()  which is a standard C++ library function\nthat is used to read a string or a line from an input stream properly.\nWe then take advantage of the stringstream  as it associates a string object with a\nstream allowing you to read from the string as if it were a stream like we would do\nwith raw cin. In this simple example we create an is object which is short for input\nstringstream and connect it with our line object.\nThen before we echo data to stdout we do a little validation. We first check to see\nif age is the type it was defined as which is an int OR is there a white space in the\nstream after a given integer OR is age greater than 100 or less than 0. Very\nsimply it provides a response if the input does not meet this criteria.\nFinally if all is well it echoes out a simple cout.\nLet's compile and link.\ng++ -o 0x02_asm64_basicio 0x02_asm64_basicio.cpp \nLet's run.\n./0x02_asm64_basicio \nDepending on what you enter it will validate as appropriate as described above.\nPLEASE try this example and manipulate the source to get a full understanding of\nwhat is going on here.\nIn our next lesson we will debug this very simple binary using our dev build of\nRadare2.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1306, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c326b73a-88c3-46eb-8828-02dcf50b4e4d": {"__data__": {"id_": "c326b73a-88c3-46eb-8828-02dcf50b4e4d", "embedding": null, "metadata": {"page_label": "330", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bc175609-d4a4-41aa-9484-06e8641a3da3", "node_type": "4", "metadata": {"page_label": "330", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "d31ad0be122ae72a2e5aa3921cb11d23debea7d47927e22ad8bb6ad4fd0b0175", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n330Part 7 - Debugging Basic I/O\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will cover.\nhttps://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we are going to debug our very basic input validation program from last\nlecture.\nTo begin let's open up our binary in Radare2.\nradare2 ./0x02_asm_64_basicio \nLet's take advantage of Radare2's auto analysis feature.\naaa \nThe next thing we want to do logically is fire up the program in debug mode so it\nmaps the raw machine code from disk to a running process.\nood \nNow that we have a running instance we can seek to the main entry point of the\nbinary.\ns main \nLet us take an initial examination by doing the following.\nv \nA couple things to note we see at 0x5566be00cc  the output of \"Enter Age: \"  and\nat 0x5566be017c  a call to istream  which is going to capture the values from stdin\nto which we identify a failure condition at 0x5566be01d0 where we find \"Dude be\nreal!\"  and we see the results of a proper input validation starting at 0x5566be0218\n_where we say \"You are \"  and then we see a call to the output stream at\n_0x5566be0238  and then the continuation of the validation string at\n0x5566be0244  where we say \" years old, seems legit!\" .\nThe next step is to look at the binary with a visual graph.\nq \nVV \nppppp", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1382, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d6747a6a-f760-450a-9384-1fe29650acf2": {"__data__": {"id_": "d6747a6a-f760-450a-9384-1fe29650acf2", "embedding": null, "metadata": {"page_label": "331", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d829e738-f39d-4553-b87f-df0413bbffb1", "node_type": "4", "metadata": {"page_label": "331", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "e7d93d733b7fbbea4bc0542746b33a046e2dc2868764929fd88938ca846cc6c2", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n331This is our zoomed out visual graph. We can see how the program moves from\nfunction to function. You will notice there are a series of tags such as [ol] or [ok]\nand you can literally type the following:\np \nol \nNow we are inside that function.\nThen to go back to main.\nqq \ns main \nVV \nThis will take us to an expanded graph that we can also use our arrow keys to\nlook around.\nLet's set a breakpoint at 0x5566be00c4  where we bne 0x5566be0214  which is\nwhere we see the success route of our binary.\n[0x5566be0194]> db 0x5566be00c4 \n[0x5566be0194]> dc \nhit breakpoint at: 0x5566be00c4 \nEnter Age: 33 \nhit breakpoint at: 0x5566be00c4 \n[0x5566be0194]> dc \nYour are 33 years old, seems legit! \n(2215) Process exited with status=0x0 \nAs you can see we cycled the loop and entered in a correct validation and was\nable to get our success return.\nIn our next lesson we will hack the validation.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 901, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0d765a74-8920-415e-91cf-61a0e76a8edf": {"__data__": {"id_": "0d765a74-8920-415e-91cf-61a0e76a8edf", "embedding": null, "metadata": {"page_label": "332", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7fa4371f-2b40-403e-b039-85dde34a5837", "node_type": "4", "metadata": {"page_label": "332", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "a717271b171fb4b22176e72e7a5020c2ad6f46ca4717a7be93408be7be082b03", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n332Part 8 - Hacking Basic I/O\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will cover.\nhttps://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we hack the input validation from our last lesson.\nLet's fire up radare2 in write mode.\nradare2 -w ./0x02_asm_64_basicio \nLet's auto analyze.\naaa \nSeek to main.\ns main \nView disassembly.\nv \nLet's get back to the terminal view.\nq \nLet's look at the visual graph and begin with the first b.ne which under the proper\nexpected conditions it will only accept a valid integer between 0 and 100 as we\ndemonstrated in the last lecture.\nThe b.ne meaning branch if not equal . The assembly before it simply does not\nmatter in this case as we know if we leave b.ne as is the input validation will be in\ntact.\nWe need to disable this input validation by changing that instruction to a b.eq or\nbranch if equal .\nLet's look at that code block.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 987, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1e89acc8-f392-4418-ad81-8f3810dfd91d": {"__data__": {"id_": "1e89acc8-f392-4418-ad81-8f3810dfd91d", "embedding": null, "metadata": {"page_label": "333", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e5de85e4-b1fd-4309-b277-1f0d2a7b5adb", "node_type": "4", "metadata": {"page_label": "333", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "19499e4ee1e902bb4e1f135398630dd192ca897ef02c256943fd01e615e1396f", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n333\nWe see that it if it is true, meaning validation is correct and we have an integer\nbetween 0 and 100 we will follow the true green line to the next function.\nIf we fail the validation we will be sent to the false condition to obtain new input.\nLet's q to a terminal prompt.\nqq \nLet's seek to the statement we want to hack.\n[0x000010a4]> s 0x000010c4 \nLet's now hack the branch as discussed.\n[0x000010c4]> wa b.eq 0x1214 \nWritten 4 byte(s) (b.eq 0x1214) = wx 800a0054 \n[0x000010c4]> \nLet's quit.\nq \nNow when we run the binary it will simply ignore any input at all let alone input\nvalidation and simply arrive at the desired point.\nkali@kali:~/Documents/0x02_asm_64_basicio$ \n./0x02_asm_64_basicio \nYour are 0 years old, seems legit! \nkali@kali:~/Documents/0x02_asm_64_basicio$ \nEven though 0 is valid it is simply an unstable value that happened to be in one of\nthe registers that the program expected to be properly assigned during a normal\nprogram flow. Here we were able to change the binary permanently to accomplish\nour hack.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1048, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9ff0e6c3-ec54-489c-ad32-be8fa1325734": {"__data__": {"id_": "9ff0e6c3-ec54-489c-ad32-be8fa1325734", "embedding": null, "metadata": {"page_label": "334", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0d492ade-6404-4674-afc0-4160e6fc7e0c", "node_type": "4", "metadata": {"page_label": "334", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "abab507bf58fa913866a10474ac7dbe1cab8dd3c4af66ac179d32bc24fc68adc", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n334These are VERY simple examples however when you combine these as you\nprogress you will literally be able to Reverse Engineer anything.\nIn our next lesson we will discuss the char primitive data type.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 216, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "11263a86-3cc4-43ad-b9f6-b8153692ba2a": {"__data__": {"id_": "11263a86-3cc4-43ad-b9f6-b8153692ba2a", "embedding": null, "metadata": {"page_label": "335", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ad516506-5eee-40f7-abf1-96c02c264181", "node_type": "4", "metadata": {"page_label": "335", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "9c1591ded44c22d5db9101b71a80c981711f007227487918c422c6de59a6d4d3", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n335Part 9 - Character Primitive Datatype\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will cover.\nhttps://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we are going to talk about the first of the C++ primitive. The char dataype is\nused to store a single character and must be surrounded by single quotes.\nLet's look at our basic example.\n#include <iostream> \n \nint main() \n{ \n    char my_char = 'c'; \n \n    std::cout << my_char << std::endl; \n \n    return 0; \n} \nExtremely simple. We are simply creating a char variable called my_char _and\nassigning it the character _c .\nWe then print it to stdout and nothing more.\nLet's compile and link.\ng++ -o 0x03_asm64_char_primitive_datatype \n0x03_asm64_char_primitive_datatype.cpp \nLet's run.\n./0x03_asm64_char_primitive_datatype \nVery simply we see the following.\nc \nIt successfully echoed c to the terminal stdout. Very simple.\nNext week we will debug this very simple example.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1038, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4746b9d4-dc81-4e0e-843e-d288ff41348c": {"__data__": {"id_": "4746b9d4-dc81-4e0e-843e-d288ff41348c", "embedding": null, "metadata": {"page_label": "336", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "60bc2e17-b710-420e-b7a5-3fd3ed68b966", "node_type": "4", "metadata": {"page_label": "336", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "5c62863f958e9cf306677155fc5831cda7b11bdda4c7b662c1ee9c2f64eabec6", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n336Part 10 - Debugging Character Primitive\nDatatype\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will cover.\nhttps://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we are going to debug our very simple character primitive datatype.\nTo begin let's open up our binary in Radare2.\nradare2 ./0x03_asm64_char_primitive_datatype \nLet's take advantage of Radare2's auto analysis feature.\naaa \nThe next thing we want to do logically is fire up the program in debug mode so it\nmaps the raw machine code from disk to a running process.\nood \nNow that we have a running instance we can seek to the main entry point of the\nbinary.\ns main \nLet us take an initial examination by doing the following.\nv \nWe can see that at 0x5576bff9ec  we are moving 0x63  or ascii 'c' into the w0\nregister. REMEMBER your address will be different due to ASLR.\nLet's set a breakpoint at 0x5576bff9ec  and verify the contents.\n[0x5576bff9e4]> db 0x5576bff9ec \n[0x5576bff9e4]> dc \nhit breakpoint at: 0x5576bff9ec \n[0x5576bff9ec]> dr w0 \n0x00000001 \n[0x5576bff9ec]> ds \n[0x5576bff9ec]> dr w0 \n0x00000063 \n[0x5576bff9ec]>", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1201, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d1c3a35d-ae14-4922-aa1b-7980e76c40f5": {"__data__": {"id_": "d1c3a35d-ae14-4922-aa1b-7980e76c40f5", "embedding": null, "metadata": {"page_label": "337", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "726445d1-879e-4677-a365-f20187a11ea9", "node_type": "4", "metadata": {"page_label": "337", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "22b96e2f60fc0da5c54833cf0fe9bbd6e5d01d9b3140f909f093e004e6141955", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n337This is very simple but let's break it down. We set our breakpoint and continued.\nWe looked inside the register w0 and saw that the value is 0x01.\nWe then stepped once and looked again to see that 0x63 was successfully moved\ninto w0 as now we see it does in fact contain 0x63.\nIf we dc again we see it echoed to the stdout as expected.\n[0x5576bff9ec]> dc \nc \n(10845) Process exited with status=0x0 \n[0x7f9727503c]> \nIn our next lesson we will hack the char to another value of our choice.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 505, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aae84ef8-545c-469d-a456-d53c9e434f29": {"__data__": {"id_": "aae84ef8-545c-469d-a456-d53c9e434f29", "embedding": null, "metadata": {"page_label": "338", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "89f2efdd-e8d2-408a-b9e3-c372094b90c1", "node_type": "4", "metadata": {"page_label": "338", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "66584f7332f72b57fa9ebcf764c8954c19c40b60b632c07aeddf268d8f8a175e", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n338Part 11 - Hacking Character Primitive\nDatatype\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will cover.\nhttps://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we hack the char from the last lesson.\nLet's fire up radare2 in write mode.\nradare2 -w ./0x03_asm64_char_primitive_datatype \nLet's auto analyze.\naaa \nSeek to main.\ns main \nView disassembly.\nv \nLet's get back to the terminal view.\nq \nAll we have to do is write assembly to 0x000009ec  and specify a new char of our\nchoosing.\n[0x000009e4]> wa movz w0, 0x66 @ 0x000009ec \nWritten 4 byte(s) (movz w0, 0x66) = wx c00c8052 \n[0x000009e4]> \nLet's quit and run the new binary from the terminal.\n[0x000009e4]> q \nkali@kali:~/Documents/0x03_asm64_char_primitive_datatype$ \n./0x03_asm64_char_primitive_datatype \nf", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 879, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "28ecb96e-1821-4aa4-b9aa-e35ecd312f76": {"__data__": {"id_": "28ecb96e-1821-4aa4-b9aa-e35ecd312f76", "embedding": null, "metadata": {"page_label": "339", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1eb8faa1-39cb-4078-9e78-116e63b6abac", "node_type": "4", "metadata": {"page_label": "339", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "bb7012b30da1da1fb527814c1eefec9cad70f6b3a346d41194086fa0c4ae6170", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n339As you can see we successfully and permanently hacked the binary! It is very\ntrivial but when you take the last series of lessons together with each new\nsuccessive lesson you build a real skill-set!\nIn our next lesson we will work with the boolean primitive datatype.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 284, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0cee2b18-62a8-47d7-b312-7a367b1b5bab": {"__data__": {"id_": "0cee2b18-62a8-47d7-b312-7a367b1b5bab", "embedding": null, "metadata": {"page_label": "340", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7a9c110e-30c5-46ca-a75d-9ce90e923bea", "node_type": "4", "metadata": {"page_label": "340", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "13f64bce1e037b303987c3b892fda567703d4715f15b15fa0f2bf69ed7dfa6ab", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n340Part 12 - Boolean Primitive Datatype\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will cover.\nhttps://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we are going to talk about the C++ boolean  datatype that stores either a 0\nor 1 to represent 0 for false _and _1  for anything true.\nThis kind of flag is used extensively in programming in general and we will look at\nanother very basic program to understand its simple usage.\n#include <iostream> \n \n    int main() \n    { \n        bool my_bool = true; \n \n        std::cout << my_bool << std::endl; \n \n        return 0; \n    } \nWe see that we are creating a bool and assigning it a _true _value or _1 _value\nand printing it.\nLet's compile and link.\ng++ -o 0x04_asm64_boolean_primitive_datatype \n0x04_asm64_boolean_primitive_datatype.cpp \nLet's run.\n./0x04_asm64_boolean_primitive_datatype \nWe simply see the following.\n1 \nIt successfully echoed 1 to the terminal stdout. Very simple.\nNext week we will debug this very simple example.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1100, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "73831f2e-de8a-4933-b8b8-e422f3d17069": {"__data__": {"id_": "73831f2e-de8a-4933-b8b8-e422f3d17069", "embedding": null, "metadata": {"page_label": "341", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "61abcff5-00b3-47bd-b611-d19531c351af", "node_type": "4", "metadata": {"page_label": "341", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "1834d7b34a668546fece8a84b4b83393799bbe291a3c0317f4253a63cfad84ae", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n341Part 13 - Debugging Boolean Primitive\nDatatype\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will cover.\nhttps://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we are going to debug our very simple boolean primitive datatype.\nTo begin let's open up our binary in Radare2.\nradare2 ./0x04_asm64_boolean_primitive_datatype \nLet's take advantage of Radare2's auto analysis feature.\naaa \nThe next thing we want to do logically is fire up the program in debug mode so it\nmaps the raw machine code from disk to a running process.\nood \nNow that we have a running instance we can seek to the main entry point of the\nbinary.\ns main \nLet us take an initial examination by doing the following.\nv \nWe see in 0x55718999bc  movz w0, 0x1_or moving _0x1  into w0 which is our bool\ntrue. REMEMBER your address will be different due to ASLR.\nLet's set a breakpoint at 0x55718999bc  and verify the contents.\n[0x55718999b4]> db 0x55718999bc \n[0x55718999b4]> dc \nhit breakpoint at: 0x55718999bc", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1090, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1073ff4c-b7ee-4e39-9145-8d31d8ba1dd0": {"__data__": {"id_": "1073ff4c-b7ee-4e39-9145-8d31d8ba1dd0", "embedding": null, "metadata": {"page_label": "342", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ef7d1853-bf95-4bd5-b443-c41ad5ac2531", "node_type": "4", "metadata": {"page_label": "342", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "b24480691faa7bcb3471135f8a24379183cb0a0055f6b5be2c5a2101848126fb", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n342[0x55718999bc]> ds \n[0x55718999bc]> dr w0 \n0x00000001 \n[0x55718999bc]> \nVery simply we broke right before the value 0x1 was to be placed in w0 and then\nwe stepped and saw that it was in fact 0x1 inside of w0 after the step. This means\nthat our program successfully put a 1 _or _true  into the w0 register which matches\nwhat our source code created.\nIf we dc again we see it echoed to the stdout as expected.\n[0x55718999bc]> dc \n1 \n(96445) Process exited with status=0x0 \n[0x7fac4f903c]> \nIn our next lesson we will hack the boolean to make it 0.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 562, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3032f990-3c98-4376-94c4-fa895f49abef": {"__data__": {"id_": "3032f990-3c98-4376-94c4-fa895f49abef", "embedding": null, "metadata": {"page_label": "343", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0f72a4d2-a252-4cb9-b7d7-32153b3554cd", "node_type": "4", "metadata": {"page_label": "343", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "23d763720c42c45467ca1ea0e312df791b9d66a1331ecc351f710704d10207f9", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n343Part 14 - Hacking Boolean Primitive\nDatatype\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will cover.\nhttps://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we hack the boolean from the last lesson.\nLet's fire up radare2 in write mode.\nradare2 -w ./0x04_asm64_boolean_primitive_datatype \nLet's auto analyze.\naaa \nSeek to main.\ns main \nView disassembly.\nv \nLet's get back to the terminal view.\nq \nAll we have to do is write assembly to 0x00000009bc  and specify 0x0.\n[0x000009b4]> wa movz w0, 0x0 @ 0x00000009bc \nWritten 4 byte(s) (movz w0, 0x0) = wx 00008052 \n[0x000009b4]> \nLet's quit and run the new binary from the terminal.\n[0x000009b4]> q \nkali@kali:~/Documents/0x04_asm64_boolean_primitive_dataty\npe$ ./0x04_asm64_boolean_primitive_datatype \n0", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 868, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dcc1e3c2-bb31-483b-90f0-56a280ff46d5": {"__data__": {"id_": "dcc1e3c2-bb31-483b-90f0-56a280ff46d5", "embedding": null, "metadata": {"page_label": "344", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "91c6c0b4-c0d9-48f9-a727-b66345b78cc2", "node_type": "4", "metadata": {"page_label": "344", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "cb85ef396eac2b78b81031d17ffebe0d229c0247e6c7c7cc49fb60baa9a72f98", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n344As you can see we successfully and permanently hacked the binary! What was\noriginally true or 1 is now false _or _0 .\nIn our next lesson we will work with the integer primitive datatype.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 203, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "566a08c9-8d38-4895-8f38-03de70882c35": {"__data__": {"id_": "566a08c9-8d38-4895-8f38-03de70882c35", "embedding": null, "metadata": {"page_label": "345", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fa37bda2-f6a5-4996-a99f-6a3a2109009d", "node_type": "4", "metadata": {"page_label": "345", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "eb5b631d6c06c6d2d0b7f56286bf4890938b3c22aab936240056654a1f3ca18d", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n345Part 15 - Float Primitive Datatype\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will cover.\nhttps://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we are going to talk about the C++ float datatype that stores floating point\nvalues.\n#include <iostream> \n \nint main() \n{ \n    float my_float = 10.1; \n \n    std::cout << my_float << std::endl; \n \n    return 0; \n} \nVery simply we create a float and assign a simple value to it and print it.\nLet's compile and link.\ng++ -o 0x05_float_primitive_datatype \n0x05_float_primitive_datatype.cpp \nLet's run.\n./0x05_float_primitive_datatype \nWe simply see the following.\n10.1 \nIt successfully echoed 10.1 to the terminal stdout. Very simple.\nNext week we will debug this very simple example.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 846, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7f4c852d-3793-4495-8840-a27a1df1e6f1": {"__data__": {"id_": "7f4c852d-3793-4495-8840-a27a1df1e6f1", "embedding": null, "metadata": {"page_label": "346", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1b7dbc2b-26cd-4cbf-bc1c-5ace4d71e6d3", "node_type": "4", "metadata": {"page_label": "346", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "270b725854dd88ff89d385500112c146dd75f4dbd530b25be51c5341458c55d7", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n346Part 16 - Debugging Float Primitive\nDatatype\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will cover.\nhttps://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we are going to debug our very simple float primitive datatype.\nTo begin let's open up our binary in Radare2.\nradare2 ./0x05_asm64_float_primitive_datatype \nLet's take advantage of Radare2's auto analysis feature.\naaa \nThe next thing we want to do logically is fire up the program in debug mode so it\nmaps the raw machine code from disk to a running process.\nood \nNow that we have a running instance we can seek to the main entry point of the\nbinary.\ns main \nLet us take an initial examination by doing the following.\nv \nWhen dealing with floating point numbers in ARM64 we have to understand that\nwe want to locate where the fmov  instruction occurs where we take a value from\nour w0 register and move it into the floating point s0 register. Here is where all the\nmagic happens!\nLet us define a break point right below the fmov  instruction. REMEMBER with\nASLR your addresses will be different than this example.\n[0x557931c9b4]> db 0x557931c9c8 \n[0x557931c9b4]> dc \n[0x557931c9b4]> hit breakpoint at: 0x557931c9c8 \n[0x557931c9c8]> ds \n[0x557931c9c8]> dr w0 \n0x4121999a \n[0x557931c9c8]>", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1362, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e01499fd-4376-4d72-834f-53855bbbf403": {"__data__": {"id_": "e01499fd-4376-4d72-834f-53855bbbf403", "embedding": null, "metadata": {"page_label": "347", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dbb3076a-1d3d-4627-9d2b-84d9a78ef5dd", "node_type": "4", "metadata": {"page_label": "347", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "103559e6490fe94155bd65c95b5ee20b8e0197fddd1efd57f9061545025f1585", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n347OK so we see this strange value which if you look at the code below, the lsl which\nis logical shift left, is moving the byte order of which we are using the movz  and\nmovk  instructions which movz  will move 0x999a  into w0 and then the movk  will\nmove 0x4121,  lsl 16  into  w0 therefore putting 4121 at the higher order byte\nlocations and the 999a at the lower order byte locations.\nmovz w0, 0x999a \nmovk w0, 0x4121, lsl 16 \nfmov s0, w0 \nWe move our w0 register into s0 so we HAVE to change these values here before\nletting it get into s0 otherwise it will be significantly harder to hack in the next\nlesson.\nLets continue to show our value.\n[0x557931c9c8]> dc \n10.1 \n(237691) Process exited with status=0x0 \n[0x7fb948407c]> \nIn our next lesson we will hack this value!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 788, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5af44d8e-0fc9-4021-bfeb-0becdf31dc67": {"__data__": {"id_": "5af44d8e-0fc9-4021-bfeb-0becdf31dc67", "embedding": null, "metadata": {"page_label": "348", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "57f1a7b8-d174-470e-ac9c-d966627835f2", "node_type": "4", "metadata": {"page_label": "348", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "f2cae5c47e390927432a1027e8763b9522ae14085ab0db6fed5b8621cbf37baf", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n348Part 17 - Hacking Float Primitive Datatype\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will cover.\nhttps://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we hack the float from the last lesson.\nFirst update our radare2 source code.\ncd radare2 \ngit pull \nsys/user.sh \nIf you did not follow the instructions earlier you have to build radare2 from source\nfor this to work as they rarely update releases.\nhttps://github.com/radareorg/radare2\nIf you do not have the repo, clone it and follow the instructions above.\nLet's fire up radare2 in write mode.\nradare2 -w ./0x05_asm64_float_primitive_datatype \nLet's auto analyze.\naaa \nSeek to main.\ns main \nView disassembly.\nv \nLet's get back to the terminal view.\nq \n \nWe need to hack two instructions here. Let's examine two very specific\ninstructions.\nmovz w0, 0x999a \nmovk w0, 0x4121, lsl 16", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 953, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "246fe17b-b690-40db-9554-2b51a6b0be0a": {"__data__": {"id_": "246fe17b-b690-40db-9554-2b51a6b0be0a", "embedding": null, "metadata": {"page_label": "349", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f8aea7c8-cf21-4609-b220-0fa58b4ded2d", "node_type": "4", "metadata": {"page_label": "349", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "d1ecd1d612a1f0d3377c05701ad5a7299da1e9cf7458310b147d4a8a68317408", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n349Remember from last week that ultimately w0 is going to hold 0x4121999a  as the\nlsl moves the bites in reverse byte order.\nCurrently this will produce a float of 10.1 as we have seen in the prior lessons. It\nis critical that you understand that in floating-point numbers there is a mantissa\nwhich in our case is 10 and an exponent  which is the 1 to which they are\nseparated by a  . which ties them together.\nTherefore to get 10.2 we would need to write assembly and update these\ninstructions.\n[0x000009b4]> wa movz w0, 0x3333 @0x000009bc \n[0x000009b4]> wa movk w0, 0x4123, lsl 16 @0x000009c0 \nq \n \nNow run the binary!\nkali@kali:~/Documents/0x05_float_primitive_datatype$ \n./0x05_float_primitive_datatype \n10.2 \nI want you to take a close look at some examples I have put together for you so\nthat you can understand how different values result in different results. Keep in\nmind these results are in an active debug session so the addresses will be\ndifferent so your ASLR will have different values.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1015, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "83c56ff5-55c0-4c47-99cd-6287b5edc21a": {"__data__": {"id_": "83c56ff5-55c0-4c47-99cd-6287b5edc21a", "embedding": null, "metadata": {"page_label": "350", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "72971b7d-cf58-4874-bf99-c709bc6365b0", "node_type": "4", "metadata": {"page_label": "350", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "6946a17e85b52b3b126d04a661327c2e51db40181006f9eb292e0894875cf8b3", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n350[0x555e6c29c4]> dr w0 = 0x4122999a \n0x4121999a ->0x4122999a \n[0x555e6c29c4]> dc \nhit breakpoint at: 0x555e6c29c8 \n[0x555e6c29c8]> dc \n10.1625 \n(238252) Process exited with status=0x0 \n \n[0x556215e9c4]> dr w0 = 0x41235555 \n0x4121999a ->0x41235555 \n[0x556215e9c4]> dc \nhit breakpoint at: 0x556215e9c8 \n[0x556215e9c8]> dc \n10.2083 \n(238258) Process exited with status=0x0 \n \n[0x558216c9c4]> dr w0 = 0x4123599a \n0x4121999a ->0x4123599a \n[0x558216c9c4]> dc \nhit breakpoint at: 0x558216c9c8 \n[0x558216c9c8]> dc \n10.2094 \n(238257) Process exited with status=0x0 \n \n[0x55868a79c4]> dr w0 = 0x4123999a \n0x4121999a ->0x4123999a \n[0x55868a79c4]> dc \nhit breakpoint at: 0x55868a79c8 \n[0x55868a79c8]> dc \n10.225 \n(238253) Process exited with status=0x0 \n \n[0x55826479c4]> dr w0 = 0x41233333 \n0x4121999a ->0x41233333 \n[0x55826479c4]> dc \nhit breakpoint at: 0x55826479c8 \n[0x55826479c8]> dc \n10.2 \n(238259) Process exited with status=0x0 \n \n[0x55716ab9c4]> dr w0 = 0x4125999a \n0x4121999a ->0x4125999a \n[0x55716ab9c4]> dc \nhit breakpoint at: 0x55716ab9c8 \n[0x55716ab9c8]> dc \n10.35 \n(238250) Process exited with status=0x0", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1123, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4ecd6c14-c628-4b7c-8900-2fab1b272d7f": {"__data__": {"id_": "4ecd6c14-c628-4b7c-8900-2fab1b272d7f", "embedding": null, "metadata": {"page_label": "351", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "03a016bb-2874-494e-b961-cedccdb46160", "node_type": "4", "metadata": {"page_label": "351", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "9f7efa8ce4615b70319dcd9ef725cc30b0201dfeb61f04d5b1517b0ec0c091ef", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n351[0x55880169c4]> dr w0 = 0x412f999f \n0x4121999a ->0x412f999f \n[0x55880169c4]> dc \nhit breakpoint at: 0x55880169c8 \n[0x55880169c8]> dc \n10.975 \n(238245) Process exited with status=0x0 \n \n[0x559130d9c4]> dr w0 = 0x412ff99e \n0x4121999a ->0x412ff99e \n[0x559130d9c4]> dc \nhit breakpoint at: 0x559130d9c8 \n[0x559130d9c8]> dc \n10.9984 \n(238246) Process exited with status=0x0 \n \n[0x557b1b39c4]> dr w0 = 0x412fff9e \n0x4121999a ->0x412fff9e \n[0x557b1b39c4]> dc \nhit breakpoint at: 0x557b1b39c8 \n[0x557b1b39c8]> dc \n10.9999 \n(238247) Process exited with status=0x0 \n \n[0x55931439c4]> dr w0 = 0x412ffffe \n0x4121999a ->0x412ffffe \n[0x55931439c4]> dc \nhit breakpoint at: 0x55931439c8 \n[0x55931439c8]> dc \n11 \n(238248) Process exited with status=0x0 \nYou can start to see patterns here. TAKE THE TIME AND ACTUALLY TRY\nTHESE OUT so you have a better understand of how these values ultimately go\ninto the s0 register!\nNext lesson we will discuss doubles.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 954, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c15129fb-3237-46fc-aae2-0604c0954f35": {"__data__": {"id_": "c15129fb-3237-46fc-aae2-0604c0954f35", "embedding": null, "metadata": {"page_label": "352", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "efb04f9a-f016-45e6-a329-4a53d332a417", "node_type": "4", "metadata": {"page_label": "352", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "a37934312abc7d5e9747be7152b109408e9ab0830a9b393bb9b4980a69acfe78", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n352Part 18 - Double Primitive Datatype\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will cover.\nhttps://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we are going to talk about the C++ double  datatype that stores double\nfloating point values.\n#include <iostream> \n \nint main() \n{ \n    double my_double = 10.1; \n \n    std::cout << my_double << std::endl; \n \n    return 0; \n} \nVery simply we create a float and assign a simple value to it and print it.\nLet's compile and link.\ng++ -o 0x06_double_primitive_datatype \n0x05_double_primitive_datatype.cpp \nLet's run.\n./0x06_double_primitive_datatype \nWe simply see the following.\n10.1 \nIt successfully echoed 10.1 to the terminal stdout. Very simple.\nNext week we will debug this very simple example.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 862, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "966c5a6a-e341-4a71-8042-fbc9949928b7": {"__data__": {"id_": "966c5a6a-e341-4a71-8042-fbc9949928b7", "embedding": null, "metadata": {"page_label": "353", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "27229a91-2e58-4518-ba8e-96ec5296bb60", "node_type": "4", "metadata": {"page_label": "353", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "6ad917c2cc1333abdfe42af2247eed6071fc1198b0c028a0274bd180f4d85baa", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n353Part 19 - Debugging Double Primitive\nDatatype\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will cover.\nhttps://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we are going to debug our very simple double primitive datatype.\nTo begin let's open up our binary in Radare2.\nradare2 ./0x06_asm64_double_primitive_datatype \nLet's take advantage of Radare2's auto analysis feature.\naaa \nThe next thing we want to do logically is fire up the program in debug mode so it\nmaps the raw machine code from disk to a running process.\nood \nNow that we have a running instance we can seek to the main entry point of the\nbinary.\ns main \nLet us take an initial examination by doing the following.\nv \nWhen dealing with double floating-point numbers in ARM64 we have to\nunderstand that we want to locate where the fmov  instruction occurs where we\ntake a value from our w0 register and move it into the floating point d0 register.\nHere is where all the magic happens! This is just like our floating-point numbers\nthat deal with s0.\nLet us define a break point right below the fmov  instruction. REMEMBER with\nASLR your addresses will be different than this example.\n[0x556bf809b4]> db 0x556bf809c4 \n[0x556bf809b4]> dc \nhit breakpoint at: 0x556bf809c4 \n[0x556bf809c4]> dr w0 \n0x33333333", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1383, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dac66998-887e-4681-9fc3-07ec3ad4a866": {"__data__": {"id_": "dac66998-887e-4681-9fc3-07ec3ad4a866", "embedding": null, "metadata": {"page_label": "354", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c2016448-1964-4221-a16a-7164170c50e0", "node_type": "4", "metadata": {"page_label": "354", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "07e2f5716518b8ec62dbad094b8320724fb32d81a0a68e24f030dc58e96e42d6", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n354We move our w0 register into d0 so we HAVE to change these values in d0 which\nis different from our float. We will explore this in the next lesson.\nLets continue to show our value.\n[0x556bf809c4]> dc \n10.1 \n(39979) Process exited with status=0x0 \n[0x7fa37da0fc]> \nIn our next lesson we will hack this value!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 324, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "66041ea0-b424-4bbb-94b4-813884503118": {"__data__": {"id_": "66041ea0-b424-4bbb-94b4-813884503118", "embedding": null, "metadata": {"page_label": "355", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4fb73506-e504-4ef6-9ebb-209d6d6e4e67", "node_type": "4", "metadata": {"page_label": "355", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "f22b854311d7f829166dd9f2f89c57131c0939e005afa271c715284d768e4800", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n355Part 20 - Hacking Double Primitive\nDatatype\nFor a complete table of contents of all the lessons please click below as it will give\nyou a brief of each lesson in addition to the topics it will cover.\nhttps://github.com/mytechnotalent/hacking\\_c-\\_arm64\nToday we hack the double from the last lesson.\nLet's fire up radare2 in write mode.\nradare2 -w ./0x06_asm64_double_primitive_datatype \nLet's auto analyze.\naaa \nSeek to main.\ns main \nView disassembly.\nv \nLet's get back to the terminal view.\nq \nAll we have to do now is write the new value of d0 into the register where the\nfmov instruction is and quit.\nwa mov x0, 0x6666666666666666 @0x000009bc \nq \nThen we run our new binary.\nkali@kali:~/Documents/0x06_double_primitive_datatype$ \n./0x06_asm64_double_primitive_datatype \n10.2 \nI hope you enjoyed this series and have a good firm grasp on ARM64 RE!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 866, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "01f8f556-e964-4947-bc8b-89524c3f82ad": {"__data__": {"id_": "01f8f556-e964-4947-bc8b-89524c3f82ad", "embedding": null, "metadata": {"page_label": "356", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "20ab5adb-fbb9-4c3f-a3e9-8bc3b146a444", "node_type": "4", "metadata": {"page_label": "356", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "8feac1be3db96b61e1bfd455104e006a0a98026fa021f3e8cc083982489a5e87", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n356Pico Hacking Course\nLet's dive in rightaway!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 61, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a87c4aba-b28a-4bcd-b1ad-fccc4ff2009d": {"__data__": {"id_": "a87c4aba-b28a-4bcd-b1ad-fccc4ff2009d", "embedding": null, "metadata": {"page_label": "357", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b11a67a6-22fe-4810-83c8-e7055b044f8b", "node_type": "4", "metadata": {"page_label": "357", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "4b87d0387ea31f23c3f00ef9d6dee3eb9bee9d4f9990c4c80d902ec1a85bfccd", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n357Part 1 - The Why, The How...\nIt is 2021 and here we are once again covering a new Reverse Engineer course.\nThis course will focus on the C programming language to which we will statically\nreverse the compiled ARM 32 elf binary utilizing the Radare2 debugger on a\nRaspberry Pi Pico microcontroller.\nWhat are microcontrollers? We can find them in vehicles, robots, office machines,\nmedical devices, mobile radio transceivers, vending machines and home\nappliances, among other devices. They are targeted machines designed to\ncontrol small features of a larger component, without a complex front-end\noperating system.\nWe will be writing very basic C programs and then reverse them one at a time in\nARM 32 Assembly.\nI am going to assume you are working with an Ubuntu Linux distro...\nYou will first need a Raspberry Pi Pico.\nYou will need the Radare2 repo.\ngit clone https://github.com/radareorg/radare2.git \ncd radare2 \ncd radare2 sys/install.sh \nYou NEED to build from source! The versions that are packaged in Ubuntu and\nKali Linux are older and do not have the features we require for our level of\nreversing.\nYou will need VIM.\nsudo apt install vim \nYou will need to update .vimrc file.\nvim ~/.vimrc \nThen...\nset number \nset tabstop=2     \nset shiftwidth=2 \nset expandtab  \nsyntax on \nset syntax=c  \nYou will need the Raspberry Pi Pico repo.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1357, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7e0f7295-7d2b-4a11-be02-956aa9872c26": {"__data__": {"id_": "7e0f7295-7d2b-4a11-be02-956aa9872c26", "embedding": null, "metadata": {"page_label": "358", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5b83efbb-b597-47c3-9e73-dea1b9c140ea", "node_type": "4", "metadata": {"page_label": "358", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "3f018afd8f01895a3723c2a8360793204f2b1ba69ac67e67a36000d8df700424", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n358mkdir pico \ncd pico \ngit clone -b master https://github.com/raspberrypi/pico-\nsdk.git \ncd pico-sdk \ngit submodule update --init \ncd .. \ngit clone -b master https://github.com/raspberrypi/pico-\nexamples.git \nsudo apt update \nsudo apt install cmake gcc-arm-none-eabi libnewlib-arm-\nnone-eabi build-essential  \nLet's build the blink program.\ncd pico-examples \nmkdir build \ncd build \nexport PICO_SDK_PATH=../../pico-sdk \ncmake .. \ncd blink \nmake \nCopy the blink.uf2 file to your Pico.\nCongrats you got a blinking C program!\nIn our next lesson we will create a simple, \"Hello, World\" program.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 604, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cf5eaca9-b384-4147-8e21-af4f96911ebb": {"__data__": {"id_": "cf5eaca9-b384-4147-8e21-af4f96911ebb", "embedding": null, "metadata": {"page_label": "359", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "312a0ba3-2636-49cd-8f74-147c0b737526", "node_type": "4", "metadata": {"page_label": "359", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "905094d4f64810672cebe3fc73ef1565b7f5a2b0521989aa8264807d047a95ef", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n359Part 2 - Hello World\nToday we are going to cover the basic setup for creating our own projects on the\nRaspberry Pi Pico.\nInside of our pico folder lets create a 0x02_pico_hello_world  folder alongside of\nthe pico-sdk  and pico-example  folders.\nmkdir 0x02_pico_hello_world \ncd 0x02_pico_hello_world \nLet's create our vim 0x02_hello_world.c  file.\nvim 0x02_hello_world.c \nLet's add the following.\n#include <stdio.h> \n#include \"pico/stdlib.h\" \n \nint main()  \n{     \n  stdio_init_all(); \n \n  while(1)  \n  { \n    printf(\"Hello world!\\n\"); \n \n    sleep_ms(1000); \n  } \n \n  return 0; \n} \nWe first handle the logic to init all standard input and output.\n    stdio_init_all(); \nFinally we print \"Hello world!\"  every 1 second to the standard output in an infinite\nloop.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 778, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "958ca296-479c-4728-8ddc-21cdb0687966": {"__data__": {"id_": "958ca296-479c-4728-8ddc-21cdb0687966", "embedding": null, "metadata": {"page_label": "360", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7ce190cf-fbec-4c1f-bd87-7598b9135d4e", "node_type": "4", "metadata": {"page_label": "360", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "a2a13ccb9f795e1beccb7a7aba7e984b9c5867227ef5e828f8ddcebfd4e12d91", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n360    while(1)  \n    { \n      printf(\"Hello world!\\n\"); \n \n      sleep_ms(1000); \n    } \nWe then upon success return 0  to indicate success as our main  function is an int.\nIt is not technically required but good practice.\n    return 0; \nWorking with cmake  significantly helps in the build process for our projects. We\nfirst need to make a CMakeLists.txt  file.\ncmake_minimum_required(VERSION 3.13) \n \ninclude(pico_sdk_import.cmake) \n \nproject(test_project C CXX ASM) \nset(CMAKE_C_STANDARD 11) \nset(CMAKE_CXX_STANDARD 17) \npico_sdk_init() \n \nadd_executable(0x02_hello_world \n  0x02_hello_world.c \n) \n \npico_enable_stdio_usb(0x02_hello_world 1) \n \npico_add_extra_outputs(0x02_hello_world) \n \ntarget_link_libraries(0x02_hello_world pico_stdlib) \nNext we need to copy the pico_sdk_import.cmake  file from the external folder in\nthe pico-sdk  installation to the 0x02_hello_world  project folder.\ncp ../pico-sdk/external/pico_sdk_import.cmake . \nFinally we are ready to build.\nmkdir build \ncd build \nexport PICO_SDK_PATH=../../pico-sdk \ncmake .. \nmake", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1063, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e5d271b6-7b51-4591-a895-b38a8a5438c5": {"__data__": {"id_": "e5d271b6-7b51-4591-a895-b38a8a5438c5", "embedding": null, "metadata": {"page_label": "361", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "27de5341-77b5-4507-a0b0-7d55aad02307", "node_type": "4", "metadata": {"page_label": "361", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "62f4bcd91e87bd26984619005e07f8d1f8ee5742add82473653762c5386e8d7e", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n361This will produce a number of files and the ones we are going to focus on are the\n.elf file when it comes to debugging and hacking which is the full program output,\npossibly including debug information and the .uf2 file which is the program code\nand data in a UF2 form that you can drag-and-drop on to the RP2040 board when\nit is mounted as a USB drive.\nI took the time to wire up a reset button on the Pico so that I do not have to keep\nunplugging in the USB and pressing the BOOTSEL every time I need to re-flash\nso here is the schematic of such.\nTo flash press the external button and while it is still pressed, press the BOOTSEL\non the board, then release the BOOTSEL and finally release the external button.\nThen simply copy the .uf2 file to the drive.\ncp 0x02_hello_world.uf2 /Volumes/RPI-RP2 \nThen we need to locate the USB drive so you can do the following.\nls /dev/tty. \nPress tab to find the drive and then in my case I will use screen  to connect.\nscreen /dev/tty.usbmodem0000000000001 \nHooray! You should see, \"Hello world!\" to the standard output every second.\nIn our next lesson we will debug the .elf binary in Radare2 .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1152, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dfbe26cf-2957-4d0c-835e-b5dee8462dcf": {"__data__": {"id_": "dfbe26cf-2957-4d0c-835e-b5dee8462dcf", "embedding": null, "metadata": {"page_label": "362", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "16aa8a06-916c-44ae-a82a-ca93ecaad650", "node_type": "4", "metadata": {"page_label": "362", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "38509855b36cfea0e9b4edeabbdcf3fb655ba8542ed6b2eb3a26643507f95327", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n362Part 3 - Debugging Hello World\nToday we will dive into debugging our very simple, \"Hello world!\", program.\nLet's review our code.\n#include <stdio.h> \n#include \"pico/stdlib.h\" \n \nint main()  \n{     \n  stdio_init_all(); \n \n  while(1)  \n  { \n    printf(\"Hello world!\\n\"); \n \n    sleep_ms(1000); \n  } \n \n  return 0; \n} \nPlease make sure you build Radare2 from source. Before each lesson PLEASE\ncomplete the following.\ngit pull \nradare2 sys/install.sh \nYou can check that the version is up to date.\nradare2 -v \n \nIn my case, as it will be different for you.\nradare2 5.2.0-git 25988 @ darwin-x86-64 git.5.1.1 \ncommit: 510ddab0e523bed173b3954e5f61abf395812f7d build: \n2021-03-21__05:40:51 \nNow back to our project repo. Let's fire up our debugger.\nradare2 -w arm -b 16 0x02_hello_world.elf \nLet's auto analyze.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 820, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "23a9789d-e004-4a3e-9558-f1b8465e8596": {"__data__": {"id_": "23a9789d-e004-4a3e-9558-f1b8465e8596", "embedding": null, "metadata": {"page_label": "363", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "381ccfae-363f-44d6-bcd1-bfd2c18c58ef", "node_type": "4", "metadata": {"page_label": "363", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "4a171d37b21d36b05b43067a192dd09d7793a32fb00ba484a6b537f3443c1408", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n363aaaa \nLet's seek to main.\ns main \nLet's go into visual mode by typing V and then p twice to get to a good debugger\nview.\nLet's break this very simple program down.\npush {r4, lr} \nWe are simply setting up our function arguments where we pushing the value of\nr4 and lr (link register) to the stack.\nWe then bl (branch long) to the sym.stdio_init_all  function which init's standard\ninput and output.\nbl sym.stdio_init_all \nWe then load the value at the location 0x00000338  into the r4 register. This is\nwhere the, \"Hello world!\"  string lives.\nldr r4, [0x00000338] \nTo prove this we can do the following by pressing : inside of the current Visual\nmode and then typing the following.\n:> psz @ [0x00000338] \nHello world! \n:> psz @ 0x00004cf8 \nHello world! \nAs you can clearly see the value inside of 0x00000338 _is the value at\n_0x0004cf8 .\nWe then move and set the flags (that is the s in movs ) the contents of r4 into r0.\nmovs r0, r4", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 950, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "19a2a328-9fc9-4775-b1d7-7369cde9a6e1": {"__data__": {"id_": "19a2a328-9fc9-4775-b1d7-7369cde9a6e1", "embedding": null, "metadata": {"page_label": "364", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "10e414d4-5721-4363-8589-5cebe57d41aa", "node_type": "4", "metadata": {"page_label": "364", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "55d7ff2738bc24479f5dd0f5e41cc1baec66e7ec5eb7f736fac468674b5a1846", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n364We then branch long to the puts wrapper. The debugger converted our _printf\n_function in our code to this wrapper function.\nbl sym.__wrap_puts \nWe then movs _250 decimal, 0xfa hex, which is 1/4 our 1000 millisecond sleep\ninto _r0 .\nmovs r0, 0xfa \nWe then logically shift left, 2, and set the flags. This of course multiplies our 250\nvalue by 2 and then again by 2 which takes 250 decimal to 1000 decimal which is\nour millisecond delay and places that 1000 decimal value into r0.\nlsls r0, r0, 2 \nIf you are not familiar with ARM 32 Assembly instructions, please reference this\ngreat table provided by Keil.\nhttps://developer.arm.com/documentation/ddi0210/c/Introduction/Instruction-set-\nsummary/ARM-instruction-summary?lang=en\nWe then branch long to our sleep_ms  function.\nbl sym.sleep_ms \nWe then branch unconditional back to 0x328  which is our while loop.\nb 0x328 \nYou can also see the graph view by pressing V again in the current window.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 959, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1428cd47-1143-4ba7-94a7-55fc9843ecdd": {"__data__": {"id_": "1428cd47-1143-4ba7-94a7-55fc9843ecdd", "embedding": null, "metadata": {"page_label": "365", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "71ed852d-8c02-4e42-aa6d-62ddfc0759b0", "node_type": "4", "metadata": {"page_label": "365", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "b6ad06bb85285feceb5359ae014e309dcc654f68caa6bc35604890915f9306d2", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n365\nThis is a great way to trace through more elaborate code. I wanted to show you all\nthis as you can use this going forward as you do larger analysis.\nIn our next lesson we will hack our simple program and convert it back to a .uf2\nand re-flash to the Pico.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 273, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "27f4ff16-7b26-4623-9ea7-14750830704c": {"__data__": {"id_": "27f4ff16-7b26-4623-9ea7-14750830704c", "embedding": null, "metadata": {"page_label": "366", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "15b9b00a-e699-47e2-a05c-bc5cdb7382f4", "node_type": "4", "metadata": {"page_label": "366", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "07ee87c36a7e58a6a56cf62fa59bd08c3830157c0dd9ca79e9fc86ea643c7e30", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n366Part 4 - Hacking Hello World\nIn the last lesson we reviewed how to properly debug our very simple binary in\nRadare2 . Today we are going to hack that static .elf binary and convert it to the\n.uf2 format and flash to our Pico and see the magic happen.\nLet's review our very simple program once more.\n#include <stdio.h> \n#include \"pico/stdlib.h\" \n \nint main()  \n{     \n  stdio_init_all(); \n \n  while(1)  \n  { \n    printf(\"Hello world!\\n\"); \n \n    sleep_ms(1000); \n  } \n \n  return 0; \n} \nLet's load up our binary.\nradare2 -w arm -b 16 0x02_hello_world.elf \nLet's auto analyze.\naaaa \nLet's seek to main.\ns main \nLet's use Visual mode and press p twice to get our our favorite debugger view.\nV \nLet's review the simple ARM32 Assembly.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 746, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "441ff464-d5ca-45f9-8d24-df208320f0d6": {"__data__": {"id_": "441ff464-d5ca-45f9-8d24-df208320f0d6", "embedding": null, "metadata": {"page_label": "367", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b5c06862-7ceb-47b0-896b-fb287a4b9aeb", "node_type": "4", "metadata": {"page_label": "367", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "541a23de423544683d6cf3069a52c8d4bf2bee459b35f70fbac19d19af20f584", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n367\nI would hack this binary in two ways. As we discussed in the last lesson we see\nthe contents inside the memory location 0x00000338  holding the value of our\nstring. Let's press the colon : and press enter.\n:> psz @ [0x00000338] \nHello world! \nLet's review our strings. I want you to pay attention to the, \"Hello world!\" as you\nwill see two addresses. The one on the left is the physical address and the one\ndirectly to the right is the virtual address. We will be concerned with the virtual\naddress. To better understand let's do the following.\n:> iz~ | less \nAs you can see our string is at the top.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 618, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "198e4a4d-4852-4138-84f0-cf895f47d3e9": {"__data__": {"id_": "198e4a4d-4852-4138-84f0-cf895f47d3e9", "embedding": null, "metadata": {"page_label": "368", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f4731075-6b5c-401f-81e6-b221ca4e5582", "node_type": "4", "metadata": {"page_label": "368", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "05f91314e051f0ec38c66e2204db37c90c148fc56892faebf0e671c3c5d769e0", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n368[Strings] \nnth paddr      vaddr      len size section type    string \n\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015 \n0   0x00014cf8 0x00004cf8 12  13   .rodata ascii   Hello \nworld! \n1   0x00014d08 0x00004d08 26  27   .rodata ascii   No \nspinlocks are available \n2   0x00014d24 0x00004d24 33  34   .rodata ascii  \n Hardware alarm %d already claimed \n3   0x00014d48 0x00004d48 15  16   .rodata ascii   \\n*** \nPANIC ***\\n \n4   0x00014d5c 0x00004d5c 11  12   .rodata ascii   Hard \nassert \n5   0x00014d68 0x00004d68 7   8    .rodata ascii  \n Release \n6   0x00014d70 0x00004d70 5   6    .rodata ascii   1.0.0 \n7   0x00014d78 0x00004d78 4   5    .rodata ascii   pico \n8   0x00014d80 0x00004d80 16  17   .rodata ascii  \n 0x02_hello_world \n9   0x00014d94 0x00004d94 11  12   .rodata ascii   Mar 21 \n2021 \n10  0x00014db2 0x00004db2 4   5    .rodata ascii   uBhM \n11  0x00014dbc 0x00004dbc 10  11   .rodata ascii   UART \nstdin \n12  0x00014dc8 0x00004dc8 11  12   .rodata ascii   UART \nstdout \n13  0x00014dd4 0x00004dd4 19  20   .rodata ascii   UART \nstdin / stdout \n14  0x00014dfc 0x00004dfc 18  19   .rodata ascii   USB \nstdin / stdout \n15  0x00014e1c 0x00004e1c 12  13   .rodata ascii  \n Raspberry Pi \n16  0x00014e2c 0x00004e2c 4   5    .rodata ascii   Pico \n17  0x00014e34 0x00004e34 12  13   .rodata ascii  \n 000000000000 \n18  0x00014e44 0x00004e44 9   10   .rodata ascii   Board \nCDC \n19  0x00014ec4 0x00004ec4 19  20   .rodata ascii  \n Unhandled IRQ 0x%x\\n \n20  0x00014ed8 0x00004ed8 39  40   .rodata ascii  \n Isochronous wMaxPacketSize %d too large \n21  0x00014f00 0x00004f00 30  31   .rodata ascii   ep %d \n%s was already available \n22  0x00014f20 0x00004f20 40  41   .rodata ascii   Can't \ncontinue xfer on inactive ep %d %s \n23  0x00014f4c 0x00004f4c 35  36   .rodata ascii  \n Transferred more data than expected \n0   0x00020135 0x10000135 5   6    .data   ascii", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1891, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "483f114a-8dd7-4a08-ae51-b4fdf73cfa7b": {"__data__": {"id_": "483f114a-8dd7-4a08-ae51-b4fdf73cfa7b", "embedding": null, "metadata": {"page_label": "369", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "338f2b27-782f-44ba-a55c-b486572fe93f", "node_type": "4", "metadata": {"page_label": "369", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "d3271b22bf25eec320c049f02534e0e411b28119517582389e8f760473f53dca", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n369 V\\n`\\eh \n1   0x0002018b 0x1000018b 5   6    .data   ascii   &CF\\eh \n2   0x000201a0 0x100001a0 4   5    .data   ascii   CF\\ey \n3   0x000201a8 0x100001a8 4   5    .data   ascii   CF\\eh \n4   0x000201d0 0x100001d0 4   5    .data   ascii   \\thAq \n5   0x0002028d 0x1000028d 5   6    .data   ascii   GpF\\t8 \n6   0x00020805 0x10000805 5   11   .data   utf16le \\a \\b \n\\b \n7   0x00020905 0x10000905 5   11   .data   utf16le \\b \\t \n\\t \n8   0x00020a05 0x10000a05 5   11   .data   utf16le \\t \\n \n\\n \n9   0x00020b05 0x10000b05 5   11   .data   utf16le \\n \\v \n\\v \n(END) \nYou can see the value of 0x00004cf8  holds our string to prove it we can do the\nfollowing.\n:> psz @ 0x00004cf8 \nHello world! \nLet's hack this.\n:> w Hacked World! @ [0x00000338] \nLet's now verify the value is changed.\n:> psz @ 0x00004cf8 \nHacked World! \nThe other thing I would like to hack is the sleep_ms which is currently set at 1000.\nRemember it is showing 250 decimal or 0xfa hex and we logical shift left twice as\nwe discuss in the last lesson. The first logical shift left will multiply by 2 bringing us\nto 500 and the 2nd logical shift left will multiply by 2 brining us to 1000.\nlsls r0, r0, 2  \nLet's hack this by changing the 2 to a 1. This will make the delay 500 ms or a half\na second.\n:> wa lsls r0, r0, 1 @ 0x00000330 \nWritten 2 byte(s) (lsls r0, r0, 1) = wx 4000 \nLet's verify.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1367, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eebd701c-a79c-41c2-9b5c-701b18d75300": {"__data__": {"id_": "eebd701c-a79c-41c2-9b5c-701b18d75300", "embedding": null, "metadata": {"page_label": "370", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ddbcb631-dc2d-483a-abae-bff3d5d6a4cf", "node_type": "4", "metadata": {"page_label": "370", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "22742cffbbcb5d16b5b65784e3d52cf12815d157fc8c18ecf085dd9f1a013dac", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n370:> pd 1 @ 0x00000330 \n\u2502           0x00000330      4000           lsls r0, r0, 1 \nWe can clearly see it changed.\nAll we have to do now is exit and convert our .elf to .uf2!\n./elf2uf2/elf2uf2 0x02_hello_world.elf \n0x02_hello_world.uf2 \nPlug in the Pico and make sure you hold down BOOTSEL or use the setup I\nprovided in the last lesson.\ncp 0x02_hello_world.uf2 /Volumes/RPI-RP2 \nLet's screen it!\nscreen /dev/tty.usbmodem0000000000001 \nAHH yea!\nHacked World! \nHacked World! \nHacked World! \nHacked World! \nHacked World! \nHacked World! \nHacked World! \nHacked World! \nHacked World! \nHacked World! \nHacked World! \nHacked World! \nHacked World! \nHacked World! \nHacked World! \nHacked World! \nHacked World! \nHacked World! \nHacked World! \nHacked World! \nHacked World! \nHacked World! \nHacked World! \nHacked World! \nHacked World!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 832, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c7ed935e-ea1a-4e20-a7f3-b68899650ea2": {"__data__": {"id_": "c7ed935e-ea1a-4e20-a7f3-b68899650ea2", "embedding": null, "metadata": {"page_label": "371", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cc5b5ce0-c3ea-4d42-89b2-0b31bb859903", "node_type": "4", "metadata": {"page_label": "371", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "5af32dab5ea631d2a4ebe918bb893621e39d3697a45e3530a616ece561206621", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n371Every half a second!\nNext lesson we will discuss variables.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 76, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "68591237-dbc5-4b74-a449-bf1ffdf841f7": {"__data__": {"id_": "68591237-dbc5-4b74-a449-bf1ffdf841f7", "embedding": null, "metadata": {"page_label": "372", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "820a4896-88f4-49f2-abce-3b9433c39365", "node_type": "4", "metadata": {"page_label": "372", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "0ec941cf4ba2186a3ff9245afa02a35851a24fbf495be357829d36534b3035ea", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n372Part 5 - char\nToday we will begin our coverage of the C data types. We will start with char. A\nchar is the smallest addressable unit of the machine that can contain basic\ncharacter set. It is an integer type and can be either can be either signed or\nunsigned.\nLet's make a new dir 0x03_char  and add our CMakeLists.txt  file in it.\ncmake_minimum_required(VERSION 3.13) \n \ninclude(pico_sdk_import.cmake) \n \nproject(test_project C CXX ASM) \nset(CMAKE_C_STANDARD 11)  \nset(CMAKE_CXX_STANDARD 17)  \npico_sdk_init() \n \nadd_executable(0x03_char \n  0x03_char.c \n) \n \npico_enable_stdio_usb(0x03_char 1) \n \npico_add_extra_outputs(0x03_char) \n \ntarget_link_libraries(0x03_char pico_stdlib) \nNext we need to copy the pico_sdk_import.cmake  file from the external folder in\nthe pico-sdk  installation to the 0x03_char  project folder.\ncp ../pico-sdk/external/pico_sdk_import.cmake . \nLet's create our C file 0x03_char.c  and roll...", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 937, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7ff0caff-8857-46b3-8578-32e050614d09": {"__data__": {"id_": "7ff0caff-8857-46b3-8578-32e050614d09", "embedding": null, "metadata": {"page_label": "373", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6a18345d-a554-40e4-9fc7-526e9354b2a8", "node_type": "4", "metadata": {"page_label": "373", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "f8255780e8c0627097f2de7d09b36955dab6b2f88a60346a5d165f7de050d5ad", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n373#include <stdio.h> \n#include \"pico/stdlib.h\" \n \nint main()  \n{ \n  stdio_init_all(); \n \n  while(1)  \n  { \n    char x = 'x'; \n         \n    printf(\"%c\\n\", x); \n \n    sleep_ms(1000); \n  } \n         \n  return 0; \n} \nFinally we are ready to build.\nmkdir build \ncd build \nexport PICO_SDK_PATH=../../pico-sdk \ncmake .. \nmake \nThen simply copy the .uf2 file to the drive.\ncp 0x03_char.uf2 /Volumes/RPI-RP2 \nThen we need to locate the USB drive so you can do the following.\nls /dev/tty. \nPress tab to find the drive and then in my case I will use screen  to connect.\nscreen /dev/tty.usbmodem0000000000001 \nYou should see a an \"x\" being printed every second.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 665, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a9b20b38-ed37-4220-b3af-75f5c2f2c423": {"__data__": {"id_": "a9b20b38-ed37-4220-b3af-75f5c2f2c423", "embedding": null, "metadata": {"page_label": "374", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8d6afc77-a292-418f-af4e-358d9d8ed358", "node_type": "4", "metadata": {"page_label": "374", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "14c5518c31c2d8156dbdfb27dd3f1ba09e20535ebc8a3c6cbc83d4add50ba098", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n374x \nx \nx \nx \nx \nx \nNext lesson we will debug char.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 66, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "95163fc5-e261-4871-91f7-3b7e7e2b076e": {"__data__": {"id_": "95163fc5-e261-4871-91f7-3b7e7e2b076e", "embedding": null, "metadata": {"page_label": "375", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e5c520a0-6806-477c-bbae-37598c6df915", "node_type": "4", "metadata": {"page_label": "375", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "1777ec24d84b7ddb6bee04a58abdb28825970386650d278d922ed656d0eeebc2", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n375Part 6 - Debugging char\nToday we debug the char program. Let's review the code.\n#include <stdio.h> \n#include \"pico/stdlib.h\" \n \nint main()  \n{ \n  stdio_init_all(); \n \n  while(1)  \n  { \n    char x = 'x'; \n         \n    printf(\"%c\\n\", x); \n \n    sleep_ms(1000); \n  } \n         \n  return 0; \n} \nLet's fire up our debugger.\nradare2 -w arm -b 16 0x03_char.elf \nLet's auto analyze.\naaaa \nLet's seek to main.\ns main \nLet's go into visual mode by typing V and then p twice to get to a good debugger\nview.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 513, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "60ea1ec0-65bb-48be-a025-a8fc53de8bf7": {"__data__": {"id_": "60ea1ec0-65bb-48be-a025-a8fc53de8bf7", "embedding": null, "metadata": {"page_label": "376", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fb1ed94e-bce4-44af-a6db-f8fd5ca28eb7", "node_type": "4", "metadata": {"page_label": "376", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "feed7b441877fb6146605126229269c09d6b337aeb654b3507d5ed7de1150396", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n376We start out by setting up our main return value.\npush {r4, lr} \nWe call the standard I/O init.\nbl sym.stdio_init_all \nWe then load our format modifier %c into r4.\nldr r4, [0x0000033c] \nWe can prove it.\n:> psz @ [0x0000033c] \n%c \nWe then load our char 'x' into r1.\nmovs r1, 0x78 \nhttps://www.asciitable.com\nYou can check with above site that 0x78 hex is 'x'.\nWe then move our format modifier into r0.\nmovs r0, r4  \nWe then branch long to the printf wrapper and call it.\nbl sym.__wrap_printf \n \nWe then move 250 decimal or 0xfa hex into r0.\nmovs r0, 0xfa \nWe then move 250 decimal, which we know when logical shift left twice will be\n1,000 decimal or 0xfa hex into r0.\nlsls r0, r0, 2 \nWe then call the sleep_ms function.\nbl sym.sleep_ms", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 752, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "755bfad9-cf6a-49b7-b56d-a263b2f1a80b": {"__data__": {"id_": "755bfad9-cf6a-49b7-b56d-a263b2f1a80b", "embedding": null, "metadata": {"page_label": "377", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "72a9260c-df08-4e16-bf0a-0774b8fe1a71", "node_type": "4", "metadata": {"page_label": "377", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "731c3810d6dcb80a186544e2a3aa2d2ad685f2affb8dc4587f95967d090e7c83", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n377We then continue the while loop infinitely.\nb 0x328 \nIn our next lesson we will hack the char data type.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 121, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a8b809e3-7406-4efd-b55f-1db94c2b35c9": {"__data__": {"id_": "a8b809e3-7406-4efd-b55f-1db94c2b35c9", "embedding": null, "metadata": {"page_label": "378", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f73ea96e-60eb-4892-a798-f980f0bff6e3", "node_type": "4", "metadata": {"page_label": "378", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "011c91a1131e960564b3d28812c56001a754da39e296f369112dc47b59a775fe", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n378Part 7 - Hacking char\nToday we hack the simple char program.\nLet's review our code.\n#include <stdio.h> \n#include \"pico/stdlib.h\" \n \nint main()  \n{ \n  stdio_init_all(); \n \n  while(1)  \n  { \n    char x = 'x'; \n         \n    printf(\"%c\\n\", x); \n \n    sleep_ms(1000); \n  } \n         \n  return 0; \n} \nLet's fire up our debugger.\nradare2 -w arm -b 16 0x03_char.elf \nLet's auto analyze.\naaaa \nLet's seek to main.\ns main \nLet's go into visual mode by typing V and then p twice to get to a good debugger\nview.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 517, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fbc870d0-435a-46de-b179-7972d167def0": {"__data__": {"id_": "fbc870d0-435a-46de-b179-7972d167def0", "embedding": null, "metadata": {"page_label": "379", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "32e77581-79ec-4b01-8f43-00a6c2c3fdf5", "node_type": "4", "metadata": {"page_label": "379", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "3bc804291d96be2cea1232b1d00b4eee90ec0d069049bf58bb3e754b050c7a8d", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n379\nIn our last lesson we broke down each line. Here we are clearly interested in\nhacking the value of 0x78 and changing that to anything we want. Let's try 0x79.\nThis simple hack will turn the char 'x' into 'y'.\n:> wa movs r1, 0x79 @ 0x00000328 \nWritten 2 byte(s) (movs r1, 0x79) = wx 7921 \nLet's verify the change.\n:> pd 1 @ 0x00000328 \n\u2502           ; CODE XREF from main @ 0x338 \n\u2502           0x00000328      7921           movs r1, 0x79 \n              ; 'y' ; arg1 \nIn this case our debugger is even telling us it is in fact 'y' in addition to now we are\nmoving the hex ascii value into 0x79 into r1.\nLet's also hack the sleep time to 2000 ms or 2 seconds.\n:> wa lsls r0, r0, 3 @ 0x00000332 \nWritten 2 byte(s) (lsls r0, r0, 3) = wx c000 \nHere we simply logical shift left 3 times therefore 250 x 2 = 500, 500 x 2 = 1000,\n1000 x 2 = 2000.\nLet's verify.\n:> pd 1 @ 0x00000332 \n\u2502           0x00000332      c000           lsls r0, r0, 3 \nAll we have to do now is exit and convert our .elf to .uf2!\n./elf2uf2/elf2uf2 0x03_char.elf 0x03_char.uf2 \nPlug in the Pico and make sure you hold down BOOTSEL or use the setup I\nprovided in the part 2.\ncp 0x03_char.uf2 /Volumes/RPI-RP2 \nLet's screen it!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1203, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "32c05704-c22d-4cf3-bb9c-2213e31e4c56": {"__data__": {"id_": "32c05704-c22d-4cf3-bb9c-2213e31e4c56", "embedding": null, "metadata": {"page_label": "380", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9c95c66f-e9d9-4abe-a60f-746bc1dd4935", "node_type": "4", "metadata": {"page_label": "380", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "1b782b506f3354c33b228fdc483bc0d755b790bc77628a241b3449d29b6b6421", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n380screen /dev/tty.usbmodem0000000000001 \nAHH yea!\ny \ny \ny \ny \ny \ny \nWe see 'y' printed out every 2 seconds!\nIn our next lesson we will discuss the int data type.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 176, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6de4a3cb-45b9-4c17-862c-fec05ff3e598": {"__data__": {"id_": "6de4a3cb-45b9-4c17-862c-fec05ff3e598", "embedding": null, "metadata": {"page_label": "381", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "26519c46-edb3-43e4-8d90-422165aca48b", "node_type": "4", "metadata": {"page_label": "381", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "c0402a0d092efedc36e9e4474ef6fefa3fb2af4e7cf579cbe1a35d1dd22d0c14", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n381Part 8 - int\nToday we are going to work with the int data type which are nothing more than\nwhole numbers. They can be signed or unsigned as well.\nLet's work with a simple example. 0x04_int.c  as follows.\n#include <stdio.h> \n#include \"pico/stdlib.h\" \n \nint main()  \n{ \n  stdio_init_all(); \n \n  while(1)  \n  { \n    int x = 40;  \n \n    printf(\"%d\\n\", x);  \n \n    sleep_ms(1000); \n  } \n \n  return 0; \n} \nHere we simply have our standard IO function followed by our infinite loop. We\nsimply assign 40 to the int data type x and print it using the %d format modifier\nand sleep for 1 second.\nLet's make a new dir 0x04_int  and add our CMakeLists.txt  file in it.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 672, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "514c2513-80da-445a-a961-c7e2e4366df5": {"__data__": {"id_": "514c2513-80da-445a-a961-c7e2e4366df5", "embedding": null, "metadata": {"page_label": "382", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1f2ce779-93a8-4fef-bda8-a19d94d54243", "node_type": "4", "metadata": {"page_label": "382", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "05ad246e69b333b2b0c9f1d51cc6398d6f56c6f92bad9858e3ac9ed74965262d", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n382cmake_minimum_required(VERSION 3.13) \n \ninclude(pico_sdk_import.cmake) \n \nproject(test_project C CXX ASM) \nset(CMAKE_C_STANDARD 11)  \nset(CMAKE_CXX_STANDARD 17)  \npico_sdk_init() \n \nadd_executable(0x04_int \n  0x04_int.c \n) \n \npico_enable_stdio_usb(0x04_int 1) \n \npico_add_extra_outputs(0x04_int) \n \ntarget_link_libraries(0x04_int pico_stdlib) \nNext we need to copy the pico_sdk_import.cmake  file from the external folder in\nthe pico-sdk  installation to the 0x04_int  project folder.\ncp ../pico-sdk/external/pico_sdk_import.cmake . \nFinally we are ready to build.\nmkdir build \ncd build \nexport PICO_SDK_PATH=../../pico-sdk \ncmake .. \nmake \nThen simply copy the .uf2 file to the drive.\ncp 0x04_int.uf2 /Volumes/RPI-RP2 \nThen we need to locate the USB drive so you can do the following.\nls /dev/tty. \nPress tab to find the drive and then in my case I will use screen  to connect.\nscreen /dev/tty.usbmodem0000000000001 \nYou should see a an 40 being printed every second.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 985, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "dbeacf70-54f0-4f85-8719-776e9d37c26f": {"__data__": {"id_": "dbeacf70-54f0-4f85-8719-776e9d37c26f", "embedding": null, "metadata": {"page_label": "383", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0043885e-1378-413e-a548-74b9c628ab46", "node_type": "4", "metadata": {"page_label": "383", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "c31dad0f50e8b878f92de294e8e86b432bd7e969886c901de353b22eab101726", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n38340 \n40 \n40 \n40 \n40 \n40 \n40 \n40 \n40 \n40 \n40 \n40 \nIn our next lesson we will debug.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 98, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cbd12b7b-4ae2-474f-a1d8-f14df54e761f": {"__data__": {"id_": "cbd12b7b-4ae2-474f-a1d8-f14df54e761f", "embedding": null, "metadata": {"page_label": "384", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "30b6e3dd-42d5-4dd6-b589-a9bd6cf3f22d", "node_type": "4", "metadata": {"page_label": "384", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "6d14976f73dd247ac27b12b29b640cd860b8bdb842932edf60adc4d167621e5c", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n384Part 9 - Debugging int\nToday we are going to debug our very simple int program. Let's review the code.\n0x04_int.c\n#include <stdio.h> \n#include \"pico/stdlib.h\" \n \nint main()  \n{ \n  stdio_init_all(); \n \n  while(1)  \n  { \n    int x = 40;  \n \n    printf(\"%d\\n\", x);  \n \n    sleep_ms(1000); \n  } \n \n  return 0; \n} \nLet's fire up in our debugger.\nradare2 -w arm -b 16 0x04_int.elf \nLet's auto analyze.\naaaa \nLet's seek to main.\ns main \nLet's go into visual mode by typing V and then p twice to get to a good debugger\nview.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 533, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7dae93f3-3689-43ce-b10f-cf06f0883442": {"__data__": {"id_": "7dae93f3-3689-43ce-b10f-cf06f0883442", "embedding": null, "metadata": {"page_label": "385", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dcd5f10b-f226-478a-999d-995891868203", "node_type": "4", "metadata": {"page_label": "385", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "b04760300da6cc001376bd91385ab6e884e7a577e70f069ea61b5284e98a9508", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n385\nWe start out by setting up our main return value.\npush {r4, lr} \nWe call the standard I/O init.\nbl sym.stdio_init_all \nWe then load our format modifier %d into r4.\nldr r4, [0x0000033c] \nWe can prove it.\n:> psz @ [0x0000033c] \n%d \nWe then load our int '40' into r1 _which is _0x28  hex.\nmovs r1, 0x28 \nWe can prove it.\n:> ? 0x28 \nint32   40 \nuint32  40 \nhex     0x28 \noctal   050 \nunit    40 \nsegment 0000:0028 \nstring  \"(\" \nfvalue: 40.0 \nfloat:  0.000000f \ndouble: 0.000000 \nbinary  0b00101000 \nternary 0t1111 \nWe then move our format modifier into r0.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 570, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a8c0473a-c9bd-4e0f-80d3-fd3fc5e5e98a": {"__data__": {"id_": "a8c0473a-c9bd-4e0f-80d3-fd3fc5e5e98a", "embedding": null, "metadata": {"page_label": "386", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c9af7c98-eb43-4db1-a38a-54ec4eee41be", "node_type": "4", "metadata": {"page_label": "386", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "1eb0e6037bb436ebdcfa7f4055cb1d2617d796e8df8e4b1e41e98b2ee721da5c", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n386movs r0, r4  \nWe then branch long to the printf wrapper and call it.\nbl sym.__wrap_printf \n \nWe then move 250 decimal or 0xfa hex into r0.\nmovs r0, 0xfa \nWe then move 250 decimal, which we know when logical shift left twice will be\n1,000 decimal or 0xfa hex into r0.\nlsls r0, r0, 2 \nWe then call the sleep_ms function.\nbl sym.sleep_ms \nWe then continue the while loop infinitely.\nb 0x328 \nIn our next lesson we will hack this very simple binary.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 462, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7199e7b8-d4f8-4085-ab63-2ed30da36b4b": {"__data__": {"id_": "7199e7b8-d4f8-4085-ab63-2ed30da36b4b", "embedding": null, "metadata": {"page_label": "387", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "892d3aef-c9d1-48a5-b57a-6cd4fa5d9863", "node_type": "4", "metadata": {"page_label": "387", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "feb128ce8e358d5c8e1bfcdcb2515bf9c077f8e34951a388827b49dcc75721e9", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n387Part 10 - Hacking int\nToday we hack our simple int program. Let's review the code.\n0x04_int.c\n#include <stdio.h> \n#include \"pico/stdlib.h\" \n \nint main()  \n{ \n  stdio_init_all(); \n \n  while(1)  \n  { \n    int x = 40;  \n \n    printf(\"%d\\n\", x);  \n \n    sleep_ms(1000); \n  } \n \n  return 0; \n} \nLet's fire up in our debugger.\nradare2 -w arm -b 16 0x04_int.elf \nLet's auto analyze.\naaaa \nLet's seek to main.\ns main \nLet's go into visual mode by typing V and then p twice to get to a good debugger\nview.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 513, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eb5deb60-bbbe-4aaf-a373-5d661ea68066": {"__data__": {"id_": "eb5deb60-bbbe-4aaf-a373-5d661ea68066", "embedding": null, "metadata": {"page_label": "388", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "22614239-561d-4fc5-87f1-eaf86076eaa0", "node_type": "4", "metadata": {"page_label": "388", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "939cfa48769c600fabd2799b0d41bbbda5ddaeaaf1eb7b5adae5e5250340fb77", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n388\nWe are going to first hack the int value which we know is 40 decimal or 28 hex.\n:> wa movs r1, 0x30 @ 0x00000328 \nWritten 2 byte(s) (movs r1, 0x30) = wx 3021 \nHere we see 0x30  is 48 decimal.\n:> ? 0x30 \nint32   48 \nuint32  48 \nhex     0x30 \noctal   060 \nunit    48 \nsegment 0000:0030 \nstring  \"0\" \nfvalue: 48.0 \nfloat:  0.000000f \ndouble: 0.000000 \nbinary  0b00110000 \nternary 0t1210 \nWe also see that 0xfa which we know is 250 decimal is our 1/4 millisecond delay\nthat when shifted left twice, multiplies, and becomes 1000  decimal for 1 second\ndelay.\n:> ? 0xfa \nint32   250 \nuint32  250 \nhex     0xfa \noctal   0372 \nunit    250 \nsegment 0000:00fa \nstring  \"\\xfa\" \nfvalue: 250.0 \nfloat:  0.000000f \ndouble: 0.000000 \nbinary  0b11111010 \nternary 0t100021 \nLet's hack that to 50 decimal.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 804, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cebf494d-d667-42f5-b307-dcea5d9e1467": {"__data__": {"id_": "cebf494d-d667-42f5-b307-dcea5d9e1467", "embedding": null, "metadata": {"page_label": "389", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e2c03cea-a62a-42cb-8d60-71e789622c3b", "node_type": "4", "metadata": {"page_label": "389", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "4ad5f986b2e1f7233817022cea8204d99d0ee50cd314fd467abb417478b8e212", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n389:> wa movs r0, 0x32 @ 0x00000330 \nWritten 2 byte(s) (movs r0, 0x32) = wx 3220 \nWe can see that it is in fact 50 decimal.\n:> ? 0x32 \nint32   50 \nuint32  50 \nhex     0x32 \noctal   062 \nunit    50 \nsegment 0000:0032 \nstring  \"2\" \nfvalue: 50.0 \nfloat:  0.000000f \ndouble: 0.000000 \nbinary  0b00110010 \nternary 0t1212 \nLet's also only shift it left once such that it will take 50 decimal and turn it into 100\nwhen it shifts left only once.\n:> wa lsls r0, r0, 1 @ 0x00000332 \nWritten 2 byte(s) (lsls r0, r0, 1) = wx 4000 \nAll we have to do now is exit and convert our .elf to .uf2!\n./elf2uf2/elf2uf2 0x04_int.elf 0x04_int.uf2 \nPlug in the Pico and make sure you hold down BOOTSEL or use the setup I\nprovided in the part 2.\ncp 0x04_int.uf2 /Volumes/RPI-RP2 \nLet's screen it!\nscreen /dev/tty.usbmodem0000000000001 \nAHH yea!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 832, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7d17c0bb-ae64-4748-ab3d-ad68cbd9ae9d": {"__data__": {"id_": "7d17c0bb-ae64-4748-ab3d-ad68cbd9ae9d", "embedding": null, "metadata": {"page_label": "390", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ae234c2e-fdaa-4e9b-8038-94ac4f4fda69", "node_type": "4", "metadata": {"page_label": "390", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "40d6455b34babe3cdbc18b4d383bd1d3a5a81c1558e6e120f879155bfe090219", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n39048 \n48 \n48 \n48 \n48 \n48 \n48 \n48 \n48 \n48 \n48 \n48 \n48 \n48 \n48 \n48 \n48 \n48 \n48 \n48 \nHere we see we hacked it to 48 decimal and it is printing every 100 milliseconds!\nIn our next lesson we will deal with floats and the unique way the Pico handles\nthem as it does not have a co-processor.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 299, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f71e9082-cc7d-4414-af8e-0436fcae90b3": {"__data__": {"id_": "f71e9082-cc7d-4414-af8e-0436fcae90b3", "embedding": null, "metadata": {"page_label": "391", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "08c73780-3134-4bd9-8c40-9eb443ab6e3a", "node_type": "4", "metadata": {"page_label": "391", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "f40964887645ac53bf6ac77a428a867c264e33b9127fc01ce65ade0343b94715", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n391Part 11 - float\nToday we are going to handle the float data type. In the Pico there is no co-\nprocessor to handle floating-point numbers as this is handled through a series of\nfunctionality through software in the API.\nLet's work with a simple example. 0x05_float.c  as follows.\n#include <stdio.h> \n#include \"pico/stdlib.h\" \n \nint main()  \n{ \n  stdio_init_all(); \n \n  while(1)  \n  { \n    float x = 40.5; \n \n    printf(\"%f\\n\", x);  \n \n    sleep_ms(1000); \n  } \n \n  return 0; \n} \nVery simply we assign a float of 40.5 into x and print it with the %f _format\nmodifier and then sleep for _1  second.\nLet's make a new dir 0x05_float  and add our CMakeLists.txt  file in it.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 685, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6482065d-76af-4436-969e-46004997fe12": {"__data__": {"id_": "6482065d-76af-4436-969e-46004997fe12", "embedding": null, "metadata": {"page_label": "392", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "488eaf08-9f55-4810-936a-97a96649a9b2", "node_type": "4", "metadata": {"page_label": "392", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "6c5a8116ac9959dba202a6b50004d7072d4a64fcbd27f68ab7b4c0ec417a0318", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n392cmake_minimum_required(VERSION 3.13) \n \ninclude(pico_sdk_import.cmake) \n \nproject(test_project C CXX ASM) \nset(CMAKE_C_STANDARD 11)  \nset(CMAKE_CXX_STANDARD 17)  \npico_sdk_init() \n \nadd_executable(0x05_float \n  0x05_float.c \n) \n \npico_enable_stdio_usb(0x05_float 1) \n \npico_add_extra_outputs(0x05_float) \n \ntarget_link_libraries(0x05_float pico_stdlib) \nNext we need to copy the pico_sdk_import.cmake  file from the external folder in\nthe pico-sdk  installation to the 0x05_float  project folder.\ncp ../pico-sdk/external/pico_sdk_import.cmake . \nFinally we are ready to build.\nmkdir build \ncd build \nexport PICO_SDK_PATH=../../pico-sdk \ncmake .. \nmake \nThen simply copy the .uf2 file to the drive.\ncp 0x05_float.uf2 /Volumes/RPI-RP2 \nThen we need to locate the USB drive so you can do the following.\nls /dev/tty. \nPress tab to find the drive and then in my case I will use screen  to connect.\nscreen /dev/tty.usbmodem0000000000001 \nYou should see a an 40.5 being printed every second.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1001, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "884d2608-6749-4ad4-a3f1-ff82cda1515e": {"__data__": {"id_": "884d2608-6749-4ad4-a3f1-ff82cda1515e", "embedding": null, "metadata": {"page_label": "393", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cfe6b720-02c2-4214-9f7c-9d2cf7f4385d", "node_type": "4", "metadata": {"page_label": "393", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "dad6f336fa7465f3af4ba5d260b1b903189144df87f6d0f384511277443007d8", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n39340.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \nIn our next lesson we will debug.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 303, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0f29a414-81f9-471a-8d9e-0c4f5606e921": {"__data__": {"id_": "0f29a414-81f9-471a-8d9e-0c4f5606e921", "embedding": null, "metadata": {"page_label": "394", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "26e2b798-f0e9-4d1a-ba92-98746ab879bf", "node_type": "4", "metadata": {"page_label": "394", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "45c9fc39bc6d3d0efdd07f69571df269163813a16ef3abf9bf5c8ce37b4346f1", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n394Part 12 - Debugging float\nLet's review our example. 0x05_float.c  as follows.\n#include <stdio.h> \n#include \"pico/stdlib.h\" \n \nint main()  \n{ \n  stdio_init_all(); \n \n  while(1)  \n  { \n    float x = 40.5; \n \n    printf(\"%f\\n\", x);  \n \n    sleep_ms(1000); \n  } \n \n  return 0; \n} \nLet's fire up in our debugger.\nradare2 -w arm -b 16 0x05_float.elf \nLet's auto analyze.\naaaa \nLet's seek to main.\ns main \nLet's go into visual mode by typing V and then p twice to get to a good debugger\nview.\nWe see the format specifier in [0x0000033c].", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 547, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c87de3f5-811e-4c7d-a187-74d4d75c1f14": {"__data__": {"id_": "c87de3f5-811e-4c7d-a187-74d4d75c1f14", "embedding": null, "metadata": {"page_label": "395", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "02f8a7ae-d6aa-4d97-a9a2-857a233b311c", "node_type": "4", "metadata": {"page_label": "395", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "144941c113edbd1d1efb04bdd853d5d1ca4f2b5dec6c141afb913de283d1770f", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n395:> psz @ [0x0000033c] \n%f \nThe float is at [0x00000340] .\n:> pff @ [0x00000340] \n0x00004000 = 9.32830524e-09 \nDo not worry that the float is inaccurate as this machine is x64. What is important\nto see is the value 0x00004000 . You then ask yourself, hey, that is not 40.5! What\nis the deal?\nOK...\nThe Pico does not have its own math coprocessor so it handles floats and\ndoubles using software. Therefore 0x00004000  would be the representation of\n40.5 decimal.\nSo if the value was 40.4, for example, it would be 0x00003333 . Conversely 40.6\nwould be 0x00004ccc .\nTake a look at the following table which will help illustrate the point.\n0x3ff00000 = 1.000000 \n0x3ff00001 = 1.000001 \n0x3ff00002 = 1.000002 \n... \n0x3ff0000f = 1.000015 \n0x3ff00010 = 1.000016 \n0x3ff00011 = 1.000017 \netc... \nUltimately the values in these 4 bytes (32-bits) will determine the value of the\nfloat.\nIn our next lesson we will hack the float and demonstrate this logic.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 961, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8c9e82ff-8a00-4156-a48a-b5144ffa5e7a": {"__data__": {"id_": "8c9e82ff-8a00-4156-a48a-b5144ffa5e7a", "embedding": null, "metadata": {"page_label": "396", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "987c6423-77f3-4b64-816f-83f743c91633", "node_type": "4", "metadata": {"page_label": "396", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "14208d237675e4af993aefaa7bacc20a22ce8438d9e9e172edf47d45842e0498", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n396Part 13 - Hacking float\nLet's review our example. 0x05_float.c  as follows.\n#include <stdio.h> \n#include \"pico/stdlib.h\" \n \nint main()  \n{ \n  stdio_init_all(); \n \n  while(1)  \n  { \n    float x = 40.5; \n \n    printf(\"%f\\n\", x);  \n \n    sleep_ms(1000); \n  } \n \n  return 0; \n} \nLet's fire up in our debugger.\nradare2 -w arm -b 16 0x05_float.elf \nLet's auto analyze.\naaaa \nLet's seek to main.\ns main \nLet's go into visual mode by typing V and then p twice to get to a good debugger\nview.\nThe float is at [0x00000340] .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 531, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aab40873-3a23-4bc0-b0a3-f0c4dd38094a": {"__data__": {"id_": "aab40873-3a23-4bc0-b0a3-f0c4dd38094a", "embedding": null, "metadata": {"page_label": "397", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aafdec8f-fddc-4cca-ae80-543e93b3bec5", "node_type": "4", "metadata": {"page_label": "397", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "409395868bb32e3b79320ed36f58e6e375640198d6d8371c831b204cce9664f5", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n397:> pff @ [0x00000340] \n0x00004000 = 9.32830524e-09 \nAs we discussed in the last lesson, do not worry that the float is inaccurate as this\nmachine is x64. What is important to see is the value 0x00004000 .\nIn our last lesson we also explained the way the Pico handles floats. Let's review\nsome basics.\n0x3ff00000 = 1.000000 \n0x3ff00001 = 1.000001 \n0x3ff00002 = 1.000002 \n... \n0x3ff0000f = 1.000015 \n0x3ff00010 = 1.000016 \n0x3ff00011 = 1.000017 \netc... \nLet's hack to 1.000000 as follows.\nOur microcontroller is a little endian architecture therefore if we are going to\nchange our 40.5 to 1.0 we need to put that value in reverse byte order therefore...\n0x3ff00000 \nNeeds to be...\n0x0000f03f \nTherefore we need to change the value at the following.\nwx 0x0000f03f @ 0x00000340 \nAll we have to do now is exit and convert our .elf to .uf2!\n./elf2uf2/elf2uf2 0x05_float.elf 0x05_float.uf2 \nPlug in the Pico and make sure you hold down BOOTSEL or use the setup I\nprovided in the part 2.\ncp 0x05_float.uf2 /Volumes/RPI-RP2 \nLet's screen it!\nscreen /dev/tty.usbmodem0000000000001", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1087, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b3b21193-ce4f-4e55-b8c5-61d2da051853": {"__data__": {"id_": "b3b21193-ce4f-4e55-b8c5-61d2da051853", "embedding": null, "metadata": {"page_label": "398", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dd791c9e-657a-4ef0-93ee-cf37d8dc5332", "node_type": "4", "metadata": {"page_label": "398", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "d6a80dfc524b7e6529efe778a3a03e3938dd0bdcebc5a3c6c3e3fe5cd0de89a2", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n398AHH yea!\n1.000000 \n1.000000 \n1.000000 \n1.000000 \n1.000000 \n1.000000 \n1.000000 \n1.000000 \n1.000000 \n1.000000 \n1.000000 \n1.000000 \nHere we have hacked the value to 1.000000 and we let the 1 second sleep to\npersist.\nIn our next lesson we will discuss the double data type.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 286, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ac54cccd-adda-4022-865d-5177c09a50b4": {"__data__": {"id_": "ac54cccd-adda-4022-865d-5177c09a50b4", "embedding": null, "metadata": {"page_label": "399", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "931bdb33-06f1-40a7-8dd9-4b917a6314bf", "node_type": "4", "metadata": {"page_label": "399", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "9c2393bfea8dbf45c37d14eede2cdaecf87b065ce75b8f6df6ae99e36c22a78d", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n399Part 14 - double\nToday we are going to handle the double data type. As we discussed, in the Pico\nthere is no co-processor to handle floating-point numbers as this is handled\nthrough a series of functionality through software in the API. This is the same with\ndouble-precision.\nLet's work with a simple example. 0x06_double.c  as follows.\n#include <stdio.h> \n#include \"pico/stdlib.h\" \n \nint main()  \n{ \n  stdio_init_all(); \n \n  while(1)  \n  { \n    double x = 40.5; \n \n    printf(\"%f\\n\", x);  \n \n    sleep_ms(1000); \n  } \n \n  return 0; \n} \nVery simply we assign a float of 40.5 into x and print it with the %f _format\nmodifier and then sleep for _1  second.\nLet's make a new dir 0x06_double  and add our CMakeLists.txt  file in it.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 746, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2050e05c-85c7-41bf-a530-141375237e42": {"__data__": {"id_": "2050e05c-85c7-41bf-a530-141375237e42", "embedding": null, "metadata": {"page_label": "400", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e6e44a4e-9d3f-43e8-ba25-535594dd4aa0", "node_type": "4", "metadata": {"page_label": "400", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "4381d4017b4e1070a592fe04ee4f7fe9f3a27352b0e4b02c897d8a9bc6ae7a05", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n400cmake_minimum_required(VERSION 3.13) \n \ninclude(pico_sdk_import.cmake) \n \nproject(test_project C CXX ASM) \nset(CMAKE_C_STANDARD 11)  \nset(CMAKE_CXX_STANDARD 17)  \npico_sdk_init() \n \nadd_executable(0x06_double \n  0x06_double.c \n) \n \npico_enable_stdio_usb(0x06_double 1) \n \npico_add_extra_outputs(0x056_double) \n \ntarget_link_libraries(0x06_double pico_stdlib) \nNext we need to copy the pico_sdk_import.cmake  file from the external folder in\nthe pico-sdk  installation to the 0x06_double  project folder.\ncp ../pico-sdk/external/pico_sdk_import.cmake . \nFinally we are ready to build.\nmkdir build \ncd build \nexport PICO_SDK_PATH=../../pico-sdk \ncmake .. \nmake \nThen simply copy the .uf2 file to the drive.\ncp 0x06_double.uf2 /Volumes/RPI-RP2 \nThen we need to locate the USB drive so you can do the following.\nls /dev/tty. \nPress tab to find the drive and then in my case I will use screen  to connect.\nscreen /dev/tty.usbmodem0000000000001 \nYou should see a an 40.5 being printed every second.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1009, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5770b204-a2ad-4bca-ad9b-f1738d948297": {"__data__": {"id_": "5770b204-a2ad-4bca-ad9b-f1738d948297", "embedding": null, "metadata": {"page_label": "401", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f25dd720-f220-46bf-a1c4-ae068389e06d", "node_type": "4", "metadata": {"page_label": "401", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "22f57cfd0569b7c38e744c2302140afb3cdfb48e07bb9b0a7ef89119582f3892", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n40140.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \n40.500000 \nIn our next lesson we will debug.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 303, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b799ea19-9b60-4247-9ce5-77576678f320": {"__data__": {"id_": "b799ea19-9b60-4247-9ce5-77576678f320", "embedding": null, "metadata": {"page_label": "402", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e1abab88-31cf-4b5c-b5bb-362d5d9e4781", "node_type": "4", "metadata": {"page_label": "402", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "417bc740dc9d8ebf1d5dbcb7aa64b29db5b6a670e5f761c0f180c291cdb505c5", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n402Part 15 - Debugging double\nLet's review 0x06_double.c  as follows.\n#include <stdio.h> \n#include \"pico/stdlib.h\" \n \nint main()  \n{ \n  stdio_init_all(); \n \n  while(1)  \n  { \n    double x = 40.5; \n \n    printf(\"%f\\n\", x);  \n \n    sleep_ms(1000); \n  } \n \n  return 0; \n} \nLet's fire up in our debugger.\nradare2 -w arm -b 16 0x06_double.elf \nLet's auto analyze.\naaaa \nLet's seek to main.\ns main \nLet's go into visual mode by typing V and then p twice to get to a good debugger\nview.\nWe see the format specifier in [0x0000033c].", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 538, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7d8d5c9e-b5ac-40b0-ba8c-ff594814c15d": {"__data__": {"id_": "7d8d5c9e-b5ac-40b0-ba8c-ff594814c15d", "embedding": null, "metadata": {"page_label": "403", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c1abd69b-a996-4547-bcb9-339850e2c578", "node_type": "4", "metadata": {"page_label": "403", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "fe4c8dd1fd5a52f9f11e9976e3bd1bc9554463bc4a2098e4ba329e3d73a603e6", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n403:> psz @ [0x0000033c] \n%f \nThe double is at [0x00000340] .\n:> pff @ [0x00000340] \n0x00004000 = 9.32830524e-09 \nOk... Same deal as the float lesson so why did I waste time on choosing 40.5?\nI wanted to show you definitive proof that the compiler will treat this the same as it\nis within the bounds of a float when the Pico SDK functionality does it's magic as\nthere is NO co-processor.\nLet's examine a MOD to our program.\n#include <stdio.h> \n#include \"pico/stdlib.h\" \n \nint main()  \n{ \n  stdio_init_all(); \n \n  while(1)  \n  { \n    double x = 40.55555555555555555555; \n \n    printf(\"%.16f\\n\", x)  \n \n    sleep_ms(1000); \n  } \n \n  return 0; \n} \nWhen we compile and run this program we get the following.\n40.5555555560000000 \n40.5555555560000000 \n40.5555555560000000 \n40.5555555560000000 \n40.5555555560000000 \n40.5555555560000000 \n40.5555555560000000 \n40.5555555560000000 \nOK well... This looks different. Let us for the first time in this course look at a\nDynamic Reverse Engineering analysis in GDB.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1014, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e8bcec72-c459-4b7a-b2de-9dac3c84689a": {"__data__": {"id_": "e8bcec72-c459-4b7a-b2de-9dac3c84689a", "embedding": null, "metadata": {"page_label": "404", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c33d8504-783b-4537-888a-f234e269cae4", "node_type": "4", "metadata": {"page_label": "404", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "57ff83e46de6354f8667db1f5ec8b7b1adaa59f26d219f32e6323acc2658ce89", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n404It is NOT critical here that you run this and set this all up in GDB as there are a\ngreat deal of steps in addition to another Pico needed in a configuration such as\nthe following below.\nThe scope of this course is to understand Static Reverse Engineering however I\nwanted to depart and show you what GDB is showing us with this new binary.\nIt is NOT necessary to use Dynamic Reverse Engineering unless you are dealing\nwith a situation where you have a packed binary that you have to dynamically\nload and write out the code. It does make things easier when you are using\nDynamic Reverse Engineering however I want to show you that Static Reverse\nEngineering can get you everything you need without having to set up a remote\nprocess to actually run the binary on.\nIf you did find it necessary to try this you would need to first install the OpenOCD\nrepo into the pico folder that we created at the beginning of this course. You can\nfind details at the link below and go to 5.1 Installing OpenOCD  in the datasheet.\nhttps://datasheets.raspberrypi.org/pico/getting-started-with-pico.pdf\nYou will then need to visit the page below and download the uf2 located at\nDebugging using another Raspberry Pi Pico and then flash the first Pico with\nthe uf2.\nhttps://www.raspberrypi.org/documentation/rp2040/getting-started/\\#board-\nspecifications\nTERMINAL 1 : You will then need to set up a first terminal to go into the openocd\nfolder and run the following.\nsrc/openocd -f interface/picoprobe.cfg -f \ntarget/rp2040.cfg -s tcl \nTERMINAL 2 : You will need to go into the build folder of your project and run the\nfollowing.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1625, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2b79ac6e-7d17-4262-bddf-29c28e6fca72": {"__data__": {"id_": "2b79ac6e-7d17-4262-bddf-29c28e6fca72", "embedding": null, "metadata": {"page_label": "405", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a6b81d63-4c32-493d-8316-234b60f12875", "node_type": "4", "metadata": {"page_label": "405", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "fae0876c68576d07c8da33c1f388c4fb2ea8e3da608471aaa813cc6c36f1cc20", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n405arm-none-eabi-gdb 0x06_double.elf \ntarget extended-remote localhost:3333 \nload \nmonitor reset init \nb main \nc \nTERMINAL 3 : You will need to run the screen emulator which will start with a\nblinking cursor.\nscreen /dev/tty.usbmodem14101 115200 \nNonetheless with that brief explanation, lets' review this dynamically in GDB.\nWe see two values at 0x10000340  and 0x10000344 .\nLet's delete all breakpoints and break right before the call to the printf wrapper.\nd \nb *0x1000032e \nc \nLet's examine the values at each of these locations.\np/x *0x10000340 \n0x71c71c72 \n \np/x *0x10000344 \n0x4044471c \n \nWe know that the following output is what prints.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 659, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "39f97a02-75f4-4a96-addc-416a78d06b5c": {"__data__": {"id_": "39f97a02-75f4-4a96-addc-416a78d06b5c", "embedding": null, "metadata": {"page_label": "406", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0de56f77-8aa8-4ec8-a802-6b6ad83a501e", "node_type": "4", "metadata": {"page_label": "406", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "ccd1689be1a296abc86c510f91421a6d2f1f62ac71cbe0c1fa8c5534730ccce3", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n40640.5555555560000000 \n40.5555555560000000 \n40.5555555560000000 \n40.5555555560000000 \n40.5555555560000000 \n40.5555555560000000 \n40.5555555560000000 \n40.5555555560000000 \n40.5555555560000000 \nWhat is happening is that these values are now in R2 and R3 respectively.\np/x $r2 \n0x71c71c72 \n \np/x $r3 \n0x4044471c \nIn ARM 32 Assembly the arguments to the functions are passed in r0-r3 and if\nyou need more args they are put on the stack. In our case r0 has our format\nmodifier.\nx/s $r0 \n0x10007070:    \"%.16f\\n\" \nWe see in r1 a value pointing to the stack.\nx/w $r1 \n0x0:    0x20041f00 \n \np/x *0x20041f00 \n0xa \nThis is another piece going into the printf wrapper in order to properly print the\nstring to the STDOUT.\nIn our next lesson we will hack statically.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 767, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ec4bbc3b-1767-44cd-82e4-813540363b85": {"__data__": {"id_": "ec4bbc3b-1767-44cd-82e4-813540363b85", "embedding": null, "metadata": {"page_label": "407", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9c0f3155-8c2c-48bf-b5bf-e15a3da8bdf2", "node_type": "4", "metadata": {"page_label": "407", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "bd55cc46d24983aa7b411f0ac77a5e2123535fdec863c91225b1fbb34eb21d5b", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n407Part 16 - Hacking double\nLet's review 0x06_double_MOD.c  as follows.\n#include <stdio.h> \n#include \"pico/stdlib.h\" \n \nint main()  \n{ \n  stdio_init_all(); \n \n  while(1)  \n  { \n    double x = 40.55555555555555555555; \n \n    printf(\"%.16f\\n\", x)  \n \n    sleep_ms(1000); \n  } \n \n  return 0; \n} \nLet's fire up in our debugger.\nradare2 -w arm -b 16 0x06_double.elf \nLet's auto analyze.\naaaa \nLet's seek to main.\ns main \nLet's go into visual mode by typing V and then p twice to get to a good debugger\nview.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 516, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9ea63d69-fe8d-411d-95ce-5b9f2101e157": {"__data__": {"id_": "9ea63d69-fe8d-411d-95ce-5b9f2101e157", "embedding": null, "metadata": {"page_label": "408", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c411f31e-f296-4c85-bfc3-0f68548c4f69", "node_type": "4", "metadata": {"page_label": "408", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "4d4d5af61b7accaf7003c2c2b9944847188c90b690bd2c49e66fcd8c54516774", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n408Our microcontroller is a little endian architecture as we have discussed before\ntherefore if we are going to change our 40.5555555560000000 to 1.0 we need to\nput that value in reverse byte order therefore...\n0x3ff00000 \nNeeds to be...\n0x0000f03f \nTherefore we need to change the value at the following.\nwx 0x0000f03f @ 0x00000344 \nAll we have to do now is exit and convert our .elf to .uf2!\n./elf2uf2/elf2uf2 0x06_double.elf 0x06_double.uf2 \nPlug in the Pico and make sure you hold down BOOTSEL or use the setup I\nprovided in the part 2.\ncp 0x06_double.uf2 /Volumes/RPI-RP2 \nLet's screen it!\nscreen /dev/tty.usbmodem0000000000001 \nAHH yea!\n1.0000002380000000 \n1.0000002380000000 \n1.0000002380000000 \n1.0000002380000000 \n1.0000002380000000 \n1.0000002380000000 \n1.0000002380000000 \n1.0000002380000000 \n1.0000002380000000 \n1.0000002380000000 \n1.0000002380000000 \n1.0000002380000000 \n1.0000002380000000 \n1.0000002380000000 \n1.0000002380000000", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 955, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3c800d40-2698-4ab4-a2d3-b6c6b2a34536": {"__data__": {"id_": "3c800d40-2698-4ab4-a2d3-b6c6b2a34536", "embedding": null, "metadata": {"page_label": "409", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6d1ce695-b5af-4526-a3ec-fecb8f85e3b5", "node_type": "4", "metadata": {"page_label": "409", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "cc4e3f78c222c41431086daf9913fbb79f8de01292a4848358c31dc0d5aedfce", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n409Now we should have a good understanding of the data types within C to look at\nsome slightly larger concepts.\nIn our next lesson we will begin to discuss input.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 176, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ed98a415-a6c5-4be2-ba78-96d57900bcad": {"__data__": {"id_": "ed98a415-a6c5-4be2-ba78-96d57900bcad", "embedding": null, "metadata": {"page_label": "410", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dd6cdf54-ffb8-4c73-9efc-eb3d4f946350", "node_type": "4", "metadata": {"page_label": "410", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "8018cf5409c5af714cdf6868c6dcd2748af247a742ba478177ab75361f229288", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n410Part 17 - \"ABSOLUTE POWER\nCORRUPTS ABSOLUTELY!\", The Tragic\nTale Of Input...\n\"But I am just here to learn Reverse Engineering I am really not interested in the\nnon-sexy coding part, I just want the Reverse Engineering challenge and be a\nsuperstar!\"\nAhh the naivety of the non-Jedi. For much they have to learn or perhaps unlearn\nto really learn!\nI take not a shot at programming books and courses that teach how to capture\nSTDIN from users in a simplistic manner like 'scanf' however I rather challenge\nYOU to consider a proper approach.\nWe are dealing with a microcontroller. It is THE target of Ransomware Authors,\nState Agents and all sorts of unsavory parties. WE must FIRST take TIME to\nunderstand how to properly handle input regarding a microcontroller.\nI have taken the liberty to construct a proper input function for your examination.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 861, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c62347d2-78cc-4546-af10-9a086aeb4677": {"__data__": {"id_": "c62347d2-78cc-4546-af10-9a086aeb4677", "embedding": null, "metadata": {"page_label": "411", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "546fe59b-fdfe-4bfd-a820-5ea7d5794393", "node_type": "4", "metadata": {"page_label": "411", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "debaff3a93d07742e25b75e1be83e713dadfb0e0c9213303c9344d00269ef59d", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n411#include <stdio.h> \n#include <string.h> \n#include \"pico/stdlib.h\" \n \n#define ZERO 0x30 \n#define NINE 0x39 \n#define PERIOD 0x2e \n#define CAPITAL_A 0x41 \n#define LOWER_CASE_Z 0x7a \n#define BACKSPACE 0x08 \n#define DEL 0x7f \n \nvoid input_proc(char type, char* p_usb_char, char* \np_usb_string, const int* p_USB_STRING_SIZE) \n{ \n  *p_usb_char = '\\0'; \n  *p_usb_char = getchar_timeout_us(0); \n  if(*p_usb_char == BACKSPACE || *p_usb_char == DEL) \n  { \n    if(p_usb_string[0] != '\\0') \n    { \n      printf(\"\\b\"); \n      printf(\" \"); \n      printf(\"\\b\"); \n      p_usb_string[strlen(p_usb_string)-1] = '\\0'; \n    } \n  } \n  if(type == 'f') \n  {  \n    char* period; \n    while((*p_usb_char >= ZERO && *p_usb_char <= NINE) || \n*p_usb_char == PERIOD) \n    { \n      if(*p_usb_char == PERIOD) \n        period = strchr(p_usb_string, '.'); \n      if(period == NULL)  \n      { \n        if(strlen(p_usb_string) < *p_USB_STRING_SIZE) \n        { \n          putchar(*p_usb_char); \n          strncat(p_usb_string, p_usb_char, 1); \n        } \n        *p_usb_char = '\\0'; \n      } \n      else \n        break; \n    } \n  }", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1111, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fa724cec-cda8-4107-abbd-c42fe85dd9de": {"__data__": {"id_": "fa724cec-cda8-4107-abbd-c42fe85dd9de", "embedding": null, "metadata": {"page_label": "412", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e7d938f0-7ef2-4eab-9e6a-95bf5e2be284", "node_type": "4", "metadata": {"page_label": "412", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "a0e0c714225862bb519562179db692ed52f115ee8328792cbb5c89b639e69fec", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n412  else if(type == 'd') \n  {  \n    while(*p_usb_char >= ZERO && *p_usb_char <= NINE) \n    { \n      if(strlen(p_usb_string) < *p_USB_STRING_SIZE) \n      { \n        putchar(*p_usb_char); \n        strncat(p_usb_string, p_usb_char, 1); \n      } \n      *p_usb_char = '\\0'; \n    } \n  } \n  else if(type == 's') \n  {  \n    while(*p_usb_char >= CAPITAL_A && *p_usb_char <= \nLOWER_CASE_Z) \n    { \n      if(strlen(p_usb_string) < *p_USB_STRING_SIZE) \n      { \n        putchar(*p_usb_char); \n        strncat(p_usb_string, p_usb_char, 1); \n      } \n      *p_usb_char = '\\0'; \n    } \n  } \n} \n\"Woah I thought we were taking it slow!\" The time has come to properly start to\nunderstand how to be a Jedi when designing effective software. The TIME has\ncome to take the time to properly digest a REAL input validation function.\nI want you to take the time and digest this function so that we can review it in the\nnext lesson.\nIn our next lesson we will properly break down this work of genius to properly\nunderstand and craft and ultimately Reverse Engineer in our coming future!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1076, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ea5827ca-3200-41b9-a8a4-6b2d0990b303": {"__data__": {"id_": "ea5827ca-3200-41b9-a8a4-6b2d0990b303", "embedding": null, "metadata": {"page_label": "413", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "37c3ed5b-5261-4f6d-8466-058a5f1f4fb6", "node_type": "4", "metadata": {"page_label": "413", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "f5d1489f38e008253b7b5ad07db5880977539cd7c2f9f4ea35faa0d9f76706d1", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n413Part 18 - \"FOR 800 YEARS HAVE I\nTRAINED JEDI!\", The FORCE That IS\nInput...\n\"The year is 2021 and seven months, the average price of a gallon of gas within\nthe United States is $7.51 a gallon. Four other U.S. Pipelines were compromised\nwith Ransomware and the Five Eyes discovered a compromised network within\none of the water supplies within a major metropolitan U.S. City.\"\n\"Intelligence sources have located the HQ of the 'Dark Eyes' organization behind\nthe malware attacks and utilize a Pico Microcontroller as the controller inside a\ndrone which is gearing up to strike this facility and knock out their communications\nto avoid the attack on our water supply.\"\n\"The attack coordinates are '61.013693050912785, 99.19670587477269' to which\nthe Drone Operator enters in, '61.013693050912785, 9e.19670587477269', which\nis 'Mir Mines, Russia'. They launch the drone and it detonates at,\n'61.013693050912785, 9.19670587477269', which is 'Nord-Aurdal Municipality,\nNorway'.\"\n\"Panic ensues however DHS was able to secure the water supply network before\nRansomware was able to encrypt their network and within twelve hours the\nnetwork was fully secured.\"\nOk...\nI wanted to take the time to really show the absolute CRITICALITY of designing\nsoftware with proper input handling. Using 'scanf' or other techniques which do\nnot properly handle every keystroke can lead to a situation like the one outlined\nabove.\nLet's review our input function...", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1455, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5af7aea4-0232-46a4-8a4f-c1cc3a35ea5b": {"__data__": {"id_": "5af7aea4-0232-46a4-8a4f-c1cc3a35ea5b", "embedding": null, "metadata": {"page_label": "414", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "33cafa41-ffcd-4e91-bb7c-4ca9df73e40f", "node_type": "4", "metadata": {"page_label": "414", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "df21500f08f7fefb0e5341b60510df85588f5b47a24bd75bd9841497ddbdb567", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n414#include <stdio.h> \n#include <string.h> \n#include \"pico/stdlib.h\" \n \n#define ZERO 0x30 \n#define NINE 0x39 \n#define PERIOD 0x2e \n#define CAPITAL_A 0x41 \n#define LOWER_CASE_Z 0x7a \n#define BACKSPACE 0x08 \n#define DEL 0x7f \n \nvoid input_proc(char type, char* p_usb_char, char* \np_usb_string, const int* p_USB_STRING_SIZE) \n{ \n  *p_usb_char = '\\0'; \n  *p_usb_char = getchar_timeout_us(0); \n  if(*p_usb_char == BACKSPACE || *p_usb_char == DEL) \n  { \n    if(p_usb_string[0] != '\\0') \n    { \n      printf(\"\\b\"); \n      printf(\" \"); \n      printf(\"\\b\"); \n      p_usb_string[strlen(p_usb_string)-1] = '\\0'; \n    } \n  } \n  if(type == 'f') \n  {  \n    char* period; \n    while((*p_usb_char >= ZERO && *p_usb_char <= NINE) || \n*p_usb_char == PERIOD) \n    { \n      if(*p_usb_char == PERIOD) \n        period = strchr(p_usb_string, '.'); \n      if(period == NULL)  \n      { \n        if(strlen(p_usb_string) < *p_USB_STRING_SIZE) \n        { \n          putchar(*p_usb_char); \n          strncat(p_usb_string, p_usb_char, 1); \n        } \n        *p_usb_char = '\\0'; \n      } \n      else \n        break; \n    } \n  }", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1111, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "74017acd-c5ca-42c7-8a89-60674fa0b0cc": {"__data__": {"id_": "74017acd-c5ca-42c7-8a89-60674fa0b0cc", "embedding": null, "metadata": {"page_label": "415", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8006b6a6-f025-427c-a9ee-64a2f7d74b4c", "node_type": "4", "metadata": {"page_label": "415", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "ed61e35d4c64d6a444f0fc3aa203d69f1c5f7532b54f69970e8a7017104fe01c", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n415  else if(type == 'd') \n  {  \n    while(*p_usb_char >= ZERO && *p_usb_char <= NINE) \n    { \n      if(strlen(p_usb_string) < *p_USB_STRING_SIZE) \n      { \n        putchar(*p_usb_char); \n        strncat(p_usb_string, p_usb_char, 1); \n      } \n      *p_usb_char = '\\0'; \n    } \n  } \n  else if(type == 's') \n  {  \n    while(*p_usb_char >= CAPITAL_A && *p_usb_char <= \nLOWER_CASE_Z) \n    { \n      if(strlen(p_usb_string) < *p_USB_STRING_SIZE) \n      { \n        putchar(*p_usb_char); \n        strncat(p_usb_string, p_usb_char, 1); \n      } \n      *p_usb_char = '\\0'; \n    } \n  } \n} \nToday we are going to go over exactly what this function is actually doing.\nvoid input_proc(char type, char* p_usb_char, char* \np_usb_string, const int* p_USB_STRING_SIZE) \nWe begin with the function header. We first are taking a char of type where in our\nexample we will use 'f' for handling floating-point numbers. We then have a char*\n(pointer) p_usb_char  which will be init to '\\0' in main.c . We then have a char*\np_usb_string which we will be init to '\\0' in main.c . We then have a const int*\np_USB_STRING_SIZE  which will be init to 100 in main.c .\nWe then create logic to properly handle a delete or backspace button.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1221, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d93cb93d-8f28-4f63-ba6a-b2f1756a6db3": {"__data__": {"id_": "d93cb93d-8f28-4f63-ba6a-b2f1756a6db3", "embedding": null, "metadata": {"page_label": "416", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1b9de640-2e82-49c9-8283-6f356fdc20dc", "node_type": "4", "metadata": {"page_label": "416", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "b876a52725385303079e20444b8b4c1cf342eaeb55b695cc47cd8254935aac18", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n416  if(*p_usb_char == BACKSPACE || *p_usb_char == DEL) \n  { \n    if(p_usb_string[0] != '\\0') \n    { \n      printf(\"\\b\"); \n      printf(\" \"); \n      printf(\"\\b\"); \n      p_usb_string[strlen(p_usb_string)-1] = '\\0'; \n    } \n  } \nWe then create logic to handle if the main.c program is expecting ONLY floating-\npoint numbers as in our story above if would have been implemented the drone\nwould not have missed their target.\n  if(type == 'f') \n  {  \n    char* period; \n    while((*p_usb_char >= ZERO && *p_usb_char <= NINE) || \n*p_usb_char == PERIOD) \n    { \n      if(*p_usb_char == PERIOD) \n        period = strchr(p_usb_string, '.'); \n      if(period == NULL)  \n      { \n        if(strlen(p_usb_string) < *p_USB_STRING_SIZE) \n        { \n          putchar(*p_usb_char); \n          strncat(p_usb_string, p_usb_char, 1); \n        } \n        *p_usb_char = '\\0'; \n      } \n      else \n        break; \n    } \n  } \nWe see that if someone enters anything other than a ZERO  through NINE  or a\nPERIOD,  the input will SIMPLY BE REJECTED!\nYou also see that if there is a PERIOD  entered a second one could not be entered\neither maliciously or by accident. We also handle the amount of input to be less\nthan 100 properly. We then properly build our string from every properly cleaned\nkeystroke.\nSimilar logic handles if you are dealing with decimals or strings.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1363, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b8b9bff1-704d-4271-8716-5a0b4a2c1138": {"__data__": {"id_": "b8b9bff1-704d-4271-8716-5a0b4a2c1138", "embedding": null, "metadata": {"page_label": "417", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "536c6f6d-d678-4823-9df6-887f3c47ea25", "node_type": "4", "metadata": {"page_label": "417", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "f9c7b3f7dca84beda80e824381dd07f4f570824324dec191e8eaad7ef5f23d82", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n417  else if(type == 'd') \n  {  \n    while(*p_usb_char >= ZERO && *p_usb_char <= NINE) \n    { \n      if(strlen(p_usb_string) < *p_USB_STRING_SIZE) \n      { \n        putchar(*p_usb_char); \n        strncat(p_usb_string, p_usb_char, 1); \n      } \n      *p_usb_char = '\\0'; \n    } \n  } \n  else if(type == 's') \n  {  \n    while(*p_usb_char >= CAPITAL_A && *p_usb_char <= \nLOWER_CASE_Z) \n    { \n      if(strlen(p_usb_string) < *p_USB_STRING_SIZE) \n      { \n        putchar(*p_usb_char); \n        strncat(p_usb_string, p_usb_char, 1); \n      } \n      *p_usb_char = '\\0'; \n    } \n  } \nIn our next lesson we will implement this in our Pico microcontroller.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 661, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7066b7ba-994b-4574-a2e1-8239d3114875": {"__data__": {"id_": "7066b7ba-994b-4574-a2e1-8239d3114875", "embedding": null, "metadata": {"page_label": "418", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b708cdae-27ac-4c9c-8252-8df30880b6a8", "node_type": "4", "metadata": {"page_label": "418", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "b5e4ed2e1c3f59aa53624d325367ea2e332456bb5b0c83792585ed9f21b7e84b", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n418Part 19 - Input\nThe last two lessons hopefully showcased the need for a mature approach to\nhandling input on any serious application.\nToday we will design a proper input architecture for the Pico related to STDIN and\nSTDIO.\nLet's begin with creating an input.h  as follows.\nvoid input_proc(char type, char* p_usb_char, char* \np_usb_string, const int* p_USB_STRING_SIZE); \nvoid flush_input(char* p_usb_string); \nHere we setup our input header file to address the params that we discussed in\nthe last lesson. We also set up our flush_input  function to handle clearing the\ninput buffer after it is used to ensure it is clean before new input is obtained for\nanother call to input_proc .\nNext we will create our print.h as follows.\nvoid print_proc(char* p_usb_char, char* p_usb_string); \nVery simply we are going to pass in a char array from the caller to handle each\nchar and a char array from the caller to handle the string creation.\nNext we will create our input.c  as follows.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 995, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f7665667-7d8a-4eaf-9f45-40365569dc9c": {"__data__": {"id_": "f7665667-7d8a-4eaf-9f45-40365569dc9c", "embedding": null, "metadata": {"page_label": "419", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1d43cdc9-5010-4304-a79d-2f24f2cb55f7", "node_type": "4", "metadata": {"page_label": "419", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "3ea53d7ad16033c888ec5eebe4892a564d4f83bdb4ea7dc11c16c31c076c67ea", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n419#include <stdio.h> \n#include <string.h> \n#include \"pico/stdlib.h\" \n \n#define ZERO 0x30 \n#define NINE 0x39 \n#define PERIOD 0x2e \n#define CAPITAL_A 0x41 \n#define LOWER_CASE_Z 0x7a \n#define BACKSPACE 0x08 \n#define DEL 0x7f \n \nvoid input_proc(char type, char* p_usb_char, char* \np_usb_string, const int* p_USB_STRING_SIZE) \n{ \n  *p_usb_char = '\\0'; \n  *p_usb_char = getchar_timeout_us(0); \n  if(*p_usb_char == BACKSPACE || *p_usb_char == DEL) \n  { \n    if(p_usb_string[0] != '\\0') \n    { \n      printf(\"\\b\"); \n      printf(\" \"); \n      printf(\"\\b\"); \n      p_usb_string[strlen(p_usb_string)-1] = '\\0'; \n    } \n  } \n  if(type == 'f') \n  {  \n    char* period; \n    while((*p_usb_char >= ZERO && *p_usb_char <= NINE) || \n*p_usb_char == PERIOD) \n    { \n      if(*p_usb_char == PERIOD) \n        period = strchr(p_usb_string, '.'); \n      if(period == NULL)  \n      { \n        if(strlen(p_usb_string) < *p_USB_STRING_SIZE) \n        { \n          putchar(*p_usb_char); \n          strncat(p_usb_string, p_usb_char, 1); \n        } \n        *p_usb_char = '\\0'; \n      } \n      else \n        break; \n    } \n  }", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1111, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0b9ed90f-3143-4bc5-9fed-c78e1c8937da": {"__data__": {"id_": "0b9ed90f-3143-4bc5-9fed-c78e1c8937da", "embedding": null, "metadata": {"page_label": "420", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e81c45a2-a91c-4b69-9654-6f1da0af7b5e", "node_type": "4", "metadata": {"page_label": "420", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "e26532e3ba6daf37e09b86ef8c9f47cfab042f2e199a98af30bc7186fdfa7329", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n420  else if(type == 'd') \n  {  \n    while(*p_usb_char >= ZERO && *p_usb_char <= NINE) \n    { \n      if(strlen(p_usb_string) < *p_USB_STRING_SIZE) \n      { \n        putchar(*p_usb_char); \n        strncat(p_usb_string, p_usb_char, 1); \n      } \n      *p_usb_char = '\\0'; \n    } \n  } \n  else if(type == 's') \n  {  \n    while(*p_usb_char >= CAPITAL_A && *p_usb_char <= \nLOWER_CASE_Z) \n    { \n      if(strlen(p_usb_string) < *p_USB_STRING_SIZE) \n      { \n        putchar(*p_usb_char); \n        strncat(p_usb_string, p_usb_char, 1); \n      } \n      *p_usb_char = '\\0'; \n    } \n  } \n} \n \nvoid flush_input(char* p_usb_string) \n{ \n  p_usb_string[0] = '\\0'; \n} \nEverything should be fully understood at this point with the above. If it is not\nplease review the last two lessons.\nNext we will create our print.c  as follows.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 828, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6b44f320-ef24-4181-8b75-d003e0e7f8ce": {"__data__": {"id_": "6b44f320-ef24-4181-8b75-d003e0e7f8ce", "embedding": null, "metadata": {"page_label": "421", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f7b148de-ae43-4768-938a-ef3766e5e9a4", "node_type": "4", "metadata": {"page_label": "421", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "7738a0aa9f435d8af72d561210fba64fbb75800d89f11ba71494bcfddb76e841", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n421#include <stdio.h> \n#include \"pico/stdlib.h\" \n#include \"input.h\" \n \n#define RETURN 0x0d \n \nvoid print_proc(char* p_usb_char, char* p_usb_string) \n{ \n  if(*p_usb_char == RETURN) \n  { \n    if(p_usb_string[0] == '\\0') \n      printf(\"\\n\"); \n    else \n      printf(\"\\n%s\\n\", p_usb_string); \n    flush_input(p_usb_string); \n  } \n} \nHere we bring in our char and string capability and if the return key is pressed will\nprint the contents of the string and then call the flush_input  to clear the buffer as\ndiscussed.\nFinally we will create our main.c  as follows.\n#include <stdio.h> \n#include \"pico/stdlib.h\" \n#include \"print.h\" \n#include \"input.h\" \n \nint main() \n{ \n  stdio_init_all(); \n \n  const int USB_STRING_SIZE = 100; \n  char usb_char; \n  usb_char = '\\0'; \n  char usb_string[USB_STRING_SIZE]; \n  usb_string[0] = '\\0'; \n   \n  while(1) \n  {    \n    input_proc('f', &usb_char, usb_string, \n&USB_STRING_SIZE); \n    print_proc(&usb_char, usb_string); \n  } \n \n  return 0; \n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 985, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3e29309c-b57d-4cad-ac6a-d4f2b42ab19b": {"__data__": {"id_": "3e29309c-b57d-4cad-ac6a-d4f2b42ab19b", "embedding": null, "metadata": {"page_label": "422", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "47d17c0f-09a1-4258-aa58-44959dc97871", "node_type": "4", "metadata": {"page_label": "422", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "3b7ccbfcc037a29a58fdad13ab8db51a5d9ec6206e772633f60d8e6732da9ee8", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n422Here we simply set up our input procedure to handle float input.\nLet's make a new dir 0x07_input  and add our CMakeLists.txt  file in it.\ncmake_minimum_required(VERSION 3.13) \n \ninclude(pico_sdk_import.cmake) \n \nproject(test_project C CXX ASM) \nset(CMAKE_C_STANDARD 11)  \nset(CMAKE_CXX_STANDARD 17)  \nset(CMAKE_C_FLAGS_RELEASE \"${CMAKE_C_FLAGS_RELEASE}\") \nset(CMAKE_CXX_FLAGS_RELEASE \"${CMAKE_CXX_FLAGS_RELEASE}\") \npico_sdk_init() \n \nadd_executable(main \n  main.c \n  print.c \n  input.c \n) \n \npico_enable_stdio_usb(main 1) \npico_enable_stdio_uart(main 0) \npico_add_extra_outputs(main) \n \ntarget_link_libraries(main pico_stdlib hardware_i2c) \n \nadd_custom_target(flash \n    COMMAND cp main.uf2 /Volumes/RPI-RP2/ \n    DEPENDS main \n) \nNext we need to copy the pico_sdk_import.cmake  file from the external folder in\nthe pico-sdk  installation to the 0x07_input  project folder.\ncp ../pico-sdk/external/pico_sdk_import.cmake . \nFinally we are ready to build.\nmkdir build \ncd build \nexport PICO_SDK_PATH=../../pico-sdk \ncmake .. \nmake \nmake flash \nI added a flash routine in the makefile to save us time from copying to the Pico.\nRemember to put the Pico into flash mode first.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1189, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b60262cd-fc44-4011-9179-c4129091aa22": {"__data__": {"id_": "b60262cd-fc44-4011-9179-c4129091aa22", "embedding": null, "metadata": {"page_label": "423", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ffe717a0-768a-476a-9174-7211a73454b2", "node_type": "4", "metadata": {"page_label": "423", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "89cec5baea3f7aceae1754d05175f07828b50aed3e578e0e9755953fadba6b9b", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n423Then we need to locate the USB drive so you can do the following.\nls /dev/tty. \nPress tab to find the drive and then in my case I will use screen  to connect.\nscreen /dev/tty.usbmodem0000000000001 \nBoom! Now you will see you will ONLY be able to enter in numbers and ONLY\nONE decimal point. We properly handle for backspacing and when you reach the\nmax of 100 chars it will not allow you to type further. Finally it prints back what you\ntyped.\n32.3333 \n32.3333 \n32.11111111 \n32.11111111 \n7.9999900390293042038480238408230482038402834234028492384\n0238948230482938429034823948293849023849223 \n7.9999900390293042038480238408230482038402834234028492384\n0238948230482938429034823948293849023849223 \nIn our next lesson we will debug.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 744, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "2aae16a3-6d2f-4c84-93cf-06f30c6071b5": {"__data__": {"id_": "2aae16a3-6d2f-4c84-93cf-06f30c6071b5", "embedding": null, "metadata": {"page_label": "424", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "399997b9-1df2-4c52-84e3-41cc1050c6b9", "node_type": "4", "metadata": {"page_label": "424", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "4e2e767994db32fb42eb6bd918126bf4720cf4fd9d3daacc7fdd0cc1d78a939b", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n424Part 20 - Debugging Input\nToday we will debug our input function. Let's review our code.\nReview input.c  as follows.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 133, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "64847861-d60d-4fd9-b6c0-75b4421d5237": {"__data__": {"id_": "64847861-d60d-4fd9-b6c0-75b4421d5237", "embedding": null, "metadata": {"page_label": "425", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d2bbed9b-4123-4f0c-a92b-065160dfb8bf", "node_type": "4", "metadata": {"page_label": "425", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "b07c32101c06cbabb8a27b90dc594d02981a1894271f56e2d82b8fd9cd213020", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n425#include <stdio.h> \n#include <string.h> \n#include \"pico/stdlib.h\" \n \n#define ZERO 0x30 \n#define NINE 0x39 \n#define PERIOD 0x2e \n#define CAPITAL_A 0x41 \n#define LOWER_CASE_Z 0x7a \n#define BACKSPACE 0x08 \n#define DEL 0x7f \n \nvoid input_proc(char type, char* p_usb_char, char* \np_usb_string, const int* p_USB_STRING_SIZE) \n{ \n  *p_usb_char = '\\0'; \n  *p_usb_char = getchar_timeout_us(0); \n  if(*p_usb_char == BACKSPACE || *p_usb_char == DEL) \n  { \n    if(p_usb_string[0] != '\\0') \n    { \n      printf(\"\\b\"); \n      printf(\" \"); \n      printf(\"\\b\"); \n      p_usb_string[strlen(p_usb_string)-1] = '\\0'; \n    } \n  } \n  if(type == 'f') \n  {  \n    char* period; \n    while((*p_usb_char >= ZERO && *p_usb_char <= NINE) || \n*p_usb_char == PERIOD) \n    { \n      if(*p_usb_char == PERIOD) \n        period = strchr(p_usb_string, '.'); \n      if(period == NULL)  \n      { \n        if(strlen(p_usb_string) < *p_USB_STRING_SIZE) \n        { \n          putchar(*p_usb_char); \n          strncat(p_usb_string, p_usb_char, 1); \n        } \n        *p_usb_char = '\\0'; \n      } \n      else \n        break; \n    } \n  }", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1111, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d080e9be-8bf3-4c8a-a0bf-571c2151ac57": {"__data__": {"id_": "d080e9be-8bf3-4c8a-a0bf-571c2151ac57", "embedding": null, "metadata": {"page_label": "426", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dae7bf9d-b45d-4b39-a0ab-5ae486f4693b", "node_type": "4", "metadata": {"page_label": "426", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "cfc51a3ccf99fa529cc013fb4d61437ca59ba2419db8d399c5f352b8a9c74e72", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n426  else if(type == 'd') \n  {  \n    while(*p_usb_char >= ZERO && *p_usb_char <= NINE) \n    { \n      if(strlen(p_usb_string) < *p_USB_STRING_SIZE) \n      { \n        putchar(*p_usb_char); \n        strncat(p_usb_string, p_usb_char, 1); \n      } \n      *p_usb_char = '\\0'; \n    } \n  } \n  else if(type == 's') \n  {  \n    while(*p_usb_char >= CAPITAL_A && *p_usb_char <= \nLOWER_CASE_Z) \n    { \n      if(strlen(p_usb_string) < *p_USB_STRING_SIZE) \n      { \n        putchar(*p_usb_char); \n        strncat(p_usb_string, p_usb_char, 1); \n      } \n      *p_usb_char = '\\0'; \n    } \n  } \n} \n \nvoid flush_input(char* p_usb_string) \n{ \n  p_usb_string[0] = '\\0'; \n} \nReview our print.c  as follows.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 698, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "accd6aea-523f-4f1d-a086-c1d499b9cd00": {"__data__": {"id_": "accd6aea-523f-4f1d-a086-c1d499b9cd00", "embedding": null, "metadata": {"page_label": "427", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a5ea1280-ff56-4911-bbe8-5025bed9be20", "node_type": "4", "metadata": {"page_label": "427", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "d262a49b6464b0d683b272cbdd0235b339850768f833eae921649a6fae9513b4", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n427#include <stdio.h> \n#include \"pico/stdlib.h\" \n#include \"input.h\" \n \n#define RETURN 0x0d \n \nvoid print_proc(char* p_usb_char, char* p_usb_string) \n{ \n  if(*p_usb_char == RETURN) \n  { \n    if(p_usb_string[0] == '\\0') \n      printf(\"\\n\"); \n    else \n      printf(\"\\n%s\\n\", p_usb_string); \n    flush_input(p_usb_string); \n  } \n} \nReview our main.c  as follows.\n#include <stdio.h> \n#include \"pico/stdlib.h\" \n#include \"print.h\" \n#include \"input.h\" \n \nint main() \n{ \n  stdio_init_all(); \n \n  const int USB_STRING_SIZE = 100; \n  char usb_char; \n  usb_char = '\\0'; \n  char usb_string[USB_STRING_SIZE]; \n  usb_string[0] = '\\0'; \n   \n  while(1) \n  {    \n    input_proc('f', &usb_char, usb_string, \n&USB_STRING_SIZE); \n    print_proc(&usb_char, usb_string); \n  } \n \n  return 0; \n} \nLet's fire up in our debugger.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 817, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3bb80efc-ef0e-4f04-97be-5066366d56a8": {"__data__": {"id_": "3bb80efc-ef0e-4f04-97be-5066366d56a8", "embedding": null, "metadata": {"page_label": "428", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7cc854e3-937d-4bfb-aa1b-3ae33b8a8f99", "node_type": "4", "metadata": {"page_label": "428", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "905b59728c662781c23c51c5261e1567280176f93ef330f15d1aa6f94656b3fa", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n428radare2 -w arm -b 16 main.elf \nLet's auto analyze.\naaaa \nLet's seek to main.\ns main \nLet's go into visual mode by typing V and then p twice to get to a good debugger\nview.\nWe first review main .\nWe see our stdio_init_all  call which sets up IO and we see a 0x64  into r3 which is\nour move of 100 decimal to set USB_STRING_SIZE _and we set up our\n_usb_char  value and init to 0 and finally usb_string  and init to 0.\nLet's look at our print_proc  function.\nWe first check to see if our pointer to usb_char or p_usb_char  is equal to the\nRETURN  key or 0xd and if so branch.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 589, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1a192d56-6674-4096-a405-9749a86ef0ae": {"__data__": {"id_": "1a192d56-6674-4096-a405-9749a86ef0ae", "embedding": null, "metadata": {"page_label": "429", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "66769a97-e4d4-43d1-8c23-d7018b141c41", "node_type": "4", "metadata": {"page_label": "429", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "27980f7bd96cc13266177aee95a72fb41eb77762d40bb6a9000a033cc6543fd9", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n429We then iterate over p_usb_string  until we hit the null terminator and then call our\n_printf _function which as we can see here is a wrapper to the c printf function.\nWe finally flush_input .\nOur input_proc  function is a bit more complex.\nHere we use the g etchar_timeout_us  function and handle the BACKSP ACE  and\nDELETE  keys.\nWe then call our putchar _wrapper against  0  and _9  and check the strlen  and\nproperly build our string with strncat .\nWe then properly handle our PERIOD  logic to ensure only one _PERIOD _is\nentered as a floating point number can NOT handle 2 periods.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 603, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0f039e7f-c18b-4470-b56f-d816de1b759b": {"__data__": {"id_": "0f039e7f-c18b-4470-b56f-d816de1b759b", "embedding": null, "metadata": {"page_label": "430", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0c3d1ed3-e7f3-40b9-98cb-53f523098891", "node_type": "4", "metadata": {"page_label": "430", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}, "hash": "30397f7ebb9ed3c7d8807a79935a7952eff2fd26404d49ee1681ed0a53d8ea57", "class_name": "RelatedNodeInfo"}}, "text": "Part 1: Goals\n430\nWe then then properly handle our loop.\nFinally, we have our flush_input  function.\nHere we simply flush the input buffer by setting p_usb_string  to a null char.\nThis was a larger debug session so please take your time and compare the\nassembly against the source so you can really grasp each paragraph as I cover it\nhere.\nThis brings us to the end of our initial learning journey. In this journey we took 197\nsteps together through several different architectures. It is your turn to take this\ntraining into practice and do great things!\nThis book will be your reference guide as you encounter challenges however\nthere is nothing you can't accomplish!", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 669, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"a0e08835-711d-4e28-922f-fb2f7f064c48": {"node_ids": ["38392cfb-c005-4336-bed9-5c0a61c487e9"], "metadata": {"page_label": "1", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "05dfabb5-3112-4b47-af4a-646e0c95be46": {"node_ids": ["15bbaf21-7e87-43bf-9b8c-b40d795c5b44"], "metadata": {"page_label": "2", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "d9e6e873-3fbe-4314-ada2-b68012438a80": {"node_ids": ["d6a44019-0f7f-478b-b84f-6753c18a1822"], "metadata": {"page_label": "3", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "b56b7d02-0233-4e75-bda4-16d20021e50f": {"node_ids": ["41d12a6f-464b-4b19-9fe5-559ec46f9727"], "metadata": {"page_label": "4", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "d5a760ff-6b1b-4c7f-b3df-c99eb876023b": {"node_ids": ["ad9daf5f-92cb-4bad-899f-2d7a497803f3"], "metadata": {"page_label": "5", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "f43b82e4-1424-4d61-8690-7e518485ae6d": {"node_ids": ["d73ed1e5-6994-4e21-8eb0-921ab96a206a"], "metadata": {"page_label": "6", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "2776cc63-94eb-44bc-afb1-dc3edb5c7058": {"node_ids": ["57d91f76-5cba-4353-8f2a-2893abd5427d"], "metadata": {"page_label": "7", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "17d92989-e6b1-4ff6-b817-b030decf673b": {"node_ids": ["0b19a9f0-3937-4512-bd97-e98fdf184378"], "metadata": {"page_label": "8", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "453e8ff1-2c38-47b7-9737-1b14d5db58d8": {"node_ids": ["ff3f45e9-fcc0-46ce-a947-5c16d2a35154"], "metadata": {"page_label": "9", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "001678e3-b82a-4ec7-b18d-03ca81bec483": {"node_ids": ["448743ab-434e-41d6-ba01-a607e04c1bfa"], "metadata": {"page_label": "10", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "92a35a12-a98c-470e-9113-1ea60b56548c": {"node_ids": ["9d965b5f-7f5e-4f31-b422-3329fca32fa7"], "metadata": {"page_label": "11", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "9b1e9e4f-7616-4404-8825-3341066102d8": {"node_ids": ["dfb59914-451e-426a-a186-5707e694368e"], "metadata": {"page_label": "12", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "dff8ab15-4d9e-4211-b477-c81282473175": {"node_ids": ["6c617c77-7034-4713-bba0-66aa9ef4abdb"], "metadata": {"page_label": "13", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "6ee0e2a5-4ac9-4b73-aeb4-0abb2bc90848": {"node_ids": ["ee905d4e-3602-411b-93a8-597841d30b48"], "metadata": {"page_label": "14", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "9f73fc41-9cd8-43fd-9563-bb2a4c9ba85b": {"node_ids": ["5c18f63c-6f20-401c-8329-f53f5eae1258"], "metadata": {"page_label": "15", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "aa998532-d86d-4132-b45c-c59c082f9446": {"node_ids": ["dc0cb11b-f410-415f-9047-7779209b9cad"], "metadata": {"page_label": "16", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "d8aeac3b-80d6-434e-a88b-c769632035e3": {"node_ids": ["0b471e3e-ef2f-49e2-9913-d2bb3c442eda"], "metadata": {"page_label": "17", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "04972e5d-a642-48ad-9870-1b8f5a3ec119": {"node_ids": ["c35a60ec-01a9-4bac-add3-819d9849859c"], "metadata": {"page_label": "18", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "e567217f-3bf1-4575-9074-be87278fa136": {"node_ids": ["8059b26e-a5d7-4422-a87f-4506edb2dfb0"], "metadata": {"page_label": "19", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "59d6e898-b3aa-489d-b098-7c48b54e7b65": {"node_ids": ["f7b5d6d8-3372-4ff3-93be-32c2d4abf7b2"], "metadata": {"page_label": "20", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "b8820a50-6eb9-44b8-96ca-17b6d4e0a424": {"node_ids": ["27e5663d-33d5-4c6f-bff2-2ebbd3afbd1e"], "metadata": {"page_label": "21", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "ce926670-e282-4cda-8ed8-d165b9ddc037": {"node_ids": ["c59f4818-1c78-4e5c-bfa7-2348d3e233f8"], "metadata": {"page_label": "22", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "97935c74-f21d-4f82-80de-c9a8d3631c0c": {"node_ids": ["c403b6f0-cc03-4cf0-a43d-2e6085eb1d47"], "metadata": {"page_label": "23", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "80bb29a5-496e-4b07-8a53-f3593a56e1ae": {"node_ids": ["5522fd06-bb3d-4c1e-a75f-2bf8cb3dc9df"], "metadata": {"page_label": "24", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "936d2e6a-7107-4b7b-82c4-ab0d661309e3": {"node_ids": ["de7b6b87-7c70-417d-829e-d0d75f1c9720"], "metadata": {"page_label": "25", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "c43193b4-f754-4791-afbe-de7881ba530f": {"node_ids": ["e9d1e950-c3b1-4a43-8c91-e9768d352418"], "metadata": {"page_label": "26", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "afcac854-32ec-4ce8-9df6-7d1af887fa05": {"node_ids": ["cac621fe-f830-4179-9aa9-a5848dba4b31"], "metadata": {"page_label": "27", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "74b13dd1-6d0a-488a-a112-3a6213296efc": {"node_ids": ["064976af-9668-444b-aeab-342784ff12ac"], "metadata": {"page_label": "28", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "875a3fbf-9f56-4eed-96ef-506664e2f5d4": {"node_ids": ["5028cadd-0347-4849-be98-7de8bb1f7521"], "metadata": {"page_label": "29", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "09e14734-1b90-4bab-a011-e88b3c97d117": {"node_ids": ["741bbd43-94a6-4917-9514-ad0269447170"], "metadata": {"page_label": "30", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "984f2bbb-568b-4f6f-9411-b670e4ee6a04": {"node_ids": ["8e3cf609-809a-4cf0-9b51-aa099341b320"], "metadata": {"page_label": "31", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "db650133-06a9-4cf3-87cf-c5e28ff28731": {"node_ids": ["64cb17e9-b200-4d32-a7d7-88f15ee9d73d"], "metadata": {"page_label": "32", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "a171f1a3-18c1-49dd-b34d-208919f28b4d": {"node_ids": ["bd83b56e-76a4-4d6f-8290-5ebb7784f63b"], "metadata": {"page_label": "33", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "7bfc252e-c1bb-4d0c-b6a8-c5ab7f2fb6c5": {"node_ids": ["a76b0f8e-c40d-412c-a07c-fe5b0c2d2acf"], "metadata": {"page_label": "34", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "b2659654-65cc-4611-8aeb-f1a6533a5646": {"node_ids": ["44397883-1c2f-41c7-bf67-2f611be57471"], "metadata": {"page_label": "35", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "a2a22528-4dbc-4f43-9858-c09203080aa5": {"node_ids": ["8a97bc1d-9fdc-4db5-b01d-90fa72591203"], "metadata": {"page_label": "36", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "bfa13395-a00a-42af-a3a9-4a6ac4ad29fb": {"node_ids": ["c1fe164e-73fb-45d8-af12-c02646505cb4"], "metadata": {"page_label": "37", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "64d838a8-b7cf-4a1f-8f0f-e82c15232721": {"node_ids": ["ab3099d4-6055-4997-962e-30a5f5e04973"], "metadata": {"page_label": "38", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "c994e818-ca4f-47f4-98ad-2a54038464ad": {"node_ids": ["f4c2e3dd-30a9-4422-8800-56d33ae724b6"], "metadata": {"page_label": "39", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "de0b5dfb-228e-4e63-a50d-e8376e7ebe80": {"node_ids": ["118240c4-f227-4624-9b48-ee2337453646"], "metadata": {"page_label": "40", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "a4b188db-7135-4fb1-a1ef-014ea6ce0e9d": {"node_ids": ["96d70b8f-ffdd-4de2-9bf6-60d091228da0"], "metadata": {"page_label": "41", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "f9fa1a91-2aa1-4e61-844c-d539917435f0": {"node_ids": ["0cc913a0-a351-4b5c-840c-f33a0ff93e7e"], "metadata": {"page_label": "42", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "fcef21a1-dcaa-4722-90e3-a4ddee8bbb1b": {"node_ids": ["79ccab93-907e-41b1-8c07-e75eb4c99c13"], "metadata": {"page_label": "43", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "12550949-ac4c-42ce-bb79-7f8f05bc1b52": {"node_ids": ["ba628844-ba39-406c-be8e-7fd9061f7d47"], "metadata": {"page_label": "44", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "a02f4137-5276-4d59-a18e-0df1501011c1": {"node_ids": ["1b8b2395-ecc7-46e4-9aa3-dbdef359b0dd"], "metadata": {"page_label": "45", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "80a9a333-b89a-4465-8dfc-9be0ef02a7a1": {"node_ids": ["48e1d7d7-fa5a-40be-a99c-1b5d52a8aeb9"], "metadata": {"page_label": "46", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "85035baf-8b1b-4672-8800-8c10264402d2": {"node_ids": ["8e705404-b2eb-48b4-975f-b19264c2ecce"], "metadata": {"page_label": "47", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "d5821e24-e683-46de-bbed-0d62b83a96c4": {"node_ids": ["7a0c7dae-788d-4014-9b30-1b49bae73f49"], "metadata": {"page_label": "48", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "3d92b984-6ce9-442e-8103-29d07961e070": {"node_ids": ["607d9d80-6a10-49c8-88ec-a5c9301dcc05"], "metadata": {"page_label": "49", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "fe211cd5-efb3-4da2-9f7d-0f6fb2bddbb3": {"node_ids": ["0df592a0-ddf3-40de-b519-1f1d4e38bc33"], "metadata": {"page_label": "50", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "15e07a6f-76ce-4a82-a786-391cdcd35aca": {"node_ids": ["6c6ac246-2bd7-48d9-aaa0-9d5193f0849d"], "metadata": {"page_label": "51", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "d24a6ab2-d4d3-4d4f-9f7e-3815a774efe7": {"node_ids": ["a7cc8f80-4465-44cb-a8a6-26bcec37d21b"], "metadata": {"page_label": "52", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "76791d80-104e-4b3e-b88e-43f72c9a3d4f": {"node_ids": ["9911fba8-efa1-47c8-b4d9-5bce638a893c"], "metadata": {"page_label": "53", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "475c5733-9751-4f43-92a0-91a7ae894dc6": {"node_ids": ["a9e9c499-f358-41bd-b5b1-ecfa0e46c947"], "metadata": {"page_label": "54", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "d3e7b6a9-d0d2-4dd7-832e-c85eb9e7fb15": {"node_ids": ["8f7d22d0-5b77-4d08-9ec6-c22b36fc8bdc"], "metadata": {"page_label": "55", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "f3f2f7f5-a985-42d4-9da9-74e9927a22e9": {"node_ids": ["6426cfc1-92a0-4ad0-9015-862a708c3c38"], "metadata": {"page_label": "56", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "9630eb62-79c6-48b9-8bb5-15be162219bd": {"node_ids": ["dcd14d43-3842-412d-85d4-d6ca572fbf13"], "metadata": {"page_label": "57", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "e2d027f1-fd33-4c82-85cb-83c6879815aa": {"node_ids": ["846100de-d9c0-42e9-91db-65a12e154817"], "metadata": {"page_label": "58", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "a3b6dc73-ec0d-40b8-a9e1-9e1d1273c484": {"node_ids": ["f90bf45e-4ecd-42b2-baad-c1c0e5b2a09d"], "metadata": {"page_label": "59", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "7e24d7b4-32f7-4197-86c9-ba086166570f": {"node_ids": ["987df782-0a57-4f40-b0a7-138867f46a32"], "metadata": {"page_label": "60", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "0724a354-5728-48bb-a759-169f878009e4": {"node_ids": ["23b8fdb9-b363-449b-b4c0-d37a0c3d46d0"], "metadata": {"page_label": "61", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "c30adaba-c97d-4148-a9e8-b1101b9bce4a": {"node_ids": ["2a45bb47-809d-43d4-95e5-a7c97940cbc1"], "metadata": {"page_label": "62", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "3726601a-20a3-4c24-8c47-c3aaf89126a2": {"node_ids": ["bbad10e5-c686-47d1-af1c-3ff16753d2d5"], "metadata": {"page_label": "63", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "101c693a-69b1-4fba-b21c-547b7dd76bb7": {"node_ids": ["394597a3-8c5d-461d-b7ee-9bcb622d6e87"], "metadata": {"page_label": "64", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "4269736c-1840-4f18-8b53-310760cee6b1": {"node_ids": ["3fc9f901-2271-4aee-82a5-8a90c0a0abc3"], "metadata": {"page_label": "65", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "a775120d-6d5c-4840-93c8-233dd4c200d3": {"node_ids": ["74a6b321-a89b-4d7f-873c-6b1ca0028747"], "metadata": {"page_label": "66", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "f09eb3ae-9c33-4334-b5c3-bdbe13d1e39e": {"node_ids": ["41dceb47-e5dc-4708-9e38-fc0cc57442c0"], "metadata": {"page_label": "67", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "2e49e39e-938b-4644-ba88-fb61fd7124d1": {"node_ids": ["da144610-953f-4987-93be-6f56b3ff188b"], "metadata": {"page_label": "68", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "2fb68b04-51f1-46f4-bee8-938751b073b8": {"node_ids": ["bc36ddd3-7f23-4a1d-b74b-f1357665438d"], "metadata": {"page_label": "69", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "a952f3fc-9807-487c-9929-80b4fec76371": {"node_ids": ["3cbb3af7-3550-4f2e-8bf3-78767087cac7"], "metadata": {"page_label": "70", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "12067c2a-41b2-4052-a23c-2887c79868a2": {"node_ids": ["27f54f9c-a696-4e39-a095-7d36fdc00d32"], "metadata": {"page_label": "71", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "f8ba6383-80a8-41d5-944c-9eeda070e320": {"node_ids": ["2e3a2487-39a8-4a9d-80b7-c4be5ef21053"], "metadata": {"page_label": "72", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "1d0a9154-b34a-4fe7-8748-1e96d2204075": {"node_ids": ["24c6e134-7ff4-41bb-bde2-4d1eafc52c28"], "metadata": {"page_label": "73", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "052af2aa-5395-46e7-9b94-59803c54bd76": {"node_ids": ["d19645e7-c305-4385-8eb3-952da37645f1"], "metadata": {"page_label": "74", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "905ce469-92bb-40f1-a955-1621093976db": {"node_ids": ["5ac6be57-04e8-4bcc-8769-b4474d22d4e8"], "metadata": {"page_label": "75", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "2e50f84f-9a91-4439-b7e4-8dbff5542353": {"node_ids": ["05d10f30-f512-477a-930d-0e9c9176e81f"], "metadata": {"page_label": "76", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "63962a8b-f476-4d81-a7c4-cf0f30360a9f": {"node_ids": ["10d0c491-fd08-43dd-87c9-f6e674009989"], "metadata": {"page_label": "77", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "5055891b-2c72-4103-92fe-f22e6eca43fa": {"node_ids": ["047672e5-731a-43bb-adb0-3aa72fdbfe35"], "metadata": {"page_label": "78", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "ae1ca833-5b2a-48f1-9c96-df305ce0761f": {"node_ids": ["27c648fb-655b-40f9-8ac2-6bf292f02270"], "metadata": {"page_label": "79", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "60df65ee-b19d-4bde-97bb-5892b26d068c": {"node_ids": ["7015c1d2-25c3-4578-ae61-9b903ab5e646"], "metadata": {"page_label": "80", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "0264f651-656a-4615-917d-00444ec82669": {"node_ids": ["11484388-d5a0-4b12-a68c-0dfde986ab25"], "metadata": {"page_label": "81", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "2c5eaf2b-bbb8-4e5c-80a6-1a574f31e2c5": {"node_ids": ["4a4c4474-3d55-4b2a-a653-f82976bc1f5f"], "metadata": {"page_label": "82", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "79460471-77a9-4bd8-a444-fa825801d025": {"node_ids": ["3e708d74-2759-4c0a-a491-95d33eb5da93"], "metadata": {"page_label": "83", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "0a35a476-e537-43e0-adad-4a5edb2b8093": {"node_ids": ["bb2c8b24-5e57-4491-bc7e-fa0823047a19"], "metadata": {"page_label": "84", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "2a424303-79fc-4a97-9e41-bdd23e7db883": {"node_ids": ["e5872643-4c6d-4d8f-9e1e-2144be3bc43a"], "metadata": {"page_label": "85", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "7aa4d61c-3e09-428e-9d70-7a71a89c2b04": {"node_ids": ["b58ba513-897f-4cb0-8ba2-d0d5fdf06ae0"], "metadata": {"page_label": "86", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "a69bc4e2-453f-4bdb-aef2-e302fb17d294": {"node_ids": ["76724c1d-81ca-4053-b197-0ad41bd8d122"], "metadata": {"page_label": "87", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "e4b4c74e-6e0a-4034-8901-68d17332a2eb": {"node_ids": ["0cafe233-7957-44f7-8d77-ab92d2662357"], "metadata": {"page_label": "88", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "4c668fdf-c5ed-4b1b-8ed8-52b2eaaee6ac": {"node_ids": ["31d1044c-5b11-4cc2-946e-8ab9d6122fd4"], "metadata": {"page_label": "89", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "4e9ca625-b668-4e94-b187-ca93a18447c6": {"node_ids": ["90b7da1d-1b92-41b2-9b51-23df481d4b55"], "metadata": {"page_label": "90", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "d285d5ad-40ed-49ab-9864-b40819b1981c": {"node_ids": ["31ebbff9-d316-46d0-afe7-3970db5efd6e"], "metadata": {"page_label": "91", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "073a22ae-60a0-451c-98dd-9bdd8b7a8156": {"node_ids": ["34820f6d-d084-479d-b718-a4adca26bc74"], "metadata": {"page_label": "92", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "0a0a635d-6b7d-4fb1-a4ed-3843b408b404": {"node_ids": ["9c757698-ca51-4b24-a6dd-ab7de988e720"], "metadata": {"page_label": "93", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "1b1e1586-f125-4f61-afc7-0379a5d28367": {"node_ids": ["dda323a7-8d37-40af-a18f-a146e3c52296"], "metadata": {"page_label": "94", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "d6dd18ff-b84e-4916-b1e8-6c83141cfce9": {"node_ids": ["7a75976f-6b8f-4796-a4d9-2b82c91d0ef6"], "metadata": {"page_label": "95", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "581cee82-3c46-4d37-9aee-b6cd159b2b96": {"node_ids": ["9b1e6aa1-0a5e-45b2-990a-3767b9ebcb2a"], "metadata": {"page_label": "96", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "07aabb45-12d1-409d-aa5d-b7b421f3b923": {"node_ids": ["682fac3a-ebb6-442c-b6e4-b8e40222d70d"], "metadata": {"page_label": "97", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "565f6fa4-651a-432f-9286-7fca2aa004cf": {"node_ids": ["f4a08316-4883-4992-899d-d7a00ed58e6f"], "metadata": {"page_label": "98", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "5dee41c3-6577-475c-afb2-d00ac21a4a48": {"node_ids": ["461373ad-0013-4cab-a055-e89358be2f22"], "metadata": {"page_label": "99", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "a3c315d2-479e-4d2b-a283-ca0083603216": {"node_ids": ["e2ed831f-6236-497b-adf0-32b711bcb2f9"], "metadata": {"page_label": "100", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "ed469d87-4b9b-4f1f-acee-765d8bf3fd27": {"node_ids": ["743b241d-c357-41d4-ad60-e0cde412e621"], "metadata": {"page_label": "101", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "d6f38b78-c44c-40cc-9afd-614e65e7d41d": {"node_ids": ["5d2e9bcc-59b4-417e-9ba2-ff1f5fae12a2"], "metadata": {"page_label": "102", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "c145279b-ba03-4dc1-8689-d6070f770dc4": {"node_ids": ["6afa0756-ab1d-47fd-9bca-e3857740777f"], "metadata": {"page_label": "103", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "41a28cd0-4fdd-4bc2-9210-2cafe372eca6": {"node_ids": ["091be3ee-b3bf-4142-bbf6-424132c087cb"], "metadata": {"page_label": "104", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "e6136cd3-b392-4153-ad6e-fac2ca5c2fb3": {"node_ids": ["9e12d429-067d-4a26-b968-4f2c5e78f8c5"], "metadata": {"page_label": "105", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "67a5d3cf-1105-4eb8-b5f4-a5563efed932": {"node_ids": ["d8ad9448-56f7-403b-be30-943f8df61390"], "metadata": {"page_label": "106", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "c5b2bd6e-865f-477c-8766-6542c8690d62": {"node_ids": ["63420e32-9f68-47cd-9ecc-38dbfef9b86f"], "metadata": {"page_label": "107", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "8ac636a0-affd-42ec-8b08-ceab0b4c14c0": {"node_ids": ["f1aaa374-bd79-434a-8c6f-02c940f5497c"], "metadata": {"page_label": "108", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "35c2644a-ffaf-4ece-bd6b-ecf77b7ccf81": {"node_ids": ["0d9ff7d7-f52b-44c2-811c-1faeb8ab6022"], "metadata": {"page_label": "109", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "b26f278e-2eff-4f8a-98d6-307d16173817": {"node_ids": ["3bfaa4ff-4bd8-4776-9360-b7c6cca9f8e3"], "metadata": {"page_label": "110", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "64dda5d6-cadf-4a5a-b610-c1d8658f89f8": {"node_ids": ["a71d4a66-1716-4c61-9aed-fa1f24ad1650"], "metadata": {"page_label": "111", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "b5990a93-045d-47ae-9076-c97c67735600": {"node_ids": ["65135e4f-bd2e-4299-af99-d4e5e83f5e46"], "metadata": {"page_label": "112", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "5203220a-1e78-4a62-8384-185b8b76059e": {"node_ids": ["73f660a9-3ea9-4593-bbef-b4020d06402b"], "metadata": {"page_label": "113", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "ba284af0-c255-44d2-a21a-48414107a053": {"node_ids": ["cdc4c8b4-fa1e-4164-85e9-30a44f4360f2"], "metadata": {"page_label": "114", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "bb26a3ad-6012-4a46-b393-7670ad36c17c": {"node_ids": ["6a8115e9-0e95-4ff8-97a6-34c2f9afca5e"], "metadata": {"page_label": "115", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "79555bcc-170e-4cd8-8680-c41f09ffc384": {"node_ids": ["416edb93-e832-4f77-b8d7-f173aa813ab0"], "metadata": {"page_label": "116", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "ff2ba6e2-967c-4349-9acf-37170def2760": {"node_ids": ["4a54e826-5e67-436a-b3cd-83d21f083519"], "metadata": {"page_label": "117", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "dce72285-1a6d-405f-9363-61c1481642cf": {"node_ids": ["b3341a75-5bd1-44b1-9cb6-06a2446c7e4a"], "metadata": {"page_label": "118", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "46c52590-eda5-4ad9-9c63-02ae02ca0e5c": {"node_ids": ["3d15b653-0d02-4edd-8140-2c0f89dd2545"], "metadata": {"page_label": "119", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "03866b3c-fed3-4951-a3a6-b453b2292ca7": {"node_ids": ["ef81490d-7546-4c53-8e9e-f2b89cf8990c"], "metadata": {"page_label": "120", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "018f8ec3-ecec-463c-8bcc-099043b1e3da": {"node_ids": ["d1798e97-1526-4a9a-9181-0a1aca3e0afc"], "metadata": {"page_label": "121", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "dece59b0-ef86-4aba-b0ee-806df11b6c4a": {"node_ids": ["b89c24cf-a910-4fc9-826b-31e4d3b075d9"], "metadata": {"page_label": "122", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "110d7cd3-ec3d-478a-81a2-5d9bbad657c6": {"node_ids": ["39701ce0-7347-4b5e-9169-0a01d8265262"], "metadata": {"page_label": "123", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "b875b66b-ebe6-4834-b41b-776f4cde11cc": {"node_ids": ["1782fe05-ecad-4094-b61f-000af3357b23"], "metadata": {"page_label": "124", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "323d820c-5487-4191-a857-5e3cabf683a6": {"node_ids": ["52410e16-f0e6-433f-b45a-9e9ded790aff"], "metadata": {"page_label": "125", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "f3d04ad5-a570-4c82-8d40-a511f5e14da4": {"node_ids": ["037d6029-d27d-40c1-abaa-6e41d59f2f6f"], "metadata": {"page_label": "126", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "51daf15e-87c3-41c1-a870-bf2e5b91b3a6": {"node_ids": ["8cd5a304-b020-4cba-b2c3-f2fba6c8fca4"], "metadata": {"page_label": "127", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "237049c5-1043-4833-9b44-01e79a7752fc": {"node_ids": ["94b3ba69-735a-4312-8dd1-9ff623bb53da"], "metadata": {"page_label": "128", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "cda1597b-c79b-43ae-970e-c1b1a29d4d36": {"node_ids": ["15640825-f9e0-4e16-8485-b3d9826cb7d0"], "metadata": {"page_label": "129", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "f622e8db-10fb-4d4d-98c1-6557d43577af": {"node_ids": ["16013044-4bed-4ec6-87ff-2be7eeb1a34c"], "metadata": {"page_label": "130", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "58045d84-1527-4bac-8fe3-711e25798563": {"node_ids": ["ac688a83-2f6f-4f06-b07f-db15fe8a0e76"], "metadata": {"page_label": "131", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "33a0e446-dda9-47a5-9b47-89cf3d2c94f4": {"node_ids": ["854a5ca2-7f12-4d0b-9c9f-8d8382bf211a"], "metadata": {"page_label": "132", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "83e8486f-8d4c-430d-8c6f-ff6da7b8563d": {"node_ids": ["827d182b-9cfd-49bf-9343-9f519f9f9135"], "metadata": {"page_label": "133", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "3653e14c-b5ee-426a-9f04-39002a70e11c": {"node_ids": ["adda26c4-0053-4edf-85fb-4ad554d1d0af"], "metadata": {"page_label": "134", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "10d526fc-5f8a-4604-adb5-aa1e81c104ca": {"node_ids": ["9d086e90-f861-4d16-9115-787af7cb2108"], "metadata": {"page_label": "135", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "ea979bfb-9e89-44df-b6e1-53f937d842c2": {"node_ids": ["d91e2f3d-0320-4d3c-b134-c3094c55dbd2"], "metadata": {"page_label": "136", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "da092379-d32d-47c8-b4bc-2ba3ab63e82d": {"node_ids": ["deb356be-ab6b-4a3a-b538-f2a68144bb08"], "metadata": {"page_label": "137", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "91d5cfa1-adac-4387-8445-903880b3051c": {"node_ids": ["206a8b0a-24e9-4f3a-a7af-0d69eaae785b"], "metadata": {"page_label": "138", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "e13bed65-5f39-4857-89f8-247ba90dd928": {"node_ids": ["4cd7a675-a2f3-477b-be82-3c71586ba806"], "metadata": {"page_label": "139", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "5c4722a8-c476-43f5-8c3b-ddb80c2cfc2d": {"node_ids": ["929195e2-e68d-4967-be35-53558fd5dfec"], "metadata": {"page_label": "140", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "d48ff166-d02f-415b-ac6e-559fa0ed419d": {"node_ids": ["54a68963-505c-4275-b78e-885ef370a0b1"], "metadata": {"page_label": "141", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "63421a10-847b-40a2-b6cd-31092977dde9": {"node_ids": ["17d94fe8-b665-43a9-bc8e-ac899c48359f"], "metadata": {"page_label": "142", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "f6d248d3-26f5-4ed4-a746-544bb604011f": {"node_ids": ["3789185f-a3b9-44a7-a1cb-fad2f711f610"], "metadata": {"page_label": "143", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "7e36d3a8-b2ae-4181-9853-88acd5ee33f1": {"node_ids": ["7121ee7c-4b8e-49dd-8d28-ddc5021663ba"], "metadata": {"page_label": "144", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "108accec-6f16-4c53-91fb-0cfd0617a5ad": {"node_ids": ["9dd6a335-551c-4633-bfea-93160e4d2195"], "metadata": {"page_label": "145", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "4115e9de-9d3f-41b8-b0c7-9772417a7937": {"node_ids": ["7afd90c5-1eb1-46a6-b532-13dcbf7195c3"], "metadata": {"page_label": "146", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "4013eb99-2f6c-482c-94cc-201b0d3f0f36": {"node_ids": ["7dc5611b-ea31-4986-a9d8-ed1361d68678"], "metadata": {"page_label": "147", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "d72fa25a-6b1e-42a1-8f95-59609a3bd4c4": {"node_ids": ["a02f93c0-a7b1-483c-ad54-798e96400818"], "metadata": {"page_label": "148", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "1ecfec48-b677-4174-9163-ccf41958f4ad": {"node_ids": ["e55a0074-1a4b-43f1-a841-6a453ac0adf5"], "metadata": {"page_label": "149", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "8bc4c6df-e26a-45e0-b716-f5840bdb0026": {"node_ids": ["2b7e186a-5d93-44cc-9055-a539ccb86eb9"], "metadata": {"page_label": "150", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "4815ddd5-9b2b-4567-b51f-1eb5b2b3b08e": {"node_ids": ["3452765e-3c31-46af-afb2-1533943f21b1"], "metadata": {"page_label": "151", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "517aeb81-f7b2-4d55-9db9-72a0e1392b20": {"node_ids": ["bb54cb4e-0ddf-476f-b01d-ef541dc9f6c4"], "metadata": {"page_label": "152", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "e8281121-c11f-4117-9015-f3d61ed4c34a": {"node_ids": ["83943f79-4a2d-4e99-b991-2cb11ad1b7dc"], "metadata": {"page_label": "153", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "3333d5a7-a7e4-44b1-ba80-7bdeb8211b7c": {"node_ids": ["8f43cf18-51f1-4d42-9cab-35b7c78c2ac7"], "metadata": {"page_label": "154", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "bc591490-7b7b-46cf-969d-1b3055c8bfb4": {"node_ids": ["f0248b87-2f38-4da6-9518-9658c1fece1c"], "metadata": {"page_label": "155", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "01860972-165f-489b-a5c5-061120985f6a": {"node_ids": ["e23baac9-e0b9-479f-a549-2c482fb42a5d"], "metadata": {"page_label": "156", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "d1932d26-3812-448b-b37b-df2e8a170b45": {"node_ids": ["9964b2db-fbcd-4e63-99fc-6dc383aba127"], "metadata": {"page_label": "157", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "d8f9d5e6-4351-4398-8adf-6d900e3fd7fa": {"node_ids": ["031bd496-482c-4c8d-9c03-8245724b3b38"], "metadata": {"page_label": "158", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "bc32748e-2f0d-4cf3-b872-75e69914d3e8": {"node_ids": ["1bf12394-a6ac-485e-bba1-c28485c3cfe7"], "metadata": {"page_label": "159", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "5301b215-b001-4462-b1fe-183af2f4de3a": {"node_ids": ["def4abdc-c96a-4f94-bee0-90a87266ba0a"], "metadata": {"page_label": "160", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "2041ffc7-aac5-4e33-aa45-7753982a9d51": {"node_ids": ["98903f6a-e1d1-4b37-9600-65567b3eb89c"], "metadata": {"page_label": "161", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "9afcf528-384f-4b17-b5d1-6cffe6ea6bd3": {"node_ids": ["1f0b548e-a02d-41d0-89a9-bd9d7f3fd682"], "metadata": {"page_label": "162", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "b3fc1138-a7de-41d7-944c-9479ed2a766e": {"node_ids": ["a40a2f1e-21fc-43b1-9040-7754a2f3b131"], "metadata": {"page_label": "163", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "19a3cddd-b69d-4224-8dc3-77d5419f97cb": {"node_ids": ["aa3abb29-990b-48e2-9669-17472934c93d"], "metadata": {"page_label": "164", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "5af4028c-2f07-4ddc-ad0e-429067d7c9b9": {"node_ids": ["0b157baf-77b4-43a0-9dba-265884c852a4"], "metadata": {"page_label": "165", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "eef4b660-1bcd-415b-86ff-197d2ae1142f": {"node_ids": ["ed9aad23-364b-426b-8d55-8c0561cd18e7"], "metadata": {"page_label": "166", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "65cada6b-6362-4e3b-83b1-861a4eefe461": {"node_ids": ["aa0b7764-3808-47c1-89ba-20ef6d5acff8"], "metadata": {"page_label": "167", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "c559472b-2e87-428d-bc3e-7597c4454608": {"node_ids": ["a37745a2-28cd-46fa-b911-153710c31682"], "metadata": {"page_label": "168", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "6497b4f4-e01b-4ae6-9da0-134b510b77a5": {"node_ids": ["9e7d944f-8da7-48a4-b6ec-e84c1a236c60"], "metadata": {"page_label": "169", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "9813f3e9-cb06-4934-947d-d87edda5122f": {"node_ids": ["5083d0ef-e310-42a0-b0d9-561518b3eaf7"], "metadata": {"page_label": "170", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "3ddf4d6c-e3fb-4fba-8c30-3fe894a68d2b": {"node_ids": ["5aaac651-9c2c-4597-b187-872628595745"], "metadata": {"page_label": "171", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "dcf177a1-50e4-4102-add4-50c616ac2c99": {"node_ids": ["8f4e13a5-025b-4fce-b50a-2d388e0eabf2"], "metadata": {"page_label": "172", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "b8e96488-bb9f-4877-90b2-1acae4c81228": {"node_ids": ["ce978c82-ff62-42e7-a210-848313406b86"], "metadata": {"page_label": "173", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "10729b2b-a139-430e-998a-80635752c27e": {"node_ids": ["a9a9da3c-a213-4a4e-ba11-a29801257c7b"], "metadata": {"page_label": "174", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "0d3f265c-0c64-4d8d-8400-4795d86fca9b": {"node_ids": ["efd01070-d37d-47a1-931f-c8e8a77e5692"], "metadata": {"page_label": "175", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "ae7d2d18-26f7-4185-99d1-09a2ef51a338": {"node_ids": ["4db3f962-b80c-4a70-bcc4-accef7c5de4f"], "metadata": {"page_label": "176", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "19cc4910-a4a8-440a-a755-239d81760fd1": {"node_ids": ["2ca616ce-ffac-4351-9015-59e8f3f8980b"], "metadata": {"page_label": "177", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "d2345f86-05c0-400f-82d9-fa39af657042": {"node_ids": ["1a5cba9d-4077-463c-ae88-f226f63cc4c1"], "metadata": {"page_label": "178", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "a9ed3e69-0b6e-4e6e-88d7-299f022888e1": {"node_ids": ["fe54b985-75e2-4908-a635-ef36258fe453"], "metadata": {"page_label": "179", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "c1d54729-4153-4549-b2b9-8eb18b3f02b9": {"node_ids": ["63793ccb-a9db-4760-8c20-dd25af0afb13"], "metadata": {"page_label": "180", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "9458737c-0f0e-469d-bcea-2798109337eb": {"node_ids": ["d5787a04-728c-46f0-b221-fd36c2131a9a"], "metadata": {"page_label": "181", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "9e1b1421-1975-4f26-b926-23ade368dda2": {"node_ids": ["7279d589-4bfc-4ce1-b7f5-8d6be7026370"], "metadata": {"page_label": "182", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "4b56867f-bf3b-4c7d-8bbe-20a19fe43243": {"node_ids": ["eba5058b-1d87-430f-8d0c-dd88b9f71f1e"], "metadata": {"page_label": "183", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "da9d5d86-48b0-49a2-88fd-70a53be8d565": {"node_ids": ["0f58556b-2f25-4cc0-b0a7-62072016738c"], "metadata": {"page_label": "184", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "26910b55-aa06-4da6-b829-a77fd035d517": {"node_ids": ["ec9ed378-df60-4b70-baa1-4f0e586b2662"], "metadata": {"page_label": "185", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "a142d709-6fdc-444e-94c0-f2213e0f59f6": {"node_ids": ["249cb330-3f72-432e-bce7-5bdd2e59a2bd"], "metadata": {"page_label": "186", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "16646532-c8ef-4726-a9d6-4f9155c08986": {"node_ids": ["835f3bb8-087a-43c2-8981-767a444eb25d"], "metadata": {"page_label": "187", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "c48001d3-1653-405f-a21f-3b93fc025d96": {"node_ids": ["68111e1b-f77b-4ba6-b461-0ee2ff5215e5"], "metadata": {"page_label": "188", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "159e1f98-9ea7-49da-801b-4ae5028ce89f": {"node_ids": ["d3a440c5-3af9-4c1a-8831-08274f04c25c"], "metadata": {"page_label": "189", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "6881ea90-7077-4357-a901-df4361968cc2": {"node_ids": ["7c135e93-c602-4db3-99fd-438a65a71a83"], "metadata": {"page_label": "190", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "2435f0f8-f5f0-442b-b1c2-8da18b5b33dd": {"node_ids": ["108c682a-73b8-4468-b458-79213beae740"], "metadata": {"page_label": "191", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "d37d7220-a050-48e2-816f-5fa7aa46f342": {"node_ids": ["ded54989-e7d9-456f-adeb-ce9b082e2115"], "metadata": {"page_label": "192", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "15782b06-5ff9-4a48-952e-0addcbd1b912": {"node_ids": ["27407ba2-109a-4d98-aa9a-7140a8fd9c0d"], "metadata": {"page_label": "193", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "8168d032-fdd7-4b99-a39b-ffa2afe2a5bb": {"node_ids": ["f2228ea2-912b-443b-87ae-16d703a114d6"], "metadata": {"page_label": "194", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "43597e43-cfe8-4e5e-b2ea-5baa95b2a0f7": {"node_ids": ["80f9d850-8ec0-46b5-b4ad-8df23f5f8133"], "metadata": {"page_label": "195", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "93b9c1c5-b1d9-480d-bddf-4831a93cd2a7": {"node_ids": ["5ac98ee6-84e7-4ac2-ba82-3d42a07efb62"], "metadata": {"page_label": "196", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "3986fde8-d903-4a14-8056-cfe33e452cba": {"node_ids": ["cd97d70f-8002-49db-a2db-8e0687d46e7a"], "metadata": {"page_label": "197", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "abb25073-cd6b-4285-b4c6-669c9a2ee06b": {"node_ids": ["72618787-33d6-4c8a-8201-98ef58e77c1c"], "metadata": {"page_label": "198", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "f91eed8a-fdf9-4df0-a1b4-8ca4f602780a": {"node_ids": ["8ad1ccc3-af7b-41f7-9ff8-76b184ac0162"], "metadata": {"page_label": "199", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "ad3ceefa-1a91-40f6-9834-cebc42547b76": {"node_ids": ["f0c430a1-ffe3-4edc-91e9-82f46cacadc6"], "metadata": {"page_label": "200", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "9369680e-5f35-488a-9d0f-8346c054c7aa": {"node_ids": ["6079ff8b-dfff-4bce-91d8-f6a76f6c5deb"], "metadata": {"page_label": "201", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "3f9ca530-b9c6-41b8-b347-0a9394467fbc": {"node_ids": ["4d02f1aa-16f7-4910-9131-66ed773a772d"], "metadata": {"page_label": "202", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "758e5edd-187c-415d-9408-078cb2349960": {"node_ids": ["321705b9-7014-4628-b0b0-d31d79f57078"], "metadata": {"page_label": "203", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "8b8092dd-b6c3-4ac2-a878-fba5b499fd1d": {"node_ids": ["3053d496-c607-4fe2-94e8-08fd6f736ce1"], "metadata": {"page_label": "204", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "c7a11c9c-9f8c-421c-a080-55ce33d33d25": {"node_ids": ["e6ad0444-ea8a-4da5-8941-a3362ae09818"], "metadata": {"page_label": "205", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "889cd5dc-9090-4e65-b17d-9c5ac8c95733": {"node_ids": ["61bf6468-b8d4-43eb-b0d7-6f45b523b6d7"], "metadata": {"page_label": "206", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "370785f7-98b7-4135-8c1c-c0a7b6b08831": {"node_ids": ["2d65353c-b922-4c43-a418-fb640bb3ec21"], "metadata": {"page_label": "207", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "2f76dde9-f6f2-4fc9-a1fb-d7eda5976711": {"node_ids": ["27ffe949-4c47-4137-8c4d-7d8c33c8bdf4"], "metadata": {"page_label": "208", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "f2a293eb-782a-4c23-adb8-bdaa1fc239e2": {"node_ids": ["331f30b8-a679-4340-9271-864f45dcdda6"], "metadata": {"page_label": "209", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "55d7d7a5-df40-4b07-82f1-bea72fde5715": {"node_ids": ["85e848a9-7da3-440a-abe9-458a4c7682d8"], "metadata": {"page_label": "210", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "ed8a4230-ea99-4466-a53f-cc58706ccf72": {"node_ids": ["5cf21112-e887-4568-8030-0858b007ce30"], "metadata": {"page_label": "211", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "1d341cfd-fcf9-406e-af1f-fc04de798b59": {"node_ids": ["e91f7031-6ee6-41bf-af29-0d966671b43a"], "metadata": {"page_label": "212", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "2b42418c-01ff-4b46-aef9-166ea7e7d5c3": {"node_ids": ["567253c2-1975-4ee0-8fcb-82a6cae8f112"], "metadata": {"page_label": "213", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "a7a94fea-ef59-4a13-95e4-c04e7c6e2076": {"node_ids": ["66aea261-9950-42d0-ab48-095e355e5184"], "metadata": {"page_label": "214", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "04daa350-43f6-4096-b2b8-84737a0322e7": {"node_ids": ["998a32cd-1cb1-485b-9216-682e31a8acf1"], "metadata": {"page_label": "215", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "025b35af-060b-4805-ae71-7307b2f611ac": {"node_ids": ["8e6be289-721d-4da3-90c7-6a0d21979d37"], "metadata": {"page_label": "216", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "6b26081e-3f1c-4b0d-b17c-5bcfc05ea427": {"node_ids": ["ad0007b1-97a1-48a4-841b-85fb92bfae5f"], "metadata": {"page_label": "217", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "34e16a2e-e2b0-4af1-ab79-ffcf138a3011": {"node_ids": ["57fe7e36-8fa3-41de-b860-6aa16035e370"], "metadata": {"page_label": "218", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "7b9337fc-3ebc-4659-9456-630f5e050f8d": {"node_ids": ["f5a3951c-d70d-44b6-b1c7-227d77e113c6"], "metadata": {"page_label": "219", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "bb45a8c0-1ae8-4ffb-8b03-52c6d539e5a8": {"node_ids": ["77a05354-927b-43d1-bae5-8eb4e85e7d2e"], "metadata": {"page_label": "220", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "dadc8972-4a78-4eab-a29c-dcfe03395c79": {"node_ids": ["13d1cc46-c947-4c38-aa07-056a39e651a8"], "metadata": {"page_label": "221", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "d5db09f8-3b98-4834-982f-e6e8b65acfbb": {"node_ids": ["b03da278-5577-4ede-ac0a-14db75846ea0"], "metadata": {"page_label": "222", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "84d77eb5-683c-4857-b34b-c184f2f8c4c3": {"node_ids": ["b40a9cbb-2d9d-4faa-b7f2-022306004e9c"], "metadata": {"page_label": "223", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "56a6db1e-9c32-4d6b-af81-310b55a26aae": {"node_ids": ["d623090a-56ac-408d-a5b5-c0905b4142b2"], "metadata": {"page_label": "224", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "c4d55d9b-0b56-4766-ac1f-959856f3e1ae": {"node_ids": ["420e9713-7ce7-4e3a-b8c2-06815b657d26"], "metadata": {"page_label": "225", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "ef4b1ce3-8b25-47bd-973f-ec0145ff078f": {"node_ids": ["86d84a26-9d33-4cd5-b1ef-27043c2ff185"], "metadata": {"page_label": "226", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "5e02453c-5bdd-49ef-b999-783ee23e976f": {"node_ids": ["4f58e685-1bd5-4078-90bf-e50349e1d038"], "metadata": {"page_label": "227", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "81f74d8c-edce-4444-b5fa-17ef4bacc9e7": {"node_ids": ["532b0dea-9c45-481e-8450-cf19df965d2a"], "metadata": {"page_label": "228", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "7f8732ba-f0d8-44b3-b267-2ebf834b5173": {"node_ids": ["bcb5f70a-2368-422c-b5a8-c384976175e9"], "metadata": {"page_label": "229", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "f0d1a831-b5c0-4790-bbf5-0af750aff8f9": {"node_ids": ["44b4deaa-6828-49d4-a738-8692d884d71d"], "metadata": {"page_label": "230", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "8b9fea36-38fe-4b72-908c-43ecfd8e5939": {"node_ids": ["b9728bf8-e487-4a3f-b579-629daab85a31"], "metadata": {"page_label": "231", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "bb262049-039a-4759-a52c-85ad39e9bf45": {"node_ids": ["25ab635e-ac75-435f-b3d5-e7f53be5f7d4"], "metadata": {"page_label": "232", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "eeeba120-aa3a-4c63-806a-33a2f08d6794": {"node_ids": ["b38e36e4-3af5-410c-b7d1-84f1ec242269"], "metadata": {"page_label": "233", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "170995b1-f029-4565-8de0-05e5b9c6ac00": {"node_ids": ["f9fefa79-2ca1-407c-9359-120b8f8f1322"], "metadata": {"page_label": "234", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "a79977bc-b150-4958-be80-78950ced4b59": {"node_ids": ["c38f149a-2812-4f48-94fa-e0bde46f6908"], "metadata": {"page_label": "235", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "ccb32679-d893-4cc9-b5ec-033554de4b70": {"node_ids": ["720a7da9-6076-4db8-8ea6-deb1ef715523"], "metadata": {"page_label": "236", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "867a46cd-14e1-4363-91fc-d70614f8eb2a": {"node_ids": ["951a4fd0-f5ea-43b7-b1ca-d05ae176342d"], "metadata": {"page_label": "237", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "87169bae-a25d-4717-a9be-dbe35e25c8a3": {"node_ids": ["cc6385de-97bd-4cb0-942f-7499c95e7dad"], "metadata": {"page_label": "238", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "d6f21654-3c29-4f42-8415-1d16289fd63d": {"node_ids": ["936e1c85-2c3e-497f-acff-0bb1853cf994"], "metadata": {"page_label": "239", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "1fce4eea-82bd-4a92-9934-0a77b61133a5": {"node_ids": ["b920ae24-cf4b-415a-a802-322e337b6429"], "metadata": {"page_label": "240", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "454ad110-dcb4-4211-9fc3-a8557ceaed01": {"node_ids": ["4b8516a5-5c4e-47f1-a208-bf6603cf38f0"], "metadata": {"page_label": "241", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "351aa71f-bdd1-4452-b692-f1c7e0b67a00": {"node_ids": ["76397a0b-8032-48f9-b022-5c4af1a96670"], "metadata": {"page_label": "242", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "10a55ca1-b5c7-4b19-b96a-c70e29826cf4": {"node_ids": ["42d5a687-df79-418d-81a5-8a23a3867182"], "metadata": {"page_label": "243", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "90784f8a-b074-4135-9ac9-29da240c9f3b": {"node_ids": ["a7024aa7-9410-4ee6-b820-10645ff20815"], "metadata": {"page_label": "244", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "b355de7d-aefd-467a-9aea-7109ee1624d3": {"node_ids": ["3d78fc5c-a36c-40e3-a6d4-b6231d6d6942"], "metadata": {"page_label": "245", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "270c9221-8ba3-409b-b4c0-5fbcd1abd59c": {"node_ids": ["5b240d69-0f5a-4bec-b3ed-e1315ccf9586"], "metadata": {"page_label": "246", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "642cd54d-9ac8-4260-8e6a-e4e67a5a45c1": {"node_ids": ["bbc83638-a25a-489a-a240-bd117513e90b"], "metadata": {"page_label": "247", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "fee739f0-25b2-41a9-bb08-c3e0d61d92a6": {"node_ids": ["ff75d4f2-74fe-42e8-b665-893fdfbe4670"], "metadata": {"page_label": "248", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "5a55874c-63ee-4b63-a0cb-ada5a1ac4428": {"node_ids": ["0bb07de6-a81e-4ed1-ab7d-985c1b23a0aa"], "metadata": {"page_label": "249", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "9e05084a-48f5-4b8f-86c6-7a611894a8e8": {"node_ids": ["49d28b2e-0821-441f-9486-99e7e7082fc6"], "metadata": {"page_label": "250", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "2308e06f-0282-43a0-86ea-72c45cc04c45": {"node_ids": ["bc13754c-61b9-493f-b96a-dc838a29f894"], "metadata": {"page_label": "251", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "294f5bab-f416-4e7d-b314-be0ff1e042e6": {"node_ids": ["6951bdca-2746-4e02-9876-d50b0b960190"], "metadata": {"page_label": "252", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "5efe42d4-9337-4c4e-a794-20c759bf8204": {"node_ids": ["77a32342-501c-419b-a75e-cfc60cac1384"], "metadata": {"page_label": "253", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "2eb7fd83-07ad-4e7e-98c6-6d9cc2930630": {"node_ids": ["69e16a5f-25cb-4de5-bad8-c6f55edce4f9"], "metadata": {"page_label": "254", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "540a7c8c-3359-45a3-ba93-d62ab6670116": {"node_ids": ["37cbd83d-ef88-44cb-a0b9-31f06924031e"], "metadata": {"page_label": "255", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "6f8ed505-4a7c-47a3-b447-5e3848b8e830": {"node_ids": ["f4efa6f3-b105-4004-94d8-648a9fc67e86"], "metadata": {"page_label": "256", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "d04a66d6-b7e9-470b-bfe3-a0004e269f4b": {"node_ids": ["c1858b87-da6d-4ff9-b6ee-76bf2b258528"], "metadata": {"page_label": "257", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "a26a072a-e716-4be4-ada9-161492540f98": {"node_ids": ["6c8087b3-e61a-4408-a8cd-060eb0ad0681"], "metadata": {"page_label": "258", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "40764a95-80c7-4e80-b313-df2ae0f1f01d": {"node_ids": ["8daa420a-f48b-4ecd-9c60-451bdbdf4aec"], "metadata": {"page_label": "259", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "2ad09026-2543-4b73-abb0-6f0345c5a3f0": {"node_ids": ["dce03b6a-5735-4761-b726-94af4216cf76"], "metadata": {"page_label": "260", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "843855e2-700a-4c20-9eba-c68410037e6c": {"node_ids": ["abc8eb1f-5fb4-4809-9b0d-17825d30894f"], "metadata": {"page_label": "261", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "993aeedb-94e7-4792-8b1f-ca64fe71b5af": {"node_ids": ["d0cce357-f836-4093-a37c-a9fcd518f649"], "metadata": {"page_label": "262", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "e600a8c5-57f8-4c3b-833d-a3f7164c8bf5": {"node_ids": ["53b83fa1-fe8e-417b-a529-fe4748d907c9"], "metadata": {"page_label": "263", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "6aefcbde-b3d0-44c2-a3c2-02c8b4d8d91c": {"node_ids": ["480c8fca-316e-4c46-bf8b-5e3f5e717c22"], "metadata": {"page_label": "264", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "951b1218-579c-4be5-981e-272b7bad7db7": {"node_ids": ["1bbeb388-01ad-44f3-acf2-369747198c45"], "metadata": {"page_label": "265", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "59c3732a-95df-4169-acaf-c59fad353b37": {"node_ids": ["c08aaabf-4abd-466a-b7e6-b5f1bfc2124e"], "metadata": {"page_label": "266", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "343cd142-4f29-4a92-b05a-91f5913820ce": {"node_ids": ["f93042bd-2c4a-43e9-bf51-9f62b87dd0ff"], "metadata": {"page_label": "267", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "0d04d272-9099-4ffd-a076-30ca8ddd3cda": {"node_ids": ["d985c5fb-43fd-4713-9070-a8f2aeeb79aa"], "metadata": {"page_label": "268", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "c3d1d5f6-03c0-473c-928e-58d74ec0d193": {"node_ids": ["c48c0f0d-c7b7-4ba6-90cf-0414ec759279"], "metadata": {"page_label": "269", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "7d6b4382-e6b3-423e-b614-058f39db9754": {"node_ids": ["de43675a-513c-4e3f-a2ea-be377273e083"], "metadata": {"page_label": "270", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "0813ba98-e715-43a1-87d3-12dc99996a6a": {"node_ids": ["5d76cf17-c4eb-4919-ac56-bb0e21a5fe08"], "metadata": {"page_label": "271", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "c17cba82-fdcf-42cc-bd32-28973fec44ab": {"node_ids": ["722f3815-30a2-4d43-86d2-70f929a3af29"], "metadata": {"page_label": "272", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "a4e80fbf-a641-4394-b76c-5baaa3567f9e": {"node_ids": ["941def26-af38-4503-875d-d1b1c739d2a6"], "metadata": {"page_label": "273", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "4afcd299-6eea-48de-b3db-0747e4248ee4": {"node_ids": ["48c7b9d6-112f-433d-8fe4-f7f25c13711b"], "metadata": {"page_label": "274", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "df0dc31f-34a3-44ed-a28d-dd1308b86de7": {"node_ids": ["4011f973-40c9-4fc3-92d7-331650cb0f1b"], "metadata": {"page_label": "275", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "3c916744-f3c3-470a-870f-29129777ced4": {"node_ids": ["cda301fa-a34c-4631-a998-960d9ae503fb"], "metadata": {"page_label": "276", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "9d16f2b0-8037-4ada-8b47-38900155cd86": {"node_ids": ["2831ce2a-05c2-4e3e-aa10-f9b656ab5abe"], "metadata": {"page_label": "277", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "16207582-c809-4102-9dea-820fb6055a2f": {"node_ids": ["5c8975fc-4bb7-4837-bbeb-9d95fbaa2451"], "metadata": {"page_label": "278", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "16d3cd0c-56d0-4784-96fc-5312d8e81934": {"node_ids": ["6eddefbe-aa5e-476b-8d6c-d203c24ae1cb"], "metadata": {"page_label": "279", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "0ae92e79-39c0-458e-b53b-0853a70456ec": {"node_ids": ["b6345458-1e34-4f60-861c-6d1dee6c01eb"], "metadata": {"page_label": "280", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "f41310d6-7946-4155-a0bf-976309109cf0": {"node_ids": ["4d2362ad-1d81-4962-8cde-abd8020d0733"], "metadata": {"page_label": "281", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "33446fa5-defd-4156-9121-b09e5250fc3d": {"node_ids": ["69003810-39d4-4ab9-adc2-737825ddccd2"], "metadata": {"page_label": "282", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "a00087eb-6758-4019-b62e-5f306a4ac6bd": {"node_ids": ["9ed78069-36e8-4c70-8653-f66d81102966"], "metadata": {"page_label": "283", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "c560e609-4c8b-4ff9-9b91-c0c7fdc003fe": {"node_ids": ["2607b256-6a7b-44e7-b656-300c94633cf4"], "metadata": {"page_label": "284", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "89e35911-5734-4e84-a756-47c137f0e6c6": {"node_ids": ["9271593a-3c48-458f-aa97-557f66be2325"], "metadata": {"page_label": "285", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "44f49278-3598-40d6-ba46-8a68a34ffbd7": {"node_ids": ["51243320-c090-455c-8df9-a00ac2b2f3ee"], "metadata": {"page_label": "286", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "4d4c0c77-bf81-44f4-bf3e-5cbb656360a9": {"node_ids": ["49211604-c82c-475a-9707-792a6d36e36d"], "metadata": {"page_label": "287", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "10ccc054-1a10-427a-8018-5e762ce0abaa": {"node_ids": ["fdece64e-9947-442f-bdf7-0ac71abd0e72"], "metadata": {"page_label": "288", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "34bb6a88-b7be-43aa-88ec-0a2d59832487": {"node_ids": ["a1cf2b02-c148-48b0-97bb-2696f8be61ab"], "metadata": {"page_label": "289", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "1512e8d2-7b8f-4d72-8cb6-4de1b6471276": {"node_ids": ["90ccb634-9b7c-47a5-afd2-ba8cb27bb42f"], "metadata": {"page_label": "290", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "4cc44e54-30e5-4414-be87-dc3dad1e7f04": {"node_ids": ["c9ebae01-ac67-4dbc-81d4-af5b63502aec"], "metadata": {"page_label": "291", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "94fa673c-c35a-4c4b-8f0c-d438fc2a2ba0": {"node_ids": ["10177115-ef35-4bd5-a545-8ae0ba1379c6"], "metadata": {"page_label": "292", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "8baa1f8b-715a-4b8f-94a8-05c9587abe44": {"node_ids": ["26d21766-c1b6-4b86-bf56-e04eb1712bc5"], "metadata": {"page_label": "293", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "1d75198f-372c-4b0e-8cc6-2cf9088c675a": {"node_ids": ["33e96c0e-f8fb-4067-92b5-ee77cd7c53a4"], "metadata": {"page_label": "294", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "b6712f88-c3d8-45d7-ab1e-d836c23ac4c4": {"node_ids": ["0fdeaf95-5a43-41d0-ba67-832c127578f4"], "metadata": {"page_label": "295", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "1394664c-11d0-46b1-9a5a-a2edf0d93051": {"node_ids": ["ee72daf3-5277-48c1-bc86-bd136139f504"], "metadata": {"page_label": "296", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "11b8c5d0-58c7-4100-99f8-600acfb8e955": {"node_ids": ["953064b0-7768-4f8a-9ecb-ed83d0024ba9"], "metadata": {"page_label": "297", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "26071537-5165-4d2b-bc60-b09088365ecc": {"node_ids": ["2e4d8eb4-d9eb-47f7-a9d8-f918b0d0f044"], "metadata": {"page_label": "298", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "24de856e-631a-428b-9398-e7a5cc725bc1": {"node_ids": ["7aabe7c5-12c5-4659-beaf-e3169f7c4a66"], "metadata": {"page_label": "299", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "82c78b69-9b2e-45ba-9d0e-da5e42592138": {"node_ids": ["f5827238-94af-43e6-915b-912fde09b870"], "metadata": {"page_label": "300", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "c0e6c853-a4f2-4fbb-8fea-7c38ac6788ba": {"node_ids": ["fbb92792-9372-42f6-bef0-3a31ac3ba565"], "metadata": {"page_label": "301", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "0159e441-da03-44a3-a510-08985a659182": {"node_ids": ["9d11723a-6c79-4bdf-88fe-e1d73b32d904"], "metadata": {"page_label": "302", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "717e5f72-53a7-408d-a3ae-fc5b674b3c5a": {"node_ids": ["448a37a5-e551-42ad-97f6-661564978a73"], "metadata": {"page_label": "303", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "30307e36-2c2c-4ea4-9cd1-6184fbb00acf": {"node_ids": ["feb466da-7d75-4350-b39b-79c5aee0c9c7"], "metadata": {"page_label": "304", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "775e96f5-0592-46c7-a0c3-795e928ecfcc": {"node_ids": ["5aae2267-789e-4657-bd74-fb13797d96bf"], "metadata": {"page_label": "305", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "6d4097c7-b1fc-43c7-af49-89d817af2bc7": {"node_ids": ["17939725-6432-44b4-af69-018a8733eda3"], "metadata": {"page_label": "306", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "3c0d953e-7217-4326-9c0c-d2fab55efbda": {"node_ids": ["2edf6bc5-284f-484f-8141-6f88b8c052ba"], "metadata": {"page_label": "307", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "0eb644d8-d73b-4d17-8822-d28b151ed9b0": {"node_ids": ["4e2aa77a-84f7-464e-9b99-1d471571828a"], "metadata": {"page_label": "308", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "be019133-cb45-4b6e-8da0-fa5b37d79dcb": {"node_ids": ["bc9696ac-fc0b-4f11-b64a-997232c041f5"], "metadata": {"page_label": "309", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "4eade037-4592-4204-9191-cd2996007fdb": {"node_ids": ["accf81fc-3eee-403b-952a-13328b973e52"], "metadata": {"page_label": "310", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "9958a76d-45b9-44c5-a5df-8c17aee15ffe": {"node_ids": ["ed2e1b16-e1bc-4747-a0fc-20301e3c3f4a"], "metadata": {"page_label": "311", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "9c44ee0b-903f-414e-afed-b996eafdb5ad": {"node_ids": ["bd4181f8-0300-4b2e-bae6-e5caf1967de1"], "metadata": {"page_label": "312", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "5dfcdcf2-40e9-4d6f-8c2a-c07f8c3c72c4": {"node_ids": ["26a8b1d6-533e-4be7-9c9f-0ec99e730828"], "metadata": {"page_label": "313", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "e3a68f3c-8dfc-4868-b72c-5f66d7695afd": {"node_ids": ["f4a973a8-1aae-4725-9a76-1f389726c80e"], "metadata": {"page_label": "314", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "ed176568-a807-4b1f-a151-d3c73299a01a": {"node_ids": ["3f991e64-d8c8-41cd-8573-c3372afeae7f"], "metadata": {"page_label": "315", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "9218787c-fb29-47e4-bec9-45e305275191": {"node_ids": ["d1ac9c80-c1e6-4bb5-a36e-20a63c7079e1"], "metadata": {"page_label": "316", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "15bd502c-ab68-45ec-ad6f-65ab5106d56c": {"node_ids": ["3f28fc44-8ba8-4f9c-a0f2-edde1be5c16e"], "metadata": {"page_label": "317", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "2630c9e4-f8e4-4a93-9b7a-03f4e04b73c2": {"node_ids": ["daea46d6-01a5-4686-ae91-6b3cfc463733"], "metadata": {"page_label": "318", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "e7736e3f-cb0b-44f9-b775-8f59f9173e5c": {"node_ids": ["de80cacb-1bcf-4349-acdf-98b741db0066"], "metadata": {"page_label": "319", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "e88052ab-082e-4d00-9c2c-1cd130aeeaf7": {"node_ids": ["c5acc1c9-6094-4aa5-a355-87a51e6563dc"], "metadata": {"page_label": "320", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "393c1ba6-92d2-46d1-86d2-1bd3178fcf85": {"node_ids": ["c334fe97-50b8-40c8-9123-fddeb97a2bfe"], "metadata": {"page_label": "321", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "292715b5-8b0d-4b77-9470-65776f1104e3": {"node_ids": ["5bad450f-d63e-4af0-a8ae-b1e21596634f"], "metadata": {"page_label": "322", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "bacd6d88-3582-4e1f-9093-d142274fbe41": {"node_ids": ["723166fa-3be5-4ff2-be1b-dbedcc7d2c53"], "metadata": {"page_label": "323", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "9240973c-ad34-4e57-91a9-49db4196d176": {"node_ids": ["ece17e58-86b8-4aa4-9daa-b0cb1711d693"], "metadata": {"page_label": "324", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "8e9f712b-059a-4146-a231-29bbf41a4f00": {"node_ids": ["957de0d6-9e96-4f29-bc9e-a8bfa8139df4"], "metadata": {"page_label": "325", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "68899b06-97fe-4c22-9f44-482b8eea1e51": {"node_ids": ["0f1c85f2-63b4-46ca-a3a1-5b9a72cfd8a1"], "metadata": {"page_label": "326", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "dba355d1-c99f-4f48-a736-eef544e03545": {"node_ids": ["597db7ad-3034-43fe-b038-2cf518c87645"], "metadata": {"page_label": "327", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "f9a90a67-302e-4f6a-bd7f-ab320dedb9f5": {"node_ids": ["5f70cb97-368f-4373-8420-c69ed32ce5c4"], "metadata": {"page_label": "328", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "b90dd89d-678a-4d3f-970a-2aa19f1b092c": {"node_ids": ["a3ac708f-b072-412c-93f3-9c8102818279"], "metadata": {"page_label": "329", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "bc175609-d4a4-41aa-9484-06e8641a3da3": {"node_ids": ["c326b73a-88c3-46eb-8828-02dcf50b4e4d"], "metadata": {"page_label": "330", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "d829e738-f39d-4553-b87f-df0413bbffb1": {"node_ids": ["d6747a6a-f760-450a-9384-1fe29650acf2"], "metadata": {"page_label": "331", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "7fa4371f-2b40-403e-b039-85dde34a5837": {"node_ids": ["0d765a74-8920-415e-91cf-61a0e76a8edf"], "metadata": {"page_label": "332", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "e5de85e4-b1fd-4309-b277-1f0d2a7b5adb": {"node_ids": ["1e89acc8-f392-4418-ad81-8f3810dfd91d"], "metadata": {"page_label": "333", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "0d492ade-6404-4674-afc0-4160e6fc7e0c": {"node_ids": ["9ff0e6c3-ec54-489c-ad32-be8fa1325734"], "metadata": {"page_label": "334", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "ad516506-5eee-40f7-abf1-96c02c264181": {"node_ids": ["11263a86-3cc4-43ad-b9f6-b8153692ba2a"], "metadata": {"page_label": "335", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "60bc2e17-b710-420e-b7a5-3fd3ed68b966": {"node_ids": ["4746b9d4-dc81-4e0e-843e-d288ff41348c"], "metadata": {"page_label": "336", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "726445d1-879e-4677-a365-f20187a11ea9": {"node_ids": ["d1c3a35d-ae14-4922-aa1b-7980e76c40f5"], "metadata": {"page_label": "337", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "89f2efdd-e8d2-408a-b9e3-c372094b90c1": {"node_ids": ["aae84ef8-545c-469d-a456-d53c9e434f29"], "metadata": {"page_label": "338", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "1eb8faa1-39cb-4078-9e78-116e63b6abac": {"node_ids": ["28ecb96e-1821-4aa4-b9aa-e35ecd312f76"], "metadata": {"page_label": "339", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "7a9c110e-30c5-46ca-a75d-9ce90e923bea": {"node_ids": ["0cee2b18-62a8-47d7-b312-7a367b1b5bab"], "metadata": {"page_label": "340", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "61abcff5-00b3-47bd-b611-d19531c351af": {"node_ids": ["73831f2e-de8a-4933-b8b8-e422f3d17069"], "metadata": {"page_label": "341", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "ef7d1853-bf95-4bd5-b443-c41ad5ac2531": {"node_ids": ["1073ff4c-b7ee-4e39-9145-8d31d8ba1dd0"], "metadata": {"page_label": "342", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "0f72a4d2-a252-4cb9-b7d7-32153b3554cd": {"node_ids": ["3032f990-3c98-4376-94c4-fa895f49abef"], "metadata": {"page_label": "343", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "91c6c0b4-c0d9-48f9-a727-b66345b78cc2": {"node_ids": ["dcc1e3c2-bb31-483b-90f0-56a280ff46d5"], "metadata": {"page_label": "344", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "fa37bda2-f6a5-4996-a99f-6a3a2109009d": {"node_ids": ["566a08c9-8d38-4895-8f38-03de70882c35"], "metadata": {"page_label": "345", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "1b7dbc2b-26cd-4cbf-bc1c-5ace4d71e6d3": {"node_ids": ["7f4c852d-3793-4495-8840-a27a1df1e6f1"], "metadata": {"page_label": "346", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "dbb3076a-1d3d-4627-9d2b-84d9a78ef5dd": {"node_ids": ["e01499fd-4376-4d72-834f-53855bbbf403"], "metadata": {"page_label": "347", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "57f1a7b8-d174-470e-ac9c-d966627835f2": {"node_ids": ["5af44d8e-0fc9-4021-bfeb-0becdf31dc67"], "metadata": {"page_label": "348", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "f8aea7c8-cf21-4609-b220-0fa58b4ded2d": {"node_ids": ["246fe17b-b690-40db-9554-2b51a6b0be0a"], "metadata": {"page_label": "349", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "72971b7d-cf58-4874-bf99-c709bc6365b0": {"node_ids": ["83c56ff5-55c0-4c47-99cd-6287b5edc21a"], "metadata": {"page_label": "350", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "03a016bb-2874-494e-b961-cedccdb46160": {"node_ids": ["4ecd6c14-c628-4b7c-8900-2fab1b272d7f"], "metadata": {"page_label": "351", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "efb04f9a-f016-45e6-a329-4a53d332a417": {"node_ids": ["c15129fb-3237-46fc-aae2-0604c0954f35"], "metadata": {"page_label": "352", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "27229a91-2e58-4518-ba8e-96ec5296bb60": {"node_ids": ["966c5a6a-e341-4a71-8042-fbc9949928b7"], "metadata": {"page_label": "353", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "c2016448-1964-4221-a16a-7164170c50e0": {"node_ids": ["dac66998-887e-4681-9fc3-07ec3ad4a866"], "metadata": {"page_label": "354", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "4fb73506-e504-4ef6-9ebb-209d6d6e4e67": {"node_ids": ["66041ea0-b424-4bbb-94b4-813884503118"], "metadata": {"page_label": "355", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "20ab5adb-fbb9-4c3f-a3e9-8bc3b146a444": {"node_ids": ["01f8f556-e964-4947-bc8b-89524c3f82ad"], "metadata": {"page_label": "356", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "b11a67a6-22fe-4810-83c8-e7055b044f8b": {"node_ids": ["a87c4aba-b28a-4bcd-b1ad-fccc4ff2009d"], "metadata": {"page_label": "357", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "5b83efbb-b597-47c3-9e73-dea1b9c140ea": {"node_ids": ["7e0f7295-7d2b-4a11-be02-956aa9872c26"], "metadata": {"page_label": "358", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "312a0ba3-2636-49cd-8f74-147c0b737526": {"node_ids": ["cf5eaca9-b384-4147-8e21-af4f96911ebb"], "metadata": {"page_label": "359", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "7ce190cf-fbec-4c1f-bd87-7598b9135d4e": {"node_ids": ["958ca296-479c-4728-8ddc-21cdb0687966"], "metadata": {"page_label": "360", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "27de5341-77b5-4507-a0b0-7d55aad02307": {"node_ids": ["e5d271b6-7b51-4591-a895-b38a8a5438c5"], "metadata": {"page_label": "361", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "16aa8a06-916c-44ae-a82a-ca93ecaad650": {"node_ids": ["dfbe26cf-2957-4d0c-835e-b5dee8462dcf"], "metadata": {"page_label": "362", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "381ccfae-363f-44d6-bcd1-bfd2c18c58ef": {"node_ids": ["23a9789d-e004-4a3e-9558-f1b8465e8596"], "metadata": {"page_label": "363", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "10e414d4-5721-4363-8589-5cebe57d41aa": {"node_ids": ["19a2a328-9fc9-4775-b1d7-7369cde9a6e1"], "metadata": {"page_label": "364", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "71ed852d-8c02-4e42-aa6d-62ddfc0759b0": {"node_ids": ["1428cd47-1143-4ba7-94a7-55fc9843ecdd"], "metadata": {"page_label": "365", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "15b9b00a-e699-47e2-a05c-bc5cdb7382f4": {"node_ids": ["27f4ff16-7b26-4623-9ea7-14750830704c"], "metadata": {"page_label": "366", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "b5c06862-7ceb-47b0-896b-fb287a4b9aeb": {"node_ids": ["441ff464-d5ca-45f9-8d24-df208320f0d6"], "metadata": {"page_label": "367", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "f4731075-6b5c-401f-81e6-b221ca4e5582": {"node_ids": ["198e4a4d-4852-4138-84f0-cf895f47d3e9"], "metadata": {"page_label": "368", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "338f2b27-782f-44ba-a55c-b486572fe93f": {"node_ids": ["483f114a-8dd7-4a08-ae51-b4fdf73cfa7b"], "metadata": {"page_label": "369", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "ddbcb631-dc2d-483a-abae-bff3d5d6a4cf": {"node_ids": ["eebd701c-a79c-41c2-9b5c-701b18d75300"], "metadata": {"page_label": "370", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "cc5b5ce0-c3ea-4d42-89b2-0b31bb859903": {"node_ids": ["c7ed935e-ea1a-4e20-a7f3-b68899650ea2"], "metadata": {"page_label": "371", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "820a4896-88f4-49f2-abce-3b9433c39365": {"node_ids": ["68591237-dbc5-4b74-a449-bf1ffdf841f7"], "metadata": {"page_label": "372", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "6a18345d-a554-40e4-9fc7-526e9354b2a8": {"node_ids": ["7ff0caff-8857-46b3-8578-32e050614d09"], "metadata": {"page_label": "373", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "8d6afc77-a292-418f-af4e-358d9d8ed358": {"node_ids": ["a9b20b38-ed37-4220-b3af-75f5c2f2c423"], "metadata": {"page_label": "374", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "e5c520a0-6806-477c-bbae-37598c6df915": {"node_ids": ["95163fc5-e261-4871-91f7-3b7e7e2b076e"], "metadata": {"page_label": "375", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "fb1ed94e-bce4-44af-a6db-f8fd5ca28eb7": {"node_ids": ["60ea1ec0-65bb-48be-a025-a8fc53de8bf7"], "metadata": {"page_label": "376", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "72a9260c-df08-4e16-bf0a-0774b8fe1a71": {"node_ids": ["755bfad9-cf6a-49b7-b56d-a263b2f1a80b"], "metadata": {"page_label": "377", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "f73ea96e-60eb-4892-a798-f980f0bff6e3": {"node_ids": ["a8b809e3-7406-4efd-b55f-1db94c2b35c9"], "metadata": {"page_label": "378", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "32e77581-79ec-4b01-8f43-00a6c2c3fdf5": {"node_ids": ["fbc870d0-435a-46de-b179-7972d167def0"], "metadata": {"page_label": "379", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "9c95c66f-e9d9-4abe-a60f-746bc1dd4935": {"node_ids": ["32c05704-c22d-4cf3-bb9c-2213e31e4c56"], "metadata": {"page_label": "380", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "26519c46-edb3-43e4-8d90-422165aca48b": {"node_ids": ["6de4a3cb-45b9-4c17-862c-fec05ff3e598"], "metadata": {"page_label": "381", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "1f2ce779-93a8-4fef-bda8-a19d94d54243": {"node_ids": ["514c2513-80da-445a-a961-c7e2e4366df5"], "metadata": {"page_label": "382", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "0043885e-1378-413e-a548-74b9c628ab46": {"node_ids": ["dbeacf70-54f0-4f85-8719-776e9d37c26f"], "metadata": {"page_label": "383", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "30b6e3dd-42d5-4dd6-b589-a9bd6cf3f22d": {"node_ids": ["cbd12b7b-4ae2-474f-a1d8-f14df54e761f"], "metadata": {"page_label": "384", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "dcd5f10b-f226-478a-999d-995891868203": {"node_ids": ["7dae93f3-3689-43ce-b10f-cf06f0883442"], "metadata": {"page_label": "385", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "c9af7c98-eb43-4db1-a38a-54ec4eee41be": {"node_ids": ["a8c0473a-c9bd-4e0f-80d3-fd3fc5e5e98a"], "metadata": {"page_label": "386", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "892d3aef-c9d1-48a5-b57a-6cd4fa5d9863": {"node_ids": ["7199e7b8-d4f8-4085-ab63-2ed30da36b4b"], "metadata": {"page_label": "387", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "22614239-561d-4fc5-87f1-eaf86076eaa0": {"node_ids": ["eb5deb60-bbbe-4aaf-a373-5d661ea68066"], "metadata": {"page_label": "388", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "e2c03cea-a62a-42cb-8d60-71e789622c3b": {"node_ids": ["cebf494d-d667-42f5-b307-dcea5d9e1467"], "metadata": {"page_label": "389", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "ae234c2e-fdaa-4e9b-8038-94ac4f4fda69": {"node_ids": ["7d17c0bb-ae64-4748-ab3d-ad68cbd9ae9d"], "metadata": {"page_label": "390", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "08c73780-3134-4bd9-8c40-9eb443ab6e3a": {"node_ids": ["f71e9082-cc7d-4414-af8e-0436fcae90b3"], "metadata": {"page_label": "391", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "488eaf08-9f55-4810-936a-97a96649a9b2": {"node_ids": ["6482065d-76af-4436-969e-46004997fe12"], "metadata": {"page_label": "392", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "cfe6b720-02c2-4214-9f7c-9d2cf7f4385d": {"node_ids": ["884d2608-6749-4ad4-a3f1-ff82cda1515e"], "metadata": {"page_label": "393", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "26e2b798-f0e9-4d1a-ba92-98746ab879bf": {"node_ids": ["0f29a414-81f9-471a-8d9e-0c4f5606e921"], "metadata": {"page_label": "394", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "02f8a7ae-d6aa-4d97-a9a2-857a233b311c": {"node_ids": ["c87de3f5-811e-4c7d-a187-74d4d75c1f14"], "metadata": {"page_label": "395", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "987c6423-77f3-4b64-816f-83f743c91633": {"node_ids": ["8c9e82ff-8a00-4156-a48a-b5144ffa5e7a"], "metadata": {"page_label": "396", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "aafdec8f-fddc-4cca-ae80-543e93b3bec5": {"node_ids": ["aab40873-3a23-4bc0-b0a3-f0c4dd38094a"], "metadata": {"page_label": "397", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "dd791c9e-657a-4ef0-93ee-cf37d8dc5332": {"node_ids": ["b3b21193-ce4f-4e55-b8c5-61d2da051853"], "metadata": {"page_label": "398", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "931bdb33-06f1-40a7-8dd9-4b917a6314bf": {"node_ids": ["ac54cccd-adda-4022-865d-5177c09a50b4"], "metadata": {"page_label": "399", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "e6e44a4e-9d3f-43e8-ba25-535594dd4aa0": {"node_ids": ["2050e05c-85c7-41bf-a530-141375237e42"], "metadata": {"page_label": "400", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "f25dd720-f220-46bf-a1c4-ae068389e06d": {"node_ids": ["5770b204-a2ad-4bca-ad9b-f1738d948297"], "metadata": {"page_label": "401", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "e1abab88-31cf-4b5c-b5bb-362d5d9e4781": {"node_ids": ["b799ea19-9b60-4247-9ce5-77576678f320"], "metadata": {"page_label": "402", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "c1abd69b-a996-4547-bcb9-339850e2c578": {"node_ids": ["7d8d5c9e-b5ac-40b0-ba8c-ff594814c15d"], "metadata": {"page_label": "403", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "c33d8504-783b-4537-888a-f234e269cae4": {"node_ids": ["e8bcec72-c459-4b7a-b2de-9dac3c84689a"], "metadata": {"page_label": "404", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "a6b81d63-4c32-493d-8316-234b60f12875": {"node_ids": ["2b79ac6e-7d17-4262-bddf-29c28e6fca72"], "metadata": {"page_label": "405", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "0de56f77-8aa8-4ec8-a802-6b6ad83a501e": {"node_ids": ["39f97a02-75f4-4a96-addc-416a78d06b5c"], "metadata": {"page_label": "406", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "9c0f3155-8c2c-48bf-b5bf-e15a3da8bdf2": {"node_ids": ["ec4bbc3b-1767-44cd-82e4-813540363b85"], "metadata": {"page_label": "407", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "c411f31e-f296-4c85-bfc3-0f68548c4f69": {"node_ids": ["9ea63d69-fe8d-411d-95ce-5b9f2101e157"], "metadata": {"page_label": "408", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "6d1ce695-b5af-4526-a3ec-fecb8f85e3b5": {"node_ids": ["3c800d40-2698-4ab4-a2d3-b6c6b2a34536"], "metadata": {"page_label": "409", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "dd6cdf54-ffb8-4c73-9efc-eb3d4f946350": {"node_ids": ["ed98a415-a6c5-4be2-ba78-96d57900bcad"], "metadata": {"page_label": "410", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "546fe59b-fdfe-4bfd-a820-5ea7d5794393": {"node_ids": ["c62347d2-78cc-4546-af10-9a086aeb4677"], "metadata": {"page_label": "411", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "e7d938f0-7ef2-4eab-9e6a-95bf5e2be284": {"node_ids": ["fa724cec-cda8-4107-abbd-c42fe85dd9de"], "metadata": {"page_label": "412", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "37c3ed5b-5261-4f6d-8466-058a5f1f4fb6": {"node_ids": ["ea5827ca-3200-41b9-a8a4-6b2d0990b303"], "metadata": {"page_label": "413", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "33cafa41-ffcd-4e91-bb7c-4ca9df73e40f": {"node_ids": ["5af7aea4-0232-46a4-8a4f-c1cc3a35ea5b"], "metadata": {"page_label": "414", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "8006b6a6-f025-427c-a9ee-64a2f7d74b4c": {"node_ids": ["74017acd-c5ca-42c7-8a89-60674fa0b0cc"], "metadata": {"page_label": "415", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "1b9de640-2e82-49c9-8283-6f356fdc20dc": {"node_ids": ["d93cb93d-8f28-4f63-ba6a-b2f1756a6db3"], "metadata": {"page_label": "416", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "536c6f6d-d678-4823-9df6-887f3c47ea25": {"node_ids": ["b8b9bff1-704d-4271-8716-5a0b4a2c1138"], "metadata": {"page_label": "417", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "b708cdae-27ac-4c9c-8252-8df30880b6a8": {"node_ids": ["7066b7ba-994b-4574-a2e1-8239d3114875"], "metadata": {"page_label": "418", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "1d43cdc9-5010-4304-a79d-2f24f2cb55f7": {"node_ids": ["f7665667-7d8a-4eaf-9f45-40365569dc9c"], "metadata": {"page_label": "419", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "e81c45a2-a91c-4b69-9654-6f1da0af7b5e": {"node_ids": ["0b9ed90f-3143-4bc5-9fed-c78e1c8937da"], "metadata": {"page_label": "420", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "f7b148de-ae43-4768-938a-ef3766e5e9a4": {"node_ids": ["6b44f320-ef24-4181-8b75-d003e0e7f8ce"], "metadata": {"page_label": "421", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "47d17c0f-09a1-4258-aa58-44959dc97871": {"node_ids": ["3e29309c-b57d-4cad-ac6a-d4f2b42ab19b"], "metadata": {"page_label": "422", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "ffe717a0-768a-476a-9174-7211a73454b2": {"node_ids": ["b60262cd-fc44-4011-9179-c4129091aa22"], "metadata": {"page_label": "423", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "399997b9-1df2-4c52-84e3-41cc1050c6b9": {"node_ids": ["2aae16a3-6d2f-4c84-93cf-06f30c6071b5"], "metadata": {"page_label": "424", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "d2bbed9b-4123-4f0c-a92b-065160dfb8bf": {"node_ids": ["64847861-d60d-4fd9-b6c0-75b4421d5237"], "metadata": {"page_label": "425", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "dae7bf9d-b45d-4b39-a0ab-5ae486f4693b": {"node_ids": ["d080e9be-8bf3-4c8a-a0bf-571c2151ac57"], "metadata": {"page_label": "426", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "a5ea1280-ff56-4911-bbe8-5025bed9be20": {"node_ids": ["accd6aea-523f-4f1d-a086-c1d499b9cd00"], "metadata": {"page_label": "427", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "7cc854e3-937d-4bfb-aa1b-3ae33b8a8f99": {"node_ids": ["3bb80efc-ef0e-4f04-97be-5066366d56a8"], "metadata": {"page_label": "428", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "66769a97-e4d4-43d1-8c23-d7018b141c41": {"node_ids": ["1a192d56-6674-4096-a405-9749a86ef0ae"], "metadata": {"page_label": "429", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}, "0c3d1ed3-e7f3-40b9-98cb-53f523098891": {"node_ids": ["0f039e7f-c18b-4470-b56f-d816de1b759b"], "metadata": {"page_label": "430", "file_name": "reversing-for-everyone.pdf", "file_path": "files/reversing-for-everyone.pdf", "file_type": "application/pdf", "file_size": 25112355, "creation_date": "2024-08-02", "last_modified_date": "2024-08-02"}}}}